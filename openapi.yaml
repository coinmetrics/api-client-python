openapi: 3.0.2

info:
  title: Coin Metrics API v4
  description: >-
    [Coin Metrics Homepage](https://coinmetrics.io/)<br/>
    [API Backward Compatibility Policy](https://docs.coinmetrics.io/access-our-data/api#backward-compatibility)<br/>
    [Python API Client](https://coinmetrics.github.io/api-client-python/site/index.html)<br/><br/>

    HTTP API root endpoint URL is `https://api.coinmetrics.io/v4`. Coin Metrics&apos; paid product.<br/>
    WebSocket API root endpoint is `wss://api.coinmetrics.io/v4`. Coin Metrics&apos; paid product.<br/><br/>
    The Community HTTP API root endpoint URL is `https://community-api.coinmetrics.io/v4`. API key is not required when accessing community endpoints.
    Available to the community under the [Creative Commons](https://creativecommons.org/licenses/by-nc/4.0/) license.

    # Authentication

    <!-- ReDoc-Inject: <security-definitions> -->

    # Response headers

    Note that Coin Metrics API responses have a `CF-RAY` HTTP header e.g. `88a6ec1d2f930774-IAD` which can be used for diagnostic purposes.
    When raising Support requests, please ensure to provide the value of this header. 

  termsOfService: https://coinmetrics.io/api/terms
  contact:
    name: Coin Metrics Support
    url: https://coinmetrics.io/support/
    email: support@coinmetrics.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 4.0.0 # of this document

servers:
  - url: https://api.coinmetrics.io/v4
  - url: wss://api.coinmetrics.io/v4
  - url: https://community-api.coinmetrics.io/v4

tags:

  - name: Rate limits
    description: >-
      To ensure the quality of Coin Metrics services, API is subject to rate limiting.<br/>
      The community version of API has the limit of 10 requests per 6 seconds sliding window for an IP address.<br/>
      The trial version of API has the limit of 10 requests per 6 seconds sliding window for an API key.<br/>
      The paid version of API has the limit of 6000 requests per 20 seconds sliding window for an API key.<br/>
      The paid and community versions of the API have a limit of 10 parallel HTTP requests, after this limit is
      reached further parallel requests will be queued, so performance will be slower. <br/>
      The paid version of API has a limit of 200 concurrent websocket connections for an API Key. <br/>
      If you reach the request-per-second limit, API starts to return `429 Too Many Requests` HTTP response status.<br/>
      API also provides `X-RateLimit-*` response headers formatted according to https://tools.ietf.org/html/draft-polli-ratelimit-headers-03.

  - name: Reference Data
    description: >-
      Metadata information of entities supported by Coin Metrics.

  - name: Catalog
    x-displayName: Catalog (deprecated)
    description: >-
      Catalog of available for your `api_key` data.<br/>
      Use the [Full catalog](#tag/Full-catalog) endpoints for the full list of supported by Coin Metrics data.
      <br/>DEPRECATED: See https://coinmetrics.io/important-changes-to-coin-metrics-api-catalog-endpoints/. 

  - name: Catalog v2
    description: >-
      Catalog of available for your `api_key` data.<br/>
      Use the [Full catalog V2](#tag/Full-catalog-v2) endpoints for the full list of supported by Coin Metrics data.

  - name: Full catalog
    x-displayName: Full catalog (deprecated)
    description: >-
      The Full catalog returns the full range of data that is supported by Coin Metrics across all our products.<br/>
      If you are a client looking to understand the data that is available for your API key and data license, please use the [Catalog](#tag/Catalog) endpoint.
      <br/>DEPRECATED: See https://coinmetrics.io/important-changes-to-coin-metrics-api-catalog-endpoints/.       

  - name: Full catalog v2
    description: >-
      The Full catalog returns the full range of data that is supported by Coin Metrics across all our products.<br/>
      If you are a client looking to understand the data that is available for your API key and data license, please use the [Catalog](#tag/Catalog-v2) endpoint.

  - name: Timeseries
    description: Endpoints for fetching metrics, market data, indexes and other time series data.

  - name: Timeseries stream
    description: WebSocket endpoints for getting a real-time stream of metrics, market data, indexes and other time series data.

  - name: Taxonomy
    description: Taxonomy endpoints

  - name: Taxonomy Metadata
    description: Taxonomy Metadata endpoints

  - name: Profile
    description: Profile endpoints

  - name: List of blockchain entities v2
    description: Endpoints for fetching lists of blockchain entities.

  - name: Full blockchain entities v2
    description: Endpoints for fetching full blockchain entities.

  - name: Jobs
    description: Jobs API endpoints

  - name: Blockchain Explorer Job
    description: Endpoints for creating async jobs for blockchain entities.

  - name: Blockchain Explorer Job Results
    description: Schema definitions of results of Blockchain Explorer Job endpoints.

  - name: Chain Monitor tools
    description: Endpoints for working with chain monitor data.

  - name: Security Master
    description: Security Master endpoints

  - name: Constituent Snapshots
    description: Endpoints for getting the snapshots of various constituents

  - name: Constituent Timeframes
    description: Endpoints for getting the timeframes of various constituents

  - name: Blockchain Metadata
    description: Blockchain metadata endpoints


x-tagGroups: # ReDoc-specific vendor extension
  - name: General
    tags:
      - Rate limits

  - name: Reference Data
    tags:
      - Reference Data
      - Profile
      - Taxonomy
      - Taxonomy Metadata

  - name: Catalog
    tags:
      - Catalog
      - Full catalog
      - Catalog v2
      - Full catalog v2

  - name: Timeseries
    tags:
      - Timeseries
      - Timeseries stream

  - name: Universal blockchain explorer
    tags:
      - List of blockchain entities v2
      - Full blockchain entities v2
      - Blockchain Explorer Job
      - Blockchain Explorer Job Results

  - name: Tools
    tags:
      - Chain Monitor tools

  - name: Security Master
    tags:
      - Security Master

  - name: Constituents
    tags:
      - Constituent Snapshots
      - Constituent Timeframes

  - name: Blockchain Metadata
    tags:
      - Blockchain Metadata

  - name: Jobs
    tags:
      - Jobs


paths:

  /reference-data/assets:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Assets
      description: Returns a list of assets metadata.
      operationId: getReferenceDataAssets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/assets?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/assets?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataAssets'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/exchanges:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Exchanges
      description: Returns a list of exchanges metadata.
      operationId: getReferenceDataExchanges
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/exchanges?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/exchanges?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataExchanges'
        400:
          $ref: '#/components/responses/ExchangeNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/markets:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Markets
      description: Returns a list of markets metadata.
      operationId: getReferenceDataMarkets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/markets?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/markets?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataMarkets'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/indexes:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Indexes
      description: Returns a list of indexes metadata.
      operationId: getReferenceDataIndexes
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/indexes?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/indexes?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataIndexes'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/pairs:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Pairs
      description: Returns a list of pairs metadata.
      operationId: getReferenceDataPairs
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/pair-metrics?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/pair-metrics?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataPairs'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Asset metrics
      description: Returns a list of asset metrics metadata.
      operationId: getReferenceDataAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/asset-metrics?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/asset-metrics?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataAssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/exchange-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Exchange metrics
      description: Returns a list of exchange metrics metadata.
      operationId: getReferenceDataExchangeMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/exchange-metrics?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/exchange-metrics?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataExchangeMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/exchange-asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Exchange asset metrics
      description: Returns a list of exchange asset metrics metadata.
      operationId: getReferenceDataExchangeAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/exchange-asset-metrics?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/exchange-asset-metrics?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataExchangeAssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/pair-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Pair metrics
      description: Returns a list of pair metrics metadata.
      operationId: getReferenceDataPairMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/pair-metrics?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/pair-metrics?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataPairMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/institution-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Institution metrics
      description: Returns a list of institution metrics metadata.
      operationId: getReferenceDataInstitutionMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/institution-metrics?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/institution-metrics?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataInstitutionMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /reference-data/market-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market metrics
      description: Returns a list of market metrics metadata.
      operationId: getReferenceDataMarketMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/reference-data/market-metrics?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/reference-data/market-metrics?api_key=<your_key>').json()
            print(response)
      tags:
        - Reference Data
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ReferenceDataMarketMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /constituent-snapshots/asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Snapshots of asset metric constituents
      description: |
        Returns snapshots of asset metric constituents. \
        Results are sorted by tuple (`time`, `constituent_name`), where `constituent_name` depends on a target metric. 
        E.g., the `volume_trusted_spot_usd_1d` metric constituents are exchanges, 
        i.e. the output will be sorted by (`time`, `exchange`).
      operationId: getConstituentSnapshotsAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            # Gets snapshots of asset metric constituents
            curl --compressed "https://api.coinmetrics.io/v4/constituent-snapshots/asset-metrics?metric=volume_trusted_spot_usd_1d&api_key=<your_key>"
        - label: Python
          source: |
            # Gets snapshots of asset metric constituents
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/constituent-snapshots/asset-metrics?metric=volume_trusted_spot_usd_1d&api_key=<your_key>').json()
            print(response)
      tags:
        - Constituent Snapshots
      parameters:
        - $ref: '#/components/parameters/ConstituentsMetricName'
        - $ref: '#/components/parameters/ConstituentsAtTime'
        - $ref: '#/components/parameters/ConstituentsStartTime'
        - $ref: '#/components/parameters/ConstituentsEndTime'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/AssetMetricsConstituentSnapshots'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /constituent-timeframes/asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Timeframes of asset metric constituents
      description: |
        Returns timeframes of asset metric constituents. \
        Results are sorted by tuple (`start_time`, `constituent_name`), where constituent depends on a target metric. 
        E.g., the `volume_trusted_spot_usd_1d` metric constituents are exchanges, 
        i.e. the output will be sorted by (`start_time`, `exchange`).
      operationId: getConstituentTimeframesAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            # Gets timeframes of asset metric constituents
            curl --compressed "https://api.coinmetrics.io/v4/constituent-timeframes/asset-metrics?metric=volume_trusted_spot_usd_1d&api_key=<your_key>"
        - label: Python
          source: |
            # Gets timeframes of asset metric constituents
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/constituent-timeframes/asset-metrics?metric=volume_trusted_spot_usd_1d&api_key=<your_key>').json()
            print(response)
      tags:
        - Constituent Timeframes
      parameters:
        - $ref: '#/components/parameters/ConstituentsMetricName'
        - $ref: '#/components/parameters/ConstituentId'
        - $ref: '#/components/parameters/ConstituentsStartTime'
        - $ref: '#/components/parameters/ConstituentsEndTime'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/AssetMetricsConstituentTimeframes'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/assets:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available assets
      description: Returns a list of available assets along with information for them like metrics, markets, exchanges and time ranges of available data.
      operationId: getCatalogAssets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/assets?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/assets?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/CatalogAssetIncludeFields'
        - $ref: '#/components/parameters/CatalogAssetExcludeFields'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Assets'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available metrics
      description: Returns a list of available metrics along with information for them like
        description, category and assets for which a metric is available.</br>This endpoint is deprecated, please use [/catalog/asset-metrics](#operation/getCatalogAssetMetrics) instead.
      operationId: getCatalogMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available asset metrics
      description: Returns a list of available asset metrics along with information for them like
        description, category and assets for which a metric is available.
      operationId: getCatalogAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/asset-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/asset-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/exchange-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available exchange metrics
      description: Returns a list of available exchange metrics along with information for them like
        description, category and exchanges for which a metric is available.
      operationId: getCatalogExchangeMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/exchange-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/exchange-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogExchangeMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/exchange-asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available exchange-asset metrics
      description: Returns a list of available exchange-asset metrics along with information for them like
        description, category and exchange-asset pairs for which a metric is available.
      operationId: getCatalogExchangeAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/exchange-asset-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/exchange-asset-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogExchangeAssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/pair-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available pair metrics
      description: Returns a list of available pair metrics along with information for them like
        description, category and pairs for which a metric is available.
      operationId: getCatalogPairMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/pair-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/pair-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogPairMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/institution-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available institution metrics
      description: Returns a list of available institution metrics along with information for them like
        description, category and institutions for which a metric is available.
      operationId: getCatalogInstitutionMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/institution-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/institution-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogInstitutionMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/exchanges:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available exchanges
      description: Returns a list of available exchanges along with available markets for them.
      operationId: getCatalogExchanges
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/exchanges?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/exchanges?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Exchanges'
        400:
          $ref: '#/components/responses/ExchangeNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog/exchange-assets:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available exchange-asset pairs
      description: Returns a list of available exchange-asset pairs along with information for them like metrics and time ranges of available data.
      operationId: getCatalogExchangeAssets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/exchange-assets?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/exchange-assets?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ExchangeAssets'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/pairs:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available asset pairs
      description: Returns a list of available asset pairs along with information for them like metrics and time ranges of available data.
      operationId: getCatalogAssetPairs
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/pairs?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/pairs?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Pairs'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/pair-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available asset pair candles
      description: Returns a list of available asset pair candles along with the time ranges of available data per candle duration.
      operationId: getCatalogPairCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/pair-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/pair-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogPairCandles'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/institutions:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available institutions
      description: Returns a list of available institutions along with information for them like metrics and time ranges of available data.
      operationId: getCatalogInstitutions
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/institutions?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/institutions?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogInstitutionId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Institutions'
        400:
          $ref: '#/components/responses/InstitutionNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog/markets:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available markets
      description: Returns a list of available markets along with time ranges of available data.
      operationId: getCatalogMarkets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/markets?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/markets?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogMarketIncludeFields'
        - $ref: '#/components/parameters/CatalogMarketExcludeFields'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Markets'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-trades:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market trades
      description: Returns a list of markets with trades support along with the time ranges of available data.
      operationId: getCatalogMarketTrades
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-trades?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-trades?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketTrades'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market candles
      description: Returns a list of markets with candles support along with the time ranges of available data per candle duration.
      operationId: getCatalogMarketCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-candles?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketCandles'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-orderbooks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market orderbooks
      description: Returns a list of markets with orderbooks support along with the time ranges of available data.
      operationId: getCatalogMarketOrderbooks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-orderbooks?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-orderbooks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketOrderbooks'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-quotes:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market quotes
      description: Returns a list of markets with quotes support along with the time ranges of available data.
      operationId: getCatalogMarketQuotes
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-quotes?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-quotes?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketQuotes'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-funding-rates:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market funding rates
      description: Returns a list of markets with funding rates support along with the time ranges of available data.
      operationId: getCatalogMarketFundingRates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-funding-rates?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-funding-rates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketFundingRates'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-contract-prices:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market contract prices
      description: Returns a list of contract prices for option market.
      operationId: getCatalogMarketContractPrices
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-contract-prices?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-contract-prices?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketContractPrices'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-implied-volatility:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market implied volatility
      description: Returns a list of implied volatility for option market.
      operationId: getCatalogMarketImpliedVolatility
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-implied-volatility?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-implied-volatility?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketImpliedVolatility'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-greeks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market greeks
      description: Returns a list of greeks for option market.
      operationId: getCatalogMarketGreeks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-greeks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-greeks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketGreeks'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-openinterest:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market open interest
      description: Returns a list of markets with open interest support along with the time ranges of available data.
      operationId: getCatalogMarketOpeninterest
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-openinterest?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-openinterest?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketOpeninterest'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-liquidations:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market liquidations
      description: Returns a list of markets with liquidations support along with the time ranges of available data.
      operationId: getCatalogMarketLiquidations
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-liquidations?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-liquidations?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketLiquidations'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/market-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available market metrics
      description: Returns a list of markets with metrics support along with the time ranges of available data per metric.
      operationId: getCatalogMarketMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/market-metrics?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/market-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketMetrics'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/indexes:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available indexes
      description: Returns a list of available indexes along with time ranges of available data.
      operationId: getCatalogIndexes
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/indexes?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/indexes?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Indexes'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/index-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available index candles
      description: Returns a list of available index candles along with the time ranges of available data per candle duration.
      operationId: getCatalogIndexCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/index-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/index-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogIndexCandles'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/asset-alerts:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available asset alerts
      description: Returns a list of available asset alerts along with their descriptions, thresholds and constituents.
      operationId: getCatalogAssetAlertRules
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/asset-alerts?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/asset-alerts?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/CatalogAssetAlertId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/AssetAlertRules'
        404:
          $ref: '#/components/responses/AssetAlertNotFound'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/asset-chains:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available asset chains
      description: Returns a list of available assets for the asset-chains endpoint along with time ranges of available data.
      operationId: getCatalogAssetChains
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/asset-chains?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/asset-chains?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAssetChains'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/mempool-feerates:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available mempool feerates
      description: Returns a list of available assets for the mempool-feerates endpoint along with time ranges of available data.
      operationId: getCatalogMempoolFeerates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/mempool-feerates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/mempool-feerates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMempoolFeerates'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/mining-pool-tips-summary:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available mining pool tips summaries
      description: Returns a list of available assets for the mining-pool-tips-summary endpoint along with time ranges of available data.
      operationId: getCatalogMiningPoolTipsSummary
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/mining-pool-tips-summary?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/mining-pool-tips-summary?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMiningPoolTipsSummary'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog/transaction-tracker:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Available transaction tracker assets
      description: Returns a list of available assets for the transaction-tracker endpoint along with time ranges of available data.
      operationId: getCatalogTransactionTracker
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog/transaction-tracker?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog/transaction-tracker?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogTransactionTracker'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/assets:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported assets
      description: Returns a list of all supported assets along with information for them like metrics, markets, exchanges and time ranges of available data.
      operationId: getCatalogAllAssets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/assets?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/assets?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/CatalogAssetIncludeFields'
        - $ref: '#/components/parameters/CatalogAssetExcludeFields'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Assets'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported metrics
      description: Returns a list of all supported metrics along with information for them like
        description, category and assets for which a metric is available.</br>This endpoint is deprecated, please use [/catalog-all/asset-metrics](#operation/getCatalogAllAssetMetrics) instead.
      operationId: getCatalogAllMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported asset metrics
      description: Returns a list of all supported asset metrics along with information for them like
        description, category and assets for which a metric is available.
      operationId: getCatalogAllAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/asset-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/asset-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/exchange-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported exchange metrics
      description: Returns a list of all supported exchange metrics along with information for them like
        description, category and exchanges for which a metric is available.
      operationId: getCatalogAllExchangeMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/exchange-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/exchange-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogExchangeMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/exchange-asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported exchange-asset metrics
      description: Returns a list of all supported exchange-asset metrics along with information for them like
        description, category and exchange-asset pairs for which a metric is available.
      operationId: getCatalogAllExchangeAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/exchange-asset-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/exchange-asset-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogExchangeAssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/pair-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported pair metrics
      description: Returns a list of all supported pair metrics along with information for them like
        description, category and pairs for which a metric is available.
      operationId: getCatalogAllPairMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/pair-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/pair-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogPairMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/institution-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported institution metrics
      description: Returns a list of all supported institution metrics along with information for them like
        description, category and institutions for which a metric is available.
      operationId: getCatalogAllInstitutionMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/institution-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/institution-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogInstitutionMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/exchanges:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported exchanges
      description: Returns a list of all supported exchanges along with available markets for them.
      operationId: getCatalogAllExchanges
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/exchanges?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/exchanges?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Exchanges'
        400:
          $ref: '#/components/responses/ExchangeNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog-all/exchange-assets:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported exchange-asset pairs
      description: Returns a list of all supported exchange-asset pairs along with information for them like metrics and time ranges of available data.
      operationId: getCatalogAllExchangeAssets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/exchange-assets?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/exchange-assets?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/ExchangeAssets'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/pairs:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported asset pairs
      description: Returns a list of all supported asset pairs along with information for them like metrics and time ranges of available data.
      operationId: getCatalogAllAssetPairs
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/pairs?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/pairs?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Pairs'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/pair-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported asset pair candles
      description: Returns a list of all supported asset pair candles along with the time ranges of available data per candle duration.
      operationId: getCatalogAllPairCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/pair-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/pair-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogPairCandles'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/institutions:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported institutions
      description: Returns a list of all support institutions along with information for them like metrics and time ranges of available data.
      operationId: getCatalogAllInstitutions
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/institutions?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/institutions?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogInstitutionId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Institutions'
        400:
          $ref: '#/components/responses/InstitutionNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog-all/markets:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported markets
      description: Returns a list of all supported markets along with time ranges of available data.
      operationId: getCatalogAllMarkets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/markets?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/markets?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogMarketIncludeFields'
        - $ref: '#/components/parameters/CatalogMarketExcludeFields'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Markets'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-trades:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market trades
      description: Returns a list of all markets with trades support along with the time ranges of available data.
      operationId: getCatalogAllMarketTrades
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-trades?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-trades?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketTrades'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market candles
      description: Returns a list of all markets with candles support along with time ranges of available data per candle duration.
      operationId: getCatalogAllMarketCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-candles?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketCandles'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-orderbooks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market orderbooks
      description: Returns a list of all markets with orderbooks support along with the time ranges of available data.
      operationId: getCatalogAllMarketOrderbooks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-orderbooks?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-orderbooks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketOrderbooks'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-quotes:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market quotes
      description: Returns a list of all markets with quotes support along with the time ranges of available data.
      operationId: getCatalogAllMarketQuotes
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-quotes?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-quotes?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketQuotes'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-funding-rates:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market funding rates
      description: Returns a list of all markets with funding rates support along with the time ranges of available data.
      operationId: getCatalogAllMarketFundingRates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-funding-rates?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-funding-rates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketFundingRates'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-contract-prices:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market contract prices
      description: Returns a list of all market contract prices for option market.
      operationId: getCatalogAllMarketContractPrices
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-contract-prices?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-contract-prices?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketContractPrices'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-implied-volatility:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market implied volatility
      description: Returns a list of all market implied volatility for option market.
      operationId: getCatalogAllMarketImpliedVolatility
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-implied-volatility?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-implied-volatility?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketImpliedVolatility'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-greeks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market greeks
      description: Returns a list of all market greeks for option market.
      operationId: getCatalogAllMarketGreeks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-greeks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-greeks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketGreeks'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-openinterest:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market open interest
      description: Returns a list of all markets with open interest support along with the time ranges of available data.
      operationId: getCatalogAllMarketOpeninterest
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-openinterest?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-openinterest?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketOpeninterest'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-liquidations:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market liquidations
      description: Returns a list of all markets with liquidations support along with the time ranges of available data.
      operationId: getCatalogAllMarketLiquidations
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-liquidations?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-liquidations?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketLiquidations'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/market-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported market metrics
      description: Returns a list of all markets with market metrics support along with time ranges of available data per metric.
      operationId: getCatalogAllMarketMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/market-metrics?pretty=true&limit=100&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/market-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/CatalogMarketLimit'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMarketMetrics'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/indexes:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported indexes
      description: Returns a list of all supported indexes along with time ranges of available data.
      operationId: getCatalogAllIndexes
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/indexes?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/indexes?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/Indexes'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog-all/index-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported index candles
      description: Returns a list of all supported index candles along with the time ranges of available data per candle duration.
      operationId: getCatalogAllIndexCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/index-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/index-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogIndexCandles'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/asset-alerts:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported asset alerts
      description: Returns a list of all supported asset alerts along with their descriptions, thresholds and constituents.
      operationId: getCatalogAllAssetAlertRules
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/asset-alerts?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/asset-alerts?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/CatalogAssetAlertId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/AssetAlertRules'
        404:
          $ref: '#/components/responses/AssetAlertNotFound'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /catalog-all/asset-chains:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported asset chains
      description: Returns a list of supported assets for the asset-chains endpoint along with time ranges of available data.
      operationId: getCatalogAllAssetChains
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/asset-chains?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/asset-chains?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAssetChains'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/mempool-feerates:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported mempool feerates
      description: Returns a list of supported assets for the mempool-feerates endpoint along with time ranges of available data.
      operationId: getCatalogAllMempoolFeerates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/mempool-feerates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/mempool-feerates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMempoolFeerates'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/mining-pool-tips-summary:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported mining pool tips summaries
      description: Returns a list of supported assets for the mining-pool-tips-summary endpoint along with time ranges of available data.
      operationId: getCatalogAllMiningPoolTipsSummary
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/mining-pool-tips-summary?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/mining-pool-tips-summary?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogMiningPoolTipsSummary'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all/transaction-tracker:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      deprecated: true
      summary: Supported transaction tracker assets
      description: Returns a list of supported assets for the transaction-tracker endpoint along with time ranges of available data.
      operationId: getCatalogAllTransactionTracker
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all/transaction-tracker?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all/transaction-tracker?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogTransactionTracker'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available asset metrics
      description: Returns a list of available asset metrics along with the time ranges of available data.
      operationId: getCatalogV2AssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/asset-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/asset-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2AssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/exchange-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available exchange metrics
      description: Returns a list of available exchange metrics along with the time ranges of available data.
      operationId: getCatalogV2ExchangeMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/exchange-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/exchange-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2ExchangeMetrics'
        400:
          $ref: '#/components/responses/ExchangeNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog-v2/exchange-asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available exchange-asset metrics
      description: Returns a list of available exchange-asset metrics along with the time ranges of available data.
      operationId: getCatalogV2ExchangeAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/exchange-asset-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/exchange-asset-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeAssetId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2ExchangeAssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/pair-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available pair metrics
      description: Returns a list of available pair metrics along with the time ranges of available data.
      operationId: getCatalogV2PairMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/pair-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/pair-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2PairMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/institution-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available institution metrics
      description: Returns a list of available institution metrics along with the time ranges of available data.
      operationId: getCatalogV2InstitutionMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/institution-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/institution-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogInstitutionId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2InstitutionMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-trades:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market trades
      description: Returns a list of markets with trades support along with the time ranges of available data.
      operationId: getCatalogV2MarketTrades
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-trades?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-trades?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketTrades'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market candles
      description: Returns a list of markets with candles support along with the time ranges of available data per candle duration.
      operationId: getCatalogV2MarketCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketCandles'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-orderbooks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market orderbooks
      description: Returns a list of markets with orderbooks support along with the time ranges of available data.
      operationId: getCatalogV2MarketOrderbooks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-orderbooks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-orderbooks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketOrderbooks'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-quotes:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market quotes
      description: Returns a list of markets with quotes support along with the time ranges of available data.
      operationId: getCatalogV2MarketQuotes
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-quotes?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-quotes?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketQuotes'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-funding-rates:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market funding rates
      description: Returns a list of markets with funding rates support along with the time ranges of available data.
      operationId: getCatalogV2MarketFundingRates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-funding-rates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-funding-rates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketFundingRates'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-funding-rates-predicted:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available predicted market funding rates
      description: Returns a list of markets with predicted funding rates support along with the time ranges of available data.
      operationId: getCatalogV2MarketFundingRatesPredicted
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-funding-rates-predicted?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-funding-rates-predicted?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketFundingRatesPredicted'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-contract-prices:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market contract prices
      description: Returns a list of contract prices for option market.
      operationId: getCatalogV2MarketContractPrices
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-contract-prices?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-contract-prices?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketContractPrices'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-implied-volatility:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market implied volatility
      description: Returns a list of implied volatility for option market.
      operationId: getCatalogV2MarketImpliedVolatility
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-implied-volatility?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-implied-volatility?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketImpliedVolatility'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-greeks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market greeks
      description: Returns a list of greeks for option market.
      operationId: getCatalogV2MarketGreeks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-greeks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-greeks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketGreeks'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-openinterest:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market open interest
      description: Returns a list of markets with open interest support along with the time ranges of available data.
      operationId: getCatalogV2MarketOpeninterest
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-openinterest?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-openinterest?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketOpeninterest'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-liquidations:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market liquidations
      description: Returns a list of markets with liquidations support along with the time ranges of available data.
      operationId: getCatalogV2MarketLiquidations
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-liquidations?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-liquidations?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketLiquidations'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/market-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available market metrics
      description: Returns a list of markets with metrics support along with the time ranges of available data per metric.
      operationId: getCatalogV2MarketMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/market-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/market-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MarketMetrics'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/pair-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available pair candles
      description: Returns a list of available asset pair candles along with the time ranges of available data per candle duration.
      operationId: getCatalogV2PairCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/pair-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/pair-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2PairCandles'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/index-levels:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available index levels
      description: Returns a list of available index levels along with time ranges of available data.
      operationId: getCatalogV2IndexLevels
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/index-levels?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/index-levels?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2IndexLevels'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog-v2/index-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Available index candles
      description: Returns a list of available index candles along with the time ranges of available data per candle duration.
      operationId: getCatalogV2IndexCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/index-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/index-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2IndexCandles'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/asset-chains:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available asset chains
      description: Returns a list of available assets for the asset-chains endpoint along with time ranges of available data.
      operationId: getCatalogV2AssetChains
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/asset-chains?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/asset-chains?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2AssetChains'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/mempool-feerates:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available mempool feerates
      description: Returns a list of available assets for the mempool-feerates endpoint along with time ranges of available data.
      operationId: getCatalogV2MempoolFeerates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/mempool-feerates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/mempool-feerates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MempoolFeerates'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/mining-pool-tips-summary:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available mining pool tips summaries
      description: Returns a list of available assets for the mining-pool-tips-summary endpoint along with time ranges of available data.
      operationId: getCatalogV2MiningPoolTipsSummary
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/mining-pool-tips-summary?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/mining-pool-tips-summary?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2MiningPoolTipsSummary'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/transaction-tracker:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available transaction tracker assets
      description: Returns a list of available assets for the transaction-tracker endpoint along with time ranges of available data.
      operationId: getCatalogV2TransactionTracker
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/transaction-tracker?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/transaction-tracker?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2TransactionTracker'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/blockchain-v2/accounts:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available blockchain accounts assets
      description: Returns a list of available assets for the blockchain accounts endpoint along with time ranges of available data.
      operationId: getCatalogV2BlockchainAccounts
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/accounts?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/accounts?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2BlockchainAccounts'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/blockchain-v2/accounts:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available blockchain accounts assets
      description: Returns a list of all supported assets for the blockchain accounts endpoint along with time ranges of available data.
      operationId: getCatalogAllV2BlockchainAccounts
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/accounts?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/accounts?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2BlockchainAccounts'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/blockchain-v2/balance-updates:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available blockchain balance updates assets
      description: Returns a list of available assets for the blockchain balance updates endpoint along with time ranges of available data.
      operationId: getCatalogV2BlockchainBalanceUpdates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/balance-updates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/balance-updates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2BlockchainBalanceUpdates'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/blockchain-v2/balance-updates:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available blockchain balance updates assets
      description: Returns a list of all supported assets for the blockchain balance updates endpoint along with time ranges of available data.
      operationId: getCatalogAllV2BlockchainBalanceUpdates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/balance-updates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/balance-updates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2BlockchainBalanceUpdates'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/blockchain-v2/blocks:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available blockchain block assets
      description: Returns a list of available assets for the blockchain blocks endpoint along with time ranges of available data.
      operationId: getCatalogV2BlockchainBlocks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/blocks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/blocks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2BlockchainBlocks'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/blockchain-v2/blocks:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available blockchain block assets
      description: Returns a list of all supported assets for the blockchain blocks endpoint along with time ranges of available data.
      operationId: getCatalogAllV2BlockchainBlocks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/blocks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/blocks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2BlockchainBlocks'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-v2/blockchain-v2/transactions:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available blockchain transactions assets
      description: Returns a list of available assets for the blockchain transactions endpoint along with time ranges of available data.
      operationId: getCatalogV2BlockchainTransactions
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/transactions?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/transactions?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2BlockchainTransactions'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/blockchain-v2/transactions:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Available blockchain transactions assets
      description: Returns a list of all supported assets for the blockchain transactions endpoint along with time ranges of available data.
      operationId: getCatalogAllV2BlockchainTransactions
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/transactions?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/transactions?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogV2BlockchainTransactions'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported asset metrics
      description: Returns a list of all supported asset metrics along with the time ranges of available data.
      operationId: getCatalogAllV2AssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/asset-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/asset-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/Reviewable'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2AssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/exchange-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported exchange metrics
      description: Returns a list of all supported exchange metrics along with the time ranges of available data.
      operationId: getCatalogAllV2ExchangeMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/exchange-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/exchange-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2ExchangeMetrics'
        400:
          $ref: '#/components/responses/ExchangeNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog-all-v2/exchange-asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported exchange-asset metrics
      description: Returns a list of all supported exchange-asset metrics along with the time ranges of available data.
      operationId: getCatalogAllV2ExchangeAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/exchange-asset-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/exchange-asset-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogExchangeAssetId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2ExchangeAssetMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/pair-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported pair metrics
      description: Returns a list of all supported pair metrics along with the time ranges of available data.
      operationId: getCatalogAllV2PairMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/pair-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/pair-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2PairMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/institution-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported institution metrics
      description: Returns a list of all supported institution metrics along with the time ranges of available data.
      operationId: getCatalogAllV2InstitutionMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/institution-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/institution-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogInstitutionId'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2InstitutionMetrics'
        400:
          $ref: '#/components/responses/MetricNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-trades:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market trades
      description: Returns a list of all markets with trades support along with the time ranges of available data.
      operationId: getCatalogAllV2MarketTrades
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-trades?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-trades?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketTrades'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market candles
      description: Returns a list of all markets with candles support along with time ranges of available data per candle duration.
      operationId: getCatalogAllV2MarketCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketCandles'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-orderbooks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market orderbooks
      description: Returns a list of all markets with orderbooks support along with the time ranges of available data.
      operationId: getCatalogAllV2MarketOrderbooks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-orderbooks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-orderbooks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketOrderbooks'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-quotes:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market quotes
      description: Returns a list of all markets with quotes support along with the time ranges of available data.
      operationId: getCatalogAllV2MarketQuotes
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-quotes?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-quotes?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketQuotes'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-funding-rates:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market funding rates
      description: Returns a list of all markets with funding rates support along with the time ranges of available data.
      operationId: getCatalogAllV2MarketFundingRates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-funding-rates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-funding-rates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketFundingRates'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-funding-rates-predicted:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported predicted market funding rates
      description: Returns a list of all markets with predicted funding rates support along with the time ranges of available data.
      operationId: getCatalogAllV2MarketFundingRatesPredicted
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-funding-rates-predicted?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-funding-rates-predicted?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketFundingRatesPredicted'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-contract-prices:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market contract prices
      description: Returns a list of all market contract prices for option market.
      operationId: getCatalogAllV2MarketContractPrices
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-contract-prices?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-contract-prices?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketContractPrices'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-implied-volatility:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market implied volatility
      description: Returns a list of all market implied volatility for option market.
      operationId: getCatalogAllV2MarketImpliedVolatility
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-implied-volatility?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-implied-volatility?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketImpliedVolatility'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-greeks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market greeks
      description: Returns a list of all market greeks for option market.
      operationId: getCatalogAllV2MarketGreeks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-greeks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-greeks?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketGreeks'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-openinterest:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market open interest
      description: Returns a list of all markets with open interest support along with the time ranges of available data.
      operationId: getCatalogAllV2MarketOpeninterest
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-openinterest?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-openinterest?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketOpeninterest'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-liquidations:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market liquidations
      description: Returns a list of all markets with liquidations support along with the time ranges of available data.
      operationId: getCatalogAllV2MarketLiquidations
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-liquidations?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-liquidations?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketLiquidations'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/market-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported market metrics
      description: Returns a list of all markets with market metrics support along with time ranges of available data per metric.
      operationId: getCatalogAllV2MarketMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/market-metrics?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/market-metrics?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogMarketId'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketType'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/MarketAsset'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/CatalogMetric'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MarketMetrics'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/pair-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported pair candles
      description: Returns a list of all supported asset pair candles along with the time ranges of available data per candle duration.
      operationId: getCatalogAllV2PairCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/pair-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/pair-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogPairId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2PairCandles'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/index-levels:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported index levels
      description: Returns a list of all supported index levels along with time ranges of available data.
      operationId: getCatalogAllV2IndexLevels
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/index-levels?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/index-levels?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2IndexLevels'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
        - api_key: []

  /catalog-all-v2/index-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Supported index candles
      description: Returns a list of all supported index candles along with the time ranges of available data per candle duration.
      operationId: getCatalogAllV2IndexCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/index-candles?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/index-candles?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogIndexId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2IndexCandles'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/asset-chains:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Supported asset chains
      description: Returns a list of all supported assets for the asset-chains endpoint along with time ranges of available data.
      operationId: getCatalogAllV2AssetChains
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/asset-chains?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/asset-chains?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2AssetChains'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/mempool-feerates:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Supported mempool feerates
      description: Returns a list of all supported assets for the mempool-feerates endpoint along with time ranges of available data.
      operationId: getCatalogAllV2MempoolFeerates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/mempool-feerates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/mempool-feerates?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MempoolFeerates'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/mining-pool-tips-summary:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Supported mining pool tips summaries
      description: Returns a list of all supported assets for the mining-pool-tips-summary endpoint along with time ranges of available data.
      operationId: getCatalogAllV2MiningPoolTipsSummary
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/mining-pool-tips-summary?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/mining-pool-tips-summary?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2MiningPoolTipsSummary'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /catalog-all-v2/transaction-tracker:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Supported transaction tracker assets
      description: Returns a list of all supported assets for the transaction-tracker endpoint along with time ranges of available data.
      operationId: getCatalogAllV2TransactionTracker
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/catalog-all-v2/transaction-tracker?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/catalog-all-v2/transaction-tracker?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Full catalog v2
      parameters:
        - $ref: '#/components/parameters/CatalogAssetId'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/CatalogAllV2TransactionTracker'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Asset metrics
      description: >-
        Returns requested metrics for specified assets.<br/><br/>
        Results for block by block metrics (`1b` frequency) are ordered by tuple `(asset, height, block_hash)`, all other metrics are ordered by tuple `(asset, time)`. You can change the sorting using `sort` query parameter.<br/><br/>
        Supported output formats are `json` (default), `json_stream` and `csv`. Use the `format` query parameter to override it.<br/>
        To fetch the next page of results use `next_page_url` JSON response field or `x-next-page-url` CSV HTTP header if present.<br/><br/>
        If multiple metrics are requested in the same time the strict policy for partially available metrics among requested ones is applied:
        <ul>
          <li>missing metric name in the JSON response means that the metric is "not a supported metric" for the asset and frequency while some other requested metrics are supported.</li>
          <li>`null` value of the metric means "no data in the database" while some other requested metrics have data.</li>
        </ul>
      operationId: getTimeseriesAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/asset-metrics?assets=btc&metrics=PriceUSD,FlowInGEMUSD&frequency=1d&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/asset-metrics?assets=btc&metrics=PriceUSD,FlowInGEMUSD&frequency=1d&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/AssetMetricsAssetId'
        - $ref: '#/components/parameters/AssetMetrics'
        - $ref: '#/components/parameters/AssetMetricsFrequency'
        - $ref: '#/components/parameters/Status'
        - $ref: '#/components/parameters/StartTimeMutuallyExclusiveWithHeightAndHash'
        - $ref: '#/components/parameters/EndTimeMutuallyExclusiveWithHeightAndHash'
        - $ref: '#/components/parameters/StartHeightMutuallyExclusiveWithTimeAndHash'
        - $ref: '#/components/parameters/EndHeightMutuallyExclusiveWithTimeAndHash'
        - $ref: '#/components/parameters/StartHash'
        - $ref: '#/components/parameters/EndHash'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/MinConfirmations'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/LimitPerAsset'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/ResponseFormat'
        - $ref: '#/components/parameters/NullAsZero'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/IgnoreForbiddenErrors'
        - $ref: '#/components/parameters/IgnoreUnsupportedErrors'
      responses:
        200:
          $ref: '#/components/responses/AssetMetrics'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/exchange-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Exchange metrics
      description: >-
        Returns metrics for specified exchanges.<br/>
        Results are ordered by tuple `(exchange, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getTimeseriesExchangeMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/exchange-metrics?exchanges=binance&metrics=volume_reported_spot_usd_1d&frequency=1d&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/exchange-metrics?exchanges=binance&metrics=volume_reported_spot_usd_1d&frequency=1d&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/Exchanges'
        - $ref: '#/components/parameters/ExchangeMetricsParam'
        - $ref: '#/components/parameters/ExchangeMetricsFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/ExchangeSort'
        - $ref: '#/components/parameters/LimitPerExchange'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/ExchangeMetrics'
        400:
          $ref: '#/components/responses/ExchangeNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/exchange-asset-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Exchange-asset metrics
      description: >-
        Returns metrics for specified exchange-asset.<br/>
        Results are ordered by tuple `(exchange_asset, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getTimeseriesExchangeAssetMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/exchange-asset-metrics?exchange_assets=binance-btc&metrics=volume_reported_spot_usd_1d&frequency=1d&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/exchange-asset-metrics?exchange_assets=binance-btc&metrics=volume_reported_spot_usd_1d&frequency=1d&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/ExchangeAssets'
        - $ref: '#/components/parameters/ExchangeAssetMetricsParam'
        - $ref: '#/components/parameters/ExchangeAssetMetricsFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/ExchangeAssetSort'
        - $ref: '#/components/parameters/LimitPerExchangeAsset'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/ResponseFormat'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/ExchangeAssetMetrics'
        400:
          $ref: '#/components/responses/ExchangeAssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market metrics
      description: >-
        Returns metrics for specified markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getTimeseriesMarketMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-metrics?markets=binance-BTCUSDT-future&metrics=liquidations_reported_future_buy_usd_5m&frequency=5m&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-metrics?markets=binance-BTCUSDT-future&metrics=liquidations_reported_future_buy_usd_5m&frequency=5m&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/MarketMetricsParam'
        - $ref: '#/components/parameters/MarketMetricsFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/MarketMetricsSort'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketMetrics'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/pair-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Pair metrics
      description: >-
        Returns metrics for specified asset pairs.<br/>
        Results are ordered by tuple `(pair, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getTimeseriesPairMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/pair-metrics?pairs=btc-usd&metrics=volume_trusted_spot_usd_1d&frequency=1d&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/pair-metrics?pairs=btc-usd&metrics=volume_trusted_spot_usd_1d&frequency=1d&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/Pair'
        - $ref: '#/components/parameters/PairMetricsParam'
        - $ref: '#/components/parameters/PairMetricsFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/PairSort'
        - $ref: '#/components/parameters/LimitPerPair'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/PairMetrics'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/pair-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Pair candles
      description: >-
        Returns candles for specified asset pairs.<br/>
        Results are ordered by tuple `(pair, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getTimeseriesPairCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/pair-candles?pairs=btc-usd&frequency=1d&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/pair-candles?pairs=btc-usd&frequency=1d&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/PairWithCandle'
        - $ref: '#/components/parameters/CandleFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerPairCandle'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/PairCandles'
        400:
          $ref: '#/components/responses/PairNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/institution-metrics:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Institution metrics
      description: >-
        Returns metrics for specified institutions.<br/>
        Results are ordered by tuple `(institution, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getTimeseriesInstitutionMetrics
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/institution-metrics?institutions=grayscale&metrics=btc_total_assets&frequency=1d&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/institution-metrics?institutions=grayscale&metrics=btc_total_assets&frequency=1d&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/Institution'
        - $ref: '#/components/parameters/InstitutionMetricsParam'
        - $ref: '#/components/parameters/InstitutionMetricsFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/InstitutionSort'
        - $ref: '#/components/parameters/LimitPerInstitution'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/InstitutionMetrics'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-trades:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market trades
      description: >-
        Returns trades for specified markets.<br/>
        Results are ordered by tuple `(market, time, coin_metrics_id)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getTimeseriesMarketTrades
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-trades?start_time=2020-01-01&paging_from=start&markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-trades?start_time=2020-01-01&paging_from=start&markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/ResponseFormat'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/TradeMinConfirmations'
      responses:
        200:
          $ref: '#/components/responses/MarketTrades'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-openinterest:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market open interest
      description: >-
        Returns open interest for specified futures markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
        Keep in mind that spot markets are not supported by this endpoint.
      operationId: getTimeseriesMarketOpenIntereset
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-openinterest?start_time=2020-01-01&paging_from=start&markets=bitmex-XBTUSD-future&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-openinterest?start_time=2020-01-01&paging_from=start&markets=bitmex-XBTUSD-future&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/OpenInterestGranularity'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketOpenInterest'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-liquidations:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market liquidations
      description: >-
        Returns liquidations for specified futures markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
        Keep in mind that spot markets are not supported by this endpoint.
      operationId: getTimeseriesMarketLiquidations
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-liquidations?start_time=2020-01-01&paging_from=start&markets=bitmex-XBTUSD-future&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-liquidations?start_time=2020-01-01&paging_from=start&markets=bitmex-XBTUSD-future&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketLiquidations'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-funding-rates:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market funding rates
      description: >-
        Returns funding rates for specified futures markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
        Keep in mind that spot markets are not supported by this endpoint.
      operationId: getTimeseriesMarketFundingRates
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-funding-rates?start_time=2020-01-01&paging_from=start&markets=bitmex-XBTUSD-future&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-funding-rates?start_time=2020-01-01&paging_from=start&markets=bitmex-XBTUSD-future&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketFundingRates'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-funding-rates-predicted:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Predicted Market funding rates
      description: >-
        Returns predicted funding rates for specified futures markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
        Keep in mind that spot markets are not supported by this endpoint.
      operationId: getTimeseriesMarketFundingRatesPredicted
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-funding-rates-predicted?start_time=2023-01-01&paging_from=start&markets=deribit-XRP_USDC-PERPETUAL-future&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-funding-rates-predicted?start_time=2023-01-01&paging_from=start&markets=deribit-XRP_USDC-PERPETUAL-future&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketFundingRatesPredicted'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-orderbooks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market orderbooks
      description: >-
        Returns orderbooks for specified markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getTimeseriesMarketOrderbooks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-orderbooks?start_time=2020-01-01&paging_from=start&markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-orderbooks?start_time=2020-01-01&paging_from=start&markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/MarketOrderBooksAndQuotesGranularity'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/BookPageSize'
        - $ref: '#/components/parameters/BookDepth'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketOrderBooks'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-quotes:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market quotes
      description: >-
        Returns quotes for specified markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getTimeseriesMarketQuotes
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-quotes?start_time=2020-01-01&paging_from=start&markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-quotes?start_time=2020-01-01&paging_from=start&markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/MarketOrderBooksAndQuotesGranularity'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/CatalogResponseFormat'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/IncludeOneSided'
      responses:
        200:
          $ref: '#/components/responses/MarketQuotes'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market candles
      description: >-
        Returns candles for specified markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
        Coin Metrics derives candles directly from trades. Candles are only generated if there are trades in the underlying interval. Therefore, gaps in candles data through time are normal and to be expected. To construct gapless candles, the client should fill forward candles through time, setting the open, high, low, and close to the close of the previous candle, setting the vwap to the vwap of the previous candle, and setting the volume to zero.
      operationId: getTimeseriesMarketCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-candles?start_time=2020-01-01&paging_from=start&markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-candles?start_time=2020-01-01&paging_from=start&markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/CandleFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/ResponseFormat'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketCandles'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-contract-prices:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market contract prices
      description: >-
        Returns contract prices for specified markets. This includes index price and mark price that are used by the exchange for settlement and risk management purposes.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getTimeseriesMarketContractPrices
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-contract-prices?start_time=2020-01-01&paging_from=start&markets=deribit-ETH-25MAR22-1200-P-option&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-contract-prices?start_time=2020-01-01&paging_from=start&markets=deribit-ETH-25MAR22-1200-P-option&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/ContractPricesGranularity'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketContractPrices'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-implied-volatility:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market implied volatility
      description: >-
        Returns implied volatility for specified markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
        Implied volatility is calculated using an options pricing model. It represents the market's expectation of future volatility and is the value, when input to an options pricing model, that makes the actual options price equal to its theoretical price.
      operationId: getTimeseriesMarketImpliedVolatility
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-implied-volatility?start_time=2020-01-01&paging_from=start&markets=deribit-ETH-25MAR22-1200-P-option&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-implied-volatility?start_time=2020-01-01&paging_from=start&markets=deribit-ETH-25MAR22-1200-P-option&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/ImpliedVolatilityGranularity'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketImpliedVolatility'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/market-greeks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Market greeks
      description: >-
        Returns greeks for option markets.<br/>
        Results are ordered by tuple `(market, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
        Option greeks represent the sensitivity of the price of an options contract with respect to changes in its underlying parameters. Greeks are used in risk management and hedging so that market participants can achieve their desired exposure.
      operationId: getTimeseriesMarketGreeks
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/market-greeks?start_time=2020-01-01&paging_from=start&markets=deribit-ETH-25MAR22-1200-P-option&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/market-greeks?start_time=2020-01-01&paging_from=start&markets=deribit-ETH-25MAR22-1200-P-option&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerMarket'
        - $ref: '#/components/parameters/GreeksGranularity'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MarketGreeks'
        400:
          $ref: '#/components/responses/MarketNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/index-candles:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Index candles
      description: >-
        Returns candles for specified indexes.<br/>
        Results are ordered by tuple `(index, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getTimeseriesIndexCandles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/index-candles?start_time=2022-06-28&paging_from=start&indexes=CMBIBTC&frequency=1d&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/index-candles?start_time=2022-06-28&paging_from=start&indexes=CMBIBTC&frequency=1d&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/IndexIdWithCandle'
        - $ref: '#/components/parameters/CandleFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerIndex'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/IndexCandles'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /timeseries/index-levels:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Index levels
      description: >-
        Returns levels for specified indexes.<br/>
        Results are ordered by tuple `(index, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getTimeseriesIndexLevels
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/index-levels?start_time=2020-01-01&paging_from=start&indexes=CMBIBTC&frequency=1d-ny-close&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/index-levels?start_time=2020-01-01&paging_from=start&indexes=CMBIBTC&frequency=1d-ny-close&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/IndexId'
        - $ref: '#/components/parameters/IndexFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/LimitPerIndex'
        - $ref: '#/components/parameters/IncludeVerification'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/IndexLevels'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      security:
        - api_key: []

  /timeseries/index-constituents:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Index constituents
      description: >-
        Returns constituents and weights for specified indexes.<br/>
        Results are ordered by tuple `(index, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getTimeseriesIndexConstituents
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/index-constituents?start_time=2020-01-01&paging_from=start&indexes=CMBIBTC&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/index-constituents?start_time=2020-01-01&paging_from=start&indexes=CMBIBTC&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/IndexId'
        - $ref: '#/components/parameters/IndexConstituentsFrequency'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/IndexConstituents'
        400:
          $ref: '#/components/responses/IndexNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
      security:
        - api_key: []

  /timeseries/mining-pool-tips-summary:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Mining pool tips summary (experimental)
      description: >-
        Returns mining pool tips summaries for the specified assets.<br/>
        Lists last tips that we saw in all mining pools that were active during the past hour.<br/>
        A new summary is created when we detect any change in current tips across all mining pools.<br/>
        This endpoint is useful for those who want to track forks and reorgs by visualizing the distribution of currently active tips between mining pools.<br/>
        Results are ordered by tuple `(asset, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getTimeseriesMiningPoolTipsSummary
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/mining-pool-tips-summary?assets=btc&page_size=3&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/mining-pool-tips-summary?assets=btc&page_size=3&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/AssetId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MiningPoolTipsSummary'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/asset-chains:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Asset chains (experimental)
      description: >-
        Returns the chains of blocks for the specified assets.<br/>
        Lists all the chains that were active in the blockchain during the time that's enough to produce the number of blocks considered as an industry-standard number of confirmations.<br/>
        A new entry is created when we detect any new block anywhere in the chain.<br/>
        This endpoint is useful for those who want to quickly detect reorganizations or visualize currently active chains.<br/>
        If there are two or more active chains, then the response will contain the chain fragments starting from their common ancestor block. Otherwise, if there is a single active chain - only the blockchain tip is returned.<br/>
        The reorganization depth is measured as a number of consecutive blocks that were disconnected from the common ancestor block.<br/>
        Results are ordered by tuple `(asset, time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getAssetChains
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/AssetId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/AssetChains'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /timeseries/mempool-feerates:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Mempool feerates (deprecated)
      description: >-
        Returns mempool feerates for the specified assets.<br/>
        This endpoint is useful for those who want to explore the history of the feerate distribution and potentially select the time period with the lowest commissions.<br/>
        Results are ordered by `(asset, time)`.<br/>
        To fetch the next page of results use the `next_page_url` JSON response field.
      operationId: getMempoolFeerates
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/AssetId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/MempoolFeeratesPageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/MempoolFeerates'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries/asset-alerts:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Asset alerts (deprecated)
      description: >-
        Returns asset alerts for the specified assets.<br/>
        This endpoint is useful for those who wants to track the breaches in the particular asset's Key Risk Indicator thresholds.<br/>
        An asset alert is issued once an alerting metric value either breaches it's Key Risk Indicator threshold or returns back to normal for a predefined period of time.<br/>
        Results are ordered by `(asset, time, alert)`.<br/>
        To fetch the next page of results use the `next_page_url` JSON response field.
      operationId: getAssetAlerts
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/AssetId'
        - $ref: '#/components/parameters/AssetAlertId'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/AssetAlertIncludeHeartbeats'
      responses:
        200:
          $ref: '#/components/responses/AssetAlerts'
        400:
          $ref: '#/components/responses/AssetNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /timeseries/defi-balance-sheets:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: DeFi balance sheets (experimental)
      description: >-
        Returns Defi Balance Sheet records for specified DeFi protocols.</br>
        The data is being updated on an end-of-day frequency.</br>
        Results are ordered by tuple (`defi_protocol`, `block_height`).</br>
        To fetch the next page of results use the `next_page_url` JSON response field.
      operationId: getDefiBalanceSheets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/timeseries/defi-balance-sheets?defi_protocols=aave_v2_eth&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/timeseries/defi-balance-sheets?defi_protocols=aave_v2_eth&api_key=<your_key>').json()
            print(response)
      tags:
        - Timeseries
      parameters:
        - $ref: '#/components/parameters/DefiProtocols'
        - $ref: '#/components/parameters/StartTimeMutuallyExclusiveWithHeight'
        - $ref: '#/components/parameters/EndTimeMutuallyExclusiveWithHeight'
        - $ref: '#/components/parameters/StartHeightMutuallyExclusiveWithTime'
        - $ref: '#/components/parameters/EndHeightMutuallyExclusiveWithTime'
# - $ref: '#/components/parameters/LimitPerDefiProtocol'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/DefiBalanceSheets'
        400:
          $ref: '#/components/responses/DefiProtocolNotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /timeseries-stream/asset-metrics:
    get:
      servers:
        - url: wss://api.coinmetrics.io/v4
      summary: Asset metrics
      description: >-
        Returns a WebSocket stream of metrics for specified assets.<br/>
        Endpoint supports only block by block (`1b` frequency), per second (`1s` frequency), and sub-second (`200ms` frequency) metrics.<br/>
        Different sets of metrics may come in different messages.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamAssetMetrics
      x-codeSamples:
        - label: JavaScript
          source: |
            // This is getting Reference Rates for Bitcoin and Ethereum at a frequency of 1 second
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/asset-metrics?assets=btc,eth&metrics=ReferenceRate&frequency=1s&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            # This is getting Reference Rates for Bitcoin and Ethereum at a frequency of 1 second
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/asset-metrics?assets=btc,eth&metrics=ReferenceRate&frequency=1s&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/AssetId'
        - $ref: '#/components/parameters/AssetMetrics'
        - $ref: '#/components/parameters/StreamAssetMetricsFrequency'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/IgnoreUnsupportedErrors'
        - $ref: '#/components/parameters/IgnoreForbiddenErrors'
      responses:
        default:
          $ref: '#/components/responses/StreamingAssetMetrics'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries-stream/market-trades:
    get:
      servers:
        - url: wss://api.coinmetrics.io/v4
      summary: Market trades
      description: >-
        Returns a WebSocket stream of trades for specified markets.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamMarketTrades
      x-codeSamples:
        - label: JavaScript
          source: |
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/market-trades?markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/market-trades?markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
      responses:
        default:
          $ref: '#/components/responses/StreamingMarketTrades'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries-stream/market-liquidations:
    get:
      servers:
        - url: wss://api.coinmetrics.io/v4
      summary: Market liquidations
      description: >-
        Returns a WebSocket stream of liquidations for specified markets.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamMarketLiquidations
      x-codeSamples:
        - label: JavaScript
          source: |
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/market-liquidations?markets=coinbase-BTCUSDT-future&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/market-liquidations?markets=coinbase-BTCUSDT-future&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
      responses:
        default:
          $ref: '#/components/responses/StreamingMarketLiquidations'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries-stream/market-openinterest:
    get:
      servers:
        - url: wss://api.coinmetrics.io/v4
      summary: Market open interest
      description: >-
        Returns a WebSocket stream of open interests for specified markets.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamMarketOpenInterest
      x-codeSamples:
        - label: JavaScript
          source: |
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/market-openinterest?markets=binance-BTCUSDT-future&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/market-openinterest?markets=binance-BTCUSDT-future&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
      responses:
        default:
          $ref: '#/components/responses/StreamingMarketOpenInterests'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries-stream/market-orderbooks:
    get:
      servers:
        - url: wss://api.coinmetrics.io/v4
      summary: Market orderbooks
      description: >-
        Returns a WebSocket stream of orderbooks for specified markets.<br/>
        Orderbooks are delivered using a sequence of `snapshot` and `update` messages.<br/>
        Zero value of the `size` response field for `asks` or `bids` means negative `update`.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamMarketOrderbooks
      x-codeSamples:
        - label: JavaScript
          source: |
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/market-orderbooks?markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/market-orderbooks?markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StreamingBookDepth'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
      responses:
        default:
          $ref: '#/components/responses/StreamingMarketOrderbooks'
      security:
        - api_key: []

  /timeseries-stream/market-quotes:
    get:
      servers:
        - url: wss://api.coinmetrics.io/v4
      summary: Market quotes
      description: >-
        Returns a stream of quotes for specified markets.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamMarketQuotes
      x-codeSamples:
        - label: JavaScript
          source: |
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/market-quotes?markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/market-quotes?markets=coinbase-btc-usd-spot&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/IncludeOneSided'
      responses:
        default:
          $ref: '#/components/responses/StreamingMarketQuotes'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries-stream/asset-quotes:
    get:
      servers:
        - url: wss://api.coinmetrics.io/v4
      summary: Asset quotes
      description: >-
        Returns a stream of quotes for specified assets.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamAssetQuotes
      x-codeSamples:
        - label: JavaScript
          source: |
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/asset-quotes?assets=btc&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/asset-quotes?assets=btc&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/AssetId'
        - $ref: '#/components/parameters/AggregationMethod'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
      responses:
        default:
          $ref: '#/components/responses/StreamingAggregatedSpreadQuotes'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries-stream/pair-quotes:
    get:
      servers:
        - url: wss://api.coinmetrics.io/v4
      summary: Pair quotes
      description: >-
        Returns a stream of quotes for specified pairs.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamPairQuotes
      x-codeSamples:
        - label: JavaScript
          source: |
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/pair-quotes?pairs=btc-usd&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/pair-quotes?pairs=btc-usd&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/StreamingPair'
        - $ref: '#/components/parameters/AggregationMethod'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
      responses:
        default:
          $ref: '#/components/responses/StreamingAggregatedSpreadQuotes'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries-stream/market-candles:
    servers:
      - url: wss://api.coinmetrics.io/v4
    get:
      summary: Market candles
      description: >-
        Returns a stream of candles for specified markets.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnection will happen.
      operationId: getTimeseriesStreamMarketCandles
      x-codeSamples:
        - label: JavaScript
          source: |
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/market-candles?markets=bitstamp-btc-usd-spot&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/market-candles?markets=bitstamp-btc-usd-spot&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/MarketId'
        - $ref: '#/components/parameters/StreamingCandleFrequency'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/StreamingMarketCandles'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /timeseries-stream/index-levels:
    servers:
      - url: wss://api.coinmetrics.io/v4
    get:
      summary: Index levels
      description: >-
        Returns a stream of levels for specified indexes.<br/>
        If you are falling behind (slow client) you will get `warning` message first, then `error` message and disconnect will happen.
      operationId: getTimeseriesStreamIndexLevels
      x-codeSamples:
        - label: JavaScript
          source: |
            // Streams the levels for CMBIBTC index
            ws = new WebSocket("wss://api.coinmetrics.io/v4/timeseries-stream/index-levels?indexes=CMBIBTC&pretty=true&api_key=<your_key>")
            ws.onmessage = m => console.log(m.data); ws.onclose = () => console.log("closed")
        - label: Python
          source: |
            # Streams the levels for CMBIBTC index
            import asyncio
            import websockets
            
            async def handle(uri):
                async with websockets.connect(uri) as websocket:
                    while True:
                        print(await websocket.recv())
            
            asyncio.get_event_loop().run_until_complete(handle('wss://api.coinmetrics.io/v4/timeseries-stream/index-levels?indexes=CMBIBTC&pretty=true&api_key=<your_key>'))
      tags:
        - Timeseries stream
      parameters:
        - $ref: '#/components/parameters/StreamingIndexId'
        - $ref: '#/components/parameters/IncludeVerification'
        - $ref: '#/components/parameters/Backfill'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/StreamingIndexLevels'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /taxonomy/assets:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Taxonomy for assets
      description: >-
        Returns Taxonomy for assets.<br/>
        Results are ordered by tuple `(asset, classification_start_time)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getTaxonomyAssets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/taxonomy/assets?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/taxonomy/assets?api_key=<your_key>').json()
            print(response)
      tags:
        - Taxonomy
      parameters:
        - $ref: '#/components/parameters/TaxonomyAssets'
        - $ref: '#/components/parameters/TaxonomyClassIds'
        - $ref: '#/components/parameters/TaxonomySectorIds'
        - $ref: '#/components/parameters/TaxonomySubsectorIds'
        - $ref: '#/components/parameters/TaxonomyVersion'
        - $ref: '#/components/parameters/TaxonomyAssetClassificationStartTime'
        - $ref: '#/components/parameters/TaxonomyAssetClassificationEndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/TaxonomyAssets'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /taxonomy-metadata/assets:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Taxonomy metadata for assets
      description: >-
        Returns Taxonomy metadata for assets.<br/>
        Results are ordered by tuple `version`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getTaxonomyMetadataAssets
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/taxonomy-metadata/assets?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/taxonomy-metadata/assets?api_key=<your_key>').json()
            print(response)
      tags:
        - Taxonomy Metadata
      parameters:
        - $ref: '#/components/parameters/TaxonomyVersion'
        - $ref: '#/components/parameters/TaxonomyVersionStartTime'
        - $ref: '#/components/parameters/TaxonomyVersionEndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/TaxonomyMetadataAssets'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /profile/assets:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Asset profiles data (experimental)
      description: >-
        Returns profile data for assets.<br/>
        Results are ordered by `asset`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
        If `supply_cap` is not present then the theoretical maximum supply is infinite for that asset.
      operationId: getAssetProfiles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/profile/assets?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/profile/assets?api_key=<your_key>').json()
            print(response)
      tags:
        - Profile
      parameters:
        - $ref: '#/components/parameters/AssetProfileAssetIds'
        - $ref: '#/components/parameters/AssetProfileFullNames'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/AssetProfiles'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /profile/networks:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Network profiles data (experimental)
      description: >-
        Returns profile data for networks.<br/>
        Results are ordered by `network`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
      operationId: getNetworkProfiles
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/profile/networks?api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/profile/networks?api_key=<your_key>').json()
            print(response)
      tags:
        - Profile
      parameters:
        - $ref: '#/components/parameters/NetworkProfileNetworks'
        - $ref: '#/components/parameters/NetworkProfileFullNames'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/Pretty'
      responses:
        200:
          $ref: '#/components/responses/NetworkProfiles'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /blockchain/{asset}/transaction-tracker:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Transaction tracker
      description: >-
        Returns status updates for the specified or all transactions.<br/>
        This endpoint can be helpful to track transaction settlement.<br/>
        The transaction tracker keeps the history of the transaction updates for one month since the last update.
      operationId: getTxTracker
      tags:
        - Chain Monitor tools
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/TxTrackerTransactions'
        - $ref: '#/components/parameters/ReplacementsForTransactions'
        - $ref: '#/components/parameters/OnlyReplacementTransactions'
        - $ref: '#/components/parameters/TxTrackerAddresses'
        - $ref: '#/components/parameters/OnlyUnconfirmedTransactions'
        - $ref: '#/components/parameters/StartTime'
        - $ref: '#/components/parameters/EndTime'
        - $ref: '#/components/parameters/StartInclusive'
        - $ref: '#/components/parameters/EndInclusive'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Format'
        - $ref: '#/components/parameters/NextPageToken'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets data on the status of the most recent bitcoin transactions
            curl --compressed "https://api.coinmetrics.io/v4/blockchain/btc/transaction-tracker?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets data on the status of the most recent bitcoin transactions
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain/btc/transaction-tracker?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/TxTracker'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-metadata/tags:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: List of all available tags
      description: Returns a list of all available tags along with their descriptions.
      operationId: getBlockchainMetadataTags
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-metadata/tags?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-metadata/tags?pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Blockchain Metadata
      parameters:
        - $ref: '#/components/parameters/TagType'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/BlockchainMetadataTags'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]

  /blockchain-metadata/tagged-entities:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: The list of entities associated with provided tags
      description: Returns a list of all entities associated with provided tags.
      operationId: getBlockchainMetadataEntities
      x-codeSamples:
        - label: Shell
          source: |
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-metadata/tagged-entities?tags=ADDRESS_IS_CONTRACT,ADDRESS_IS_SWAPPER&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-metadata/tagged-entities?tags=ADDRESS_IS_CONTRACT,ADDRESS_IS_SWAPPER&pretty=true&api_key=<your_key>').json()
            print(response)
      tags:
        - Blockchain Metadata
      parameters:
        - $ref: '#/components/parameters/Tags'
        - $ref: '#/components/parameters/Entities'
        - $ref: '#/components/parameters/EntityLocations'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/NextPageToken'
      responses:
        200:
          $ref: '#/components/responses/BlockchainMetadataTaggedEntities'
        401:
          $ref: '#/components/responses/Unauthorized'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: [ ]


  /blockchain-v2/{asset}/blocks:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: List of blocks
      description: >-
        Returns a list of blockchain blocks metadata.<br/>
        Results are ordered by tuple `(height, block_hash)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
        Results are limited to the last 30 days for Community users.
      operationId: getBlockchainV2ListOfBlocks
      tags:
        - List of blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainBlockHashesV2'
        - $ref: '#/components/parameters/BlockchainBlockHeightsV2'
        - $ref: '#/components/parameters/StartTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/EndTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/StartHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/EndHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/BlockchainChainTypeV2'
        - $ref: '#/components/parameters/StartInclusiveAtlasV2'
        - $ref: '#/components/parameters/EndInclusiveAtlasV2'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSizeAtlasV2'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets list of blocks for Litecoin
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/ltc/blocks?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets list of blocks for Litecoin
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/ltc/blocks?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainBlocksV2'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-v2/{asset}/accounts:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: List of accounts
      description: >-
        Returns a list of blockchain accounts with their balances.<br/>
        Results are ordered by tuple `(creation_chain_sequence_number, account)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getBlockchainV2ListOfAccounts
      tags:
        - List of blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainAccountsV2'
        - $ref: '#/components/parameters/StartTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/EndTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/StartHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/EndHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/BlockchainStartChainSequenceNumberV2'
        - $ref: '#/components/parameters/BlockchainEndChainSequenceNumberV2'
        - $ref: '#/components/parameters/StartInclusiveAtlasV2'
        - $ref: '#/components/parameters/EndInclusiveAtlasV2'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSizeAtlasV2'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets list of accounts for USDC
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/usdc/accounts?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets list of accounts for USDC
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/usdc/accounts?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainAccountsV2'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-v2/{asset}/sub-accounts:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: List of sub-accounts
      description: >-
        Returns a list of blockchain sub-accounts.<br/>
        Results are ordered by tuple `(creation_chain_sequence_number, account)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getBlockchainV2ListOfSubAccounts
      tags:
        - List of blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainAccountsV2'
        - $ref: '#/components/parameters/StartTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/EndTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/StartHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/EndHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/BlockchainStartChainSequenceNumberV2'
        - $ref: '#/components/parameters/BlockchainEndChainSequenceNumberV2'
        - $ref: '#/components/parameters/StartInclusiveAtlasV2'
        - $ref: '#/components/parameters/EndInclusiveAtlasV2'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSizeAtlasV2'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets list of sub accounts for Litecoin
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/ltc/sub-accounts?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets list of sub accounts for Litecoin
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/ltc/sub-accounts?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainSubAccountsV2'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-v2/{asset}/transactions:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: List of transactions
      description: >-
        Returns a list of blockchain transactions metadata.<br/>
        Results are ordered by tuple `(tx_position, txid)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
        Results are limited to the last 30 days for Community users.
      operationId: getBlockchainV2ListOfTransactions
      tags:
        - List of blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainTransactionIdsV2'
        - $ref: '#/components/parameters/BlockchainBlockHashesV2'
        - $ref: '#/components/parameters/StartTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/EndTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/StartHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/EndHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/BlockchainChainTypeV2'
        - $ref: '#/components/parameters/StartInclusiveAtlasV2'
        - $ref: '#/components/parameters/EndInclusiveAtlasV2'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSizeAtlasV2'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets list of transactions for Ethereum classic
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/etc/transactions?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets list of transactions for Ethereum classic
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/etc/transactions?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainTransactionsV2'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-v2/{asset}/balance-updates:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: List of balance updates
      description: >-
        Returns a list of blockchain accounts balance updates.<br/>
        Results are ordered by tuple `(chain_sequence_number, block_hash)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.<br/>
        Results are limited to the last 30 days for Community users.
      operationId: getBlockchainV2ListOfBalanceUpdates
      tags:
        - List of blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainAccountsV2'
        - $ref: '#/components/parameters/BlockchainLimitPerAccountV2'
        - $ref: '#/components/parameters/BlockchainSubAccountsV2'
        - $ref: '#/components/parameters/BlockchainTransactionIdsV2'
        - $ref: '#/components/parameters/BlockchainBlockHashesV2'
        - $ref: '#/components/parameters/StartTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/EndTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/StartHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/EndHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/BlockchainStartChainSequenceNumberV2'
        - $ref: '#/components/parameters/BlockchainEndChainSequenceNumberV2'
        - $ref: '#/components/parameters/BlockchainIncludeSubAccountsV2'
        - $ref: '#/components/parameters/BlockchainChainTypeV2'
        - $ref: '#/components/parameters/StartInclusiveAtlasV2'
        - $ref: '#/components/parameters/EndInclusiveAtlasV2'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSizeAtlasV2'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets list of balance-updates for USDC
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/usdc/balance-updates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets list of balance-updates for USDC
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/usdc/balance-updates?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainBalanceUpdatesV2'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []


  /blockchain-v2/{asset}/accounts/{account}/balance-updates:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: List of balance updates for account
      description: >-
        Returns a list of blockchain balance updates for a specific account.<br/>
        Results are ordered by tuple `(chain_sequence_number, block_hash)`.<br/>
        To fetch the next page of results use `next_page_url` JSON response field.
      operationId: getBlockchainV2ListOfBalanceUpdatesForAccount
      tags:
        - List of blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainAccount'
        - $ref: '#/components/parameters/BlockchainTransactionIdsV2'
        - $ref: '#/components/parameters/BlockchainBlockHashesV2'
        - $ref: '#/components/parameters/IncludeCounterpartiesV2'
        - $ref: '#/components/parameters/StartTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/EndTimeMutuallyExclusiveWithHeightAtlasV2'
        - $ref: '#/components/parameters/StartHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/EndHeightMutuallyExclusiveWithTimeAtlasV2'
        - $ref: '#/components/parameters/BlockchainStartChainSequenceNumberV2'
        - $ref: '#/components/parameters/BlockchainEndChainSequenceNumberV2'
        - $ref: '#/components/parameters/BlockchainIncludeSubAccountsV2'
        - $ref: '#/components/parameters/BlockchainChainTypeV2'
        - $ref: '#/components/parameters/StartInclusiveAtlasV2'
        - $ref: '#/components/parameters/EndInclusiveAtlasV2'
        - $ref: '#/components/parameters/Timezone'
        - $ref: '#/components/parameters/PageSizeAtlasV2'
        - $ref: '#/components/parameters/PagingFrom'
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/NextPageToken'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets list of balance-updates for a BTC account
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/btc/accounts/112jmDkNGHSbhhY17JGpxU3sMA9ZExG7b2/balance-updates?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets list of balance-updates for a BTC account
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/btc/accounts/112jmDkNGHSbhhY17JGpxU3sMA9ZExG7b2/balance-updates?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainBalanceUpdatesForAccountV2'
        400:
          $ref: '#/components/responses/InvalidParameters'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
        404:
          $ref: '#/components/responses/AccountNotFound'
      security:
        - api_key: []


  /blockchain-v2/{asset}/blocks/{block_hash}:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Full block
      description: >-
        Returns a full blockchain block with all transactions and balance updates.<br/>
        Results are limited to the last 30 days for Community users.
      operationId: getBlockchainV2FullBlock
      tags:
        - Full blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainBlockHash'
        - $ref: '#/components/parameters/BlockchainIncludeSubAccountsV2'
        - $ref: '#/components/parameters/Pretty'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets block data for a specific Litecoin block, specified by the hash of the block
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/ltc/blocks/885f0ba526e9a683f64c8fdb83c5e8cbc0d6e74fb93f2351941ee409a924b7a8?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets block data for a specific Litecoin block, specified by the hash of the block
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/ltc/blocks/885f0ba526e9a683f64c8fdb83c5e8cbc0d6e74fb93f2351941ee409a924b7a8?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainFullBlockV2'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-v2/{asset}/transactions/{txid}:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Full transaction
      description: >-
        Returns a full blockchain transaction with all balance updates.<br/>
        Results are limited to the last 30 days for Community users.
      operationId: getBlockchainV2FullTransaction
      tags:
        - Full blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainTransactionId'
        - $ref: '#/components/parameters/BlockchainIncludeSubAccountsV2'
        - $ref: '#/components/parameters/Pretty'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets block data for a specific Litecoin transaction, specified by the hash of the block
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/ltc/transactions/3345cbbcc53b8a0113951b69f98a72a84b5a094af84842b46ed931c242c09597?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets block data for a specific Litecoin transaction, specified by the hash of the block
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/ltc/transactions/3345cbbcc53b8a0113951b69f98a72a84b5a094af84842b46ed931c242c09597?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainFullTransactionV2'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-v2/{asset}/blocks/{block_hash}/transactions/{txid}:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Full transaction for block
      description: >-
        Returns a full blockchain transaction with all balance updates for a specific block.<br/>
        Results are limited to the last 30 days for Community users.
      operationId: getBlockchainV2FullTransactionForBlock
      tags:
        - Full blockchain entities v2
      parameters:
        - $ref: '#/components/parameters/BlockchainAsset'
        - $ref: '#/components/parameters/BlockchainBlockHash'
        - $ref: '#/components/parameters/BlockchainTransactionId'
        - $ref: '#/components/parameters/BlockchainIncludeSubAccountsV2'
        - $ref: '#/components/parameters/Pretty'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets block data and balance updates for a specific Litecoin block, specified by the hash of the block
            curl --compressed "https://api.coinmetrics.io/v4/blockchain-v2/ltc/blocks/885f0ba526e9a683f64c8fdb83c5e8cbc0d6e74fb93f2351941ee409a924b7a8/transactions/3345cbbcc53b8a0113951b69f98a72a84b5a094af84842b46ed931c242c09597?pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets block data and balance updates for a specific Litecoin block, specified by the hash of the block
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/blockchain-v2/ltc/blocks/885f0ba526e9a683f64c8fdb83c5e8cbc0d6e74fb93f2351941ee409a924b7a8/transactions/3345cbbcc53b8a0113951b69f98a72a84b5a094af84842b46ed931c242c09597?pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/BlockchainFullTransactionV2'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-job/account-balances:
    servers:
      - url: https://api.coinmetrics.io/v4
    put:
      summary: Account balances
      description: >-
        Creates asynchronous job for retrieving account balances data.<br/>
        Use the [/jobs](#operation/getJobById) endpoint to poll job's status.
        The result file when downloaded will contain a newline-delimited JSON stream of
        [BlockchainJobAccountBalance](#schema/BlockchainJobAccountBalance) objects.
      operationId: putBlockchainJobAccountBalances
      tags:
        - Blockchain Explorer Job
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlockchainJobAccountBalancesRequest'
      x-codeSamples:
        - label: Shell
          source: |
            curl -X PUT --compressed "https://api.coinmetrics.io/v4/blockchain-job/account-balances?api_key=<your_key>" \
              --header "Content-Type: application/x-www-form-urlencoded" \
              --data-urlencode "assets=sol" \
              --data-urlencode "accounts=account1,account2" \
              --data-urlencode "at_time=2024-07-04T00:00:00.000000000Z"
        - label: Python
          source: |
            import requests
            data = {
                "assets": "sol",
                "accounts": "account1,account2",
                "at_time": "2024-07-04T00:00:00.000000000Z"
            }
            response = requests.put('https://api.coinmetrics.io/v4/blockchain-job/account-balances?api_key=<your_key>',data=data).json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/CreatedJobDetails'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-job/balance-updates:
    servers:
      - url: https://api.coinmetrics.io/v4
    put:
      summary: Balance updates
      description: >-
        Creates asynchronous job for retrieving balance updates data.
        Both `start_*` and `end_*` parameters must be specified (time or height).<br/>
        Use the [/jobs](#operation/getJobById) endpoint to poll job's status.
        The result file when downloaded will contain a newline-delimited JSON stream of
        [BlockchainJobBalanceUpdate](#schema/BlockchainJobBalanceUpdate) objects.
      operationId: putBlockchainJobBalanceUpdates
      tags:
        - Blockchain Explorer Job
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlockchainJobBalanceUpdatesRequest'
      x-codeSamples:
        - label: Shell
          source: |
            curl -X PUT --compressed "https://api.coinmetrics.io/v4/blockchain-job/balance-updates?api_key=<your_key>" \
              --header "Content-Type: application/x-www-form-urlencoded" \
              --data-urlencode "assets=sol" \
              --data-urlencode "accounts=account1,account2" \
              --data-urlencode "start_time=2023-07-04T00:00:00.000000000Z" \
              --data-urlencode "end_time=2024-07-04T00:00:00.000000000Z"
        - label: Python
          source: |
            import requests
            data = {
                "assets": "sol",
                "accounts": "account1,account2",
                "start_time": "2023-07-04T00:00:00.000000000Z",
                "end_time": "2024-07-04T00:00:00.000000000Z"
            }
            response = requests.put('https://api.coinmetrics.io/v4/blockchain-job/balance-updates?api_key=<your_key>',data=data).json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/CreatedJobDetails'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /blockchain-job/transactions:
    servers:
      - url: https://api.coinmetrics.io/v4
    put:
      summary: Transactions
      description: >-
        Creates asynchronous job for retrieving transactions data.<br/>
        Use the [/jobs](#operation/getJobById) endpoint to poll job's status.
        The result file when downloaded will contain a newline-delimited JSON stream of
        [BlockchainJobTransactionInfo](#schema/BlockchainJobTransactionInfo) objects.
      operationId: putBlockchainJobTransactions
      tags:
        - Blockchain Explorer Job
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlockchainJobTransactionsRequest'
      x-codeSamples:
        - label: Shell
          source: |
            curl -X PUT --compressed "https://api.coinmetrics.io/v4/blockchain-job/transactions?api_key=<your_key>" \
              --header "Content-Type: application/x-www-form-urlencoded" \
              --data-urlencode "assets=sol" \
              --data-urlencode "txids=txid1,txid2"
        - label: Python
          source: |
            import requests
            data = {
                "assets": "sol",
                "txids": "txid1,txid2"
            }
            response = requests.put('https://api.coinmetrics.io/v4/blockchain-job/transactions?api_key=<your_key>',data=data).json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/CreatedJobDetails'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

  /security-master/assets:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Security Master Assets
      description: Returns all the assets and their metadata in security master.
      operationId: getSecurityMasterAssets
      tags:
        - Security Master
      parameters:
        - $ref: '#/components/parameters/SecurityMasterAssets'
        - $ref: '#/components/parameters/SecurityMasterCodes'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/Pretty'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets a metadata for btc and eth assets
            curl --compressed "https://api.coinmetrics.io/v4/security-master/assets?assets=btc,eth&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets a metadata for btc and eth assets
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/security-master/assets?assets=btc,eth&pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/SecurityMasterAssets'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /security-master/markets:
    servers:
      - url: https://api.coinmetrics.io/v4
    get:
      summary: Security Master Markets
      description: Returns metadata on all the markets offered (spot, options, futures), sorted alphabetically by market.
      operationId: getSecurityMasterMarkets
      tags:
        - Security Master
      parameters:
        - $ref: '#/components/parameters/SecurityMasterMarketType'
        - $ref: '#/components/parameters/SecurityMasterMarkets'
        - $ref: '#/components/parameters/MarketSymbol'
        - $ref: '#/components/parameters/Exchange'
        - $ref: '#/components/parameters/MarketBase'
        - $ref: '#/components/parameters/MarketQuote'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PagingFromWithStartByDefault'
        - $ref: '#/components/parameters/NextPageToken'
        - $ref: '#/components/parameters/Pretty'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets a list of spot markets
            curl --compressed "https://api.coinmetrics.io/v4/security-master/markets?type=spot&pretty=true&api_key=<your_key>"
        - label: Python
          source: |
            # Gets a list of spot markets
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/security-master/markets?type=spot&pretty=true&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/SecurityMasterMarkets'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
        414:
          $ref: '#/components/responses/UriTooLong'
      security:
        - api_key: []

  /jobs:
    servers:
      - url: https://api.coinmetrics.io/v4
      - url: https://community-api.coinmetrics.io/v4
    get:
      summary: Get job by ID
      description: Returns job details by job ID. If job is not found empty result is returned.
      operationId: getJobById
      tags:
        - Jobs
      parameters:
        - $ref: '#/components/parameters/JobIds'
        - $ref: '#/components/parameters/Pretty'
      x-codeSamples:
        - label: Shell
          source: |
            # Gets job details by ID
            curl --compressed "https://api.coinmetrics.io/v4/jobs?ids=ZjRjZDE2N2EtYzljYy00MjQ5LTk4ZWYtOTlkZDljZTE1ZDU3OjgzNTZkODQyLTA5ODMtNGM2NC1hMGE5LWY5MzBhZTMxODFiZg&api_key=<your_key>"
        - label: Python
          source: |
            # Gets job details by ID
            import requests
            response = requests.get('https://api.coinmetrics.io/v4/jobs?ids=ZjRjZDE2N2EtYzljYy00MjQ5LTk4ZWYtOTlkZDljZTE1ZDU3OjgzNTZkODQyLTA5ODMtNGM2NC1hMGE5LWY5MzBhZTMxODFiZg&api_key=<your_key>').json()
            print(response)
      responses:
        200:
          $ref: '#/components/responses/JobsDetails'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/BlockchainForbidden'
      security:
        - api_key: []

components:
  parameters:

    Pretty:
      description: Human-readable formatting of JSON responses.
      in: query
      name: pretty
      schema:
        type: boolean
        default: false

    Format:
      description: Format of the response.
      in: query
      name: format
      schema:
        enum:
          - json
          - csv
        type: string
        default: json

    ResponseFormat:
      description: Format of the response. Supported values are `json`, `json_stream`, `csv`.
      in: query
      name: format
      schema:
        enum:
          - json
          - json_stream
          - csv
        type: string
        default: json

    NullAsZero:
      description: Nulls are represented as zeros in the response.
      in: query
      name: null_as_zero
      schema:
        type: boolean
        default: false

    MarketType:
      description: Type of markets.
      in: query
      name: type
      schema:
        enum:
          - spot
          - future
          - option
        type: string

    MarketBase:
      description: Base asset of markets.
      in: query
      name: base
      schema:
        type: string

    MarketQuote:
      description: Quote asset of markets.
      in: query
      name: quote
      schema:
        type: string

    MarketAsset:
      description: Any asset of markets.
      in: query
      name: asset
      schema:
        type: string

    MarketSymbol:
      description: Symbol of derivative markets, full instrument name.
      in: query
      name: symbol
      schema:
        type: string

    AssetId:
      description: >-
        Comma separated list of assets.<br/>
        Use a corresponding `/catalog-all-v2/asset-{dataType}` endpoint for the full list of supported assets for a given data type.
      in: query
      name: assets
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    AssetMetricsAssetId:
      description: >-
        Comma separated list of assets.<br/>
        Use the [/catalog-all-v2/asset-metrics](#operation/getCatalogAllV2AssetMetrics) endpoint for the full list of supported assets or specify asterisk (*) in order to get metrics for all supported assets.
      in: query
      name: assets
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    AssetAlertId:
      description: >-
        Comma separated list of asset alert names.<br/>
        Use the [/catalog-all/asset-alerts](#operation/getCatalogAllAssetAlerts) endpoint for the full list of supported asset alerts.
      in: query
      name: alerts
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    DefiProtocols:
      description: >-
        Comma separated list of DeFi protocols like `aave_v2_eth` or protocol patterns like `aave_v2_*` or `aave_*_eth` or `*_eth`.
      in: query
      name: defi_protocols
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogAssetId:
      description: Comma separated list of assets. By default all assets are returned.
      in: query
      name: assets
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogAssetIncludeFields:
      description: Comma separated list of fields to include in response. Supported values are `metrics`, `markets`, `exchanges`. Included by default if omitted.
      in: query
      name: include
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogAssetExcludeFields:
      description: Comma separated list of fields to exclude from response. Supported values are `metrics`, `markets`, `exchanges`. Included by default if omitted.
      in: query
      name: exclude
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogMarketIncludeFields:
      description: Comma separated list of fields to include in response. Supported values are `trades`, `orderbooks`, `quotes`, `funding_rates`, `openinterest`, `liquidations`. Included by default if omitted.
      in: query
      name: include
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogMarketExcludeFields:
      description: Comma separated list of fields to exclude from response. Supported values are `trades`, `orderbooks`, `quotes`, `funding_rates`, `openinterest`, `liquidations`. Included by default if omitted.
      in: query
      name: exclude
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogResponseFormat:
      description: Format of the response. Supported values are `json`, `json_stream`.
      in: query
      name: format
      schema:
        type: string
        default: json

    CatalogMarketLimit:
      description: Limit of response items. `none` means no limit. Maximum value is 100.
      in: query
      name: limit
      schema:
        type: string
        default: none

    CatalogAssetAlertId:
      description: Comma separated list of asset alert names. By default all asset alerts are returned.
      in: query
      name: alerts
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogPairId:
      description: Comma separated list of asset pairs. By default, all asset pairs are returned.
      in: query
      name: pairs
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogExchangeAssetId:
      description: Comma separated list of exchange-assets. By default, all exchange-assets pairs are returned.
      in: query
      name: exchange_assets
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogInstitutionId:
      description: Comma separated list of institutions. By default, all institutions are returned.
      in: query
      name: institutions
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogExchangeId:
      description: Comma separated list of exchanges. By default all exchanges are returned.
      in: query
      name: exchanges
      schema:
        type: array
        items:
          type: string
      explode: false

    MarketId:
      description: >-
        Comma separated list of markets or market patterns like `exchange-*` or `exchange-*-spot` or `*USDT-future`.<br/>
        Use a corresponding `/catalog-all-v2/market-{dataType}` endpoint for the full list of supported markets for a given data type.
      in: query
      name: markets
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    Pair:
      description: >-
        Comma separated list of asset pairs or patterns like `btc-*`, or `*-btc`.<br/>
        Use a corresponding `/catalog-all-v2/pair-{dataType}` endpoint for the full list of supported pairs for a given data type.
      in: query
      name: pairs
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    StreamingPair:
      description: >-
        Comma separated list of asset pairs or patterns like `btc-*`, or `*-btc`.
      in: query
      name: pairs
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    PairWithCandle:
      description: >-
        Comma separated list of asset pairs or patterns like `btc-*`, or `*-btc`.<br/>
        Use the [/catalog-all-v2/pair-candles](#operation/getCatalogAllV2PairCandles) endpoint for the full list of supported asset pairs.
      in: query
      name: pairs
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    Institution:
      description: >-
        Comma separated list of institutions, or wildcard (*) for all supported institutions.<br/>
        Note: the wildcards are not supported when `sort` parameter is set to `time`.<br/>
        Use the [/catalog-all-v2/institution-metrics](#operation/getCatalogAllV2InstitutionMetrics) endpoint for the full list of supported institutions.
      in: query
      name: institutions
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogMarketId:
      description: Comma separated list of markets. By default all markets are returned.
      in: query
      name: markets
      schema:
        type: array
        items:
          type: string
      explode: false

    CatalogMetric:
      description: Comma separated list of metrics. By default all metrics are returned.
      in: query
      name: metrics
      schema:
        type: array
        items:
          type: string
      explode: false

    Reviewable:
      description: Limit to human-reviewable metrics. By default all metrics are returned.
      in: query
      name: reviewable
      schema:
        type: boolean

    IndexId:
      description: >-
        Comma separated list of indexes, or patterns like `CMBI*`, or `*BTC`.<br/>
        Use the [/catalog-all-v2/index-levels](#operation/getCatalogAllV2IndexLevels) endpoint for the full list of supported indexes.
      in: query
      name: indexes
      required: true
      schema:
        example: CMBIBE
        type: array
        items:
          type: string
      explode: false

    StreamingIndexId:
      description: >-
        Comma separated list of indexes.<br/>
        Use the [/catalog-all-v2/index-levels](#operation/getCatalogAllV2IndexLevels) endpoint for the full list of supported indexes.
      in: query
      name: indexes
      required: true
      schema:
        example: CMBIBE
        type: array
        items:
          type: string
      explode: false

    IndexIdWithCandle:
      description: >-
        Comma separated list of indexes, or patterns like `CMBI*`, or `*BTC`.<br/>
        Use the [/catalog-all-v2/index-candles](#operation/getCatalogAllV2IndexCandles) endpoint for the full list of supported indexes.
      in: query
      name: indexes
      required: true
      schema:
        example: CMBIBE
        type: array
        items:
          type: string
      explode: false

    IndexFrequency:
      description: >-
        Frequency of the index. Supported values are `1s`, `15s`, `1h`, `1d-ny-close`, `1d-sg-close`, `1d`, `1d-HH:00`.<br/>
        Use the [/catalog-all-v2/index-levels](#operation/getCatalogAllV2IndexLevels) endpoint for the full list of supported frequencies per index.
      in: query
      name: frequency
      schema:
        default: 1d
        type: string

    IncludeVerification:
      description: If set to true, includes information about verification.
      in: query
      name: include_verification
      required: false
      schema:
        type: boolean
        default: false

    PairMetricsFrequency:
      description: >-
        Frequency of the pair metrics. Supported values are `1h`, `1d`.
      in: query
      name: frequency
      schema:
        default: 1d
        type: string

    ExchangeMetricsFrequency:
      description: >-
        Frequency of the exchange metrics. Supported values are `1h`, `1d`.
      in: query
      name: frequency
      schema:
        default: 1d
        type: string

    ExchangeAssetMetricsFrequency:
      description: >-
        Frequency of the exchange-asset metrics. Supported values are `5m`, `1h`, `1d`.
      in: query
      name: frequency
      schema:
        default: 1d
        type: string

    MarketMetricsFrequency:
      description: >-
        Frequency of the market metrics. Supported values are `1m`, `5m`, `1h`, `1d`.
      in: query
      name: frequency
      schema:
        default: 1d
        type: string

    InstitutionMetricsFrequency:
      description: >-
        Frequency of the institution metrics. Supported values are `1d`.
      in: query
      name: frequency
      schema:
        default: 1d
        type: string

    IndexConstituentsFrequency:
      description: >-
        Frequency of index constituents. Supported values are `1h`, `1d`, `1d-ny-close`, `1d-ny-midday`, `1d-sg-close`.<br/>
        If omitted, only changed constituents are returned.
      in: query
      name: frequency
      schema:
        type: string

    MarketOrderBooksAndQuotesGranularity:
      description: >-
        Downsampling granularity of market order books and quotes. Supported values are `raw`, `1m`, `1h`, and `1d`.
      in: query
      name: granularity
      schema:
        default: raw
        type: string
        enum: [raw, 1m, 1h, 1d]

    CatalogIndexId:
      description: Comma separated list of indexes. By default all indexes are returned.
      in: query
      name: indexes
      schema:
        type: array
        items:
          type: string
      explode: false

    StartTime:
      description: >-
        Start of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `start_time` is omitted, response will include time series from the **earliest** time available.
      in: query
      name: start_time
      schema:
        type: string

    StartTimeMutuallyExclusiveWithHeight:
      description: >-
        Start of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `start_height`.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `start_time` is omitted, response will include time series from the **earliest** time available.
      in: query
      name: start_time
      schema:
        type: string

    StartTimeMutuallyExclusiveWithHeightAtlasV2:
      description: >-
        Start of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `start_height`.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `start_time` is omitted, response will include time series from the **earliest** time available.<br/>
        This parameter is disabled for Community users.
      in: query
      name: start_time
      schema:
        type: string

    StartTimeMutuallyExclusiveWithHeightAndHash:
      description: >-
        Start of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `start_height` and `start_hash`.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `start_time` is omitted, response will include time series from the **earliest** time available.
      in: query
      name: start_time
      schema:
        type: string

    StartTimeMutuallyExclusiveWithHeightAndHashAtlasV2:
      description: >-
        Start of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `start_height` and `start_hash`.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `start_time` is omitted, response will include time series from the **earliest** time available.<br/>
        This parameter is disabled for Community users.
      in: query
      name: start_time
      schema:
        type: string

    EndTime:
      description: >-
        End of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `end_time` is omitted, response will include time series up to the **latest** time available.
      in: query
      name: end_time
      schema:
        type: string

    EndTimeMutuallyExclusiveWithHeight:
      description: >-
        End of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `end_height`.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `end_time` is omitted, response will include time series up to the **latest** time available.
      in: query
      name: end_time
      schema:
        type: string

    EndTimeMutuallyExclusiveWithHeightAtlasV2:
      description: >-
        End of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `end_height`.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `end_time` is omitted, response will include time series up to the **latest** time available.<br/>
        This parameter is disabled for Community users.
      in: query
      name: end_time
      schema:
        type: string

    EndTimeMutuallyExclusiveWithHeightAndHash:
      description: >-
        End of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `end_height` and `end_hash`.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `end_time` is omitted, response will include time series up to the **latest** time available.
      in: query
      name: end_time
      schema:
        type: string

    EndTimeMutuallyExclusiveWithHeightAndHashAtlasV2:
      description: >-
        End of the time interval.<br/>
        This field refers to the `time` field in the response.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `end_height` and `end_hash`.<br/>
        UTC timezone by default. `Z` suffix is optional and `timezone` parameter has a priority over it.<br/>
        If `end_time` is omitted, response will include time series up to the **latest** time available.<br/>
        This parameter is disabled for Community users.
      in: query
      name: end_time
      schema:
        type: string

    StartHeight:
      description: >-
        The start height indicates the beginning block height for the set of data that are returned.<br/>
        Inclusive by default.
      in: query
      name: start_height
      schema:
        type: integer
        format: int64
        minimum: 0

    StartHeightMutuallyExclusiveWithTime:
      description: >-
        The start height indicates the beginning block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time`.
      in: query
      name: start_height
      schema:
        type: integer
        format: int64
        minimum: 0

    StartHeightMutuallyExclusiveWithTimeAtlasV2:
      description: >-
        The start height indicates the beginning block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time`.<br/>
        This parameter is disabled for Community users.
      in: query
      name: start_height
      schema:
        type: integer
        format: int64
        minimum: 0

    StartHeightMutuallyExclusiveWithTimeAndHash:
      description: >-
        The start height indicates the beginning block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time` and `start_hash`.
      in: query
      name: start_height
      schema:
        type: integer
        format: int64
        minimum: 0

    StartHeightMutuallyExclusiveWithTimeAndHashAtlasV2:
      description: >-
        The start height indicates the beginning block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time` and `start_hash`.<br/>
        This parameter is disabled for Community users.
      in: query
      name: start_height
      schema:
        type: integer
        format: int64
        minimum: 0

    EndHeight:
      description: >-
        The end height indicates the ending block height for the set of data that are returned.<br/>
        Inclusive by default.
      in: query
      name: end_height
      schema:
        type: integer
        format: int64
        minimum: 0

    EndHeightMutuallyExclusiveWithTime:
      description: >-
        The end height indicates the ending block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `end_time`.
      in: query
      name: end_height
      schema:
        type: integer
        format: int64
        minimum: 0

    EndHeightMutuallyExclusiveWithTimeAtlasV2:
      description: >-
        The end height indicates the ending block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `end_time`.<br/>
        This parameter is disabled for Community users.
      in: query
      name: end_height
      schema:
        type: integer
        format: int64
        minimum: 0

    EndHeightMutuallyExclusiveWithTimeAndHash:
      description: >-
        The end height indicates the ending block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `end_time` and `end_hash`.<br/>
        This parameter is disabled for Community users.
      in: query
      name: end_height
      schema:
        type: integer
        format: int64
        minimum: 0

    StartHash:
      description: >-
        The start hash indicates the beginning block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time` and `start_height`.
      in: query
      name: start_hash
      schema:
        type: string

    EndHash:
      description: >-
        The end hash indicates the ending block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `end_time` and `end_height`.
      in: query
      name: end_hash
      schema:
        type: string

    StartInclusive:
      description: Inclusive or exclusive corresponding `start_*` parameters.
      in: query
      name: start_inclusive
      schema:
        default: true
        type: boolean

    StartInclusiveAtlasV2:
      description: >-
        Inclusive or exclusive corresponding `start_*` parameters.<br/>
        This parameter is disabled for Community users.
      in: query
      name: start_inclusive
      schema:
        default: true
        type: boolean

    EndInclusive:
      description: Inclusive or exclusive corresponding `end_*` parameters.
      in: query
      name: end_inclusive
      schema:
        default: true
        type: boolean

    EndInclusiveAtlasV2:
      description: >-
        Inclusive or exclusive corresponding `end_*` parameters.<br/>
        This parameter is disabled for Community users.
      in: query
      name: end_inclusive
      schema:
        default: true
        type: boolean

    Exchange:
      description: Unique name of an exchange.
      in: query
      name: exchange
      schema:
        type: string

    Exchanges:
      description: Comma separated list of exchange names or asterisk (*) for all supported exchanges.
      examples:
        list-example:
          summary: the list of exchanges
          value: 'coinbase,binance,etc'
        asterisk-example:
          summary: all supported exchanges
          value: '*'
      in: query
      name: exchanges
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    ExchangeAssets:
      description: Comma separated list of exchange-asset pairs or patterns like `exchange-*` or `*-asset`.
      in: query
      name: exchange_assets
      required: true
      schema:
        type: array
        items:
          type: string
      explode: false

    Status:
      description: Which metric values do you want to see. Applicable only for "reviewable" metrics. You can find them in the `/catalog-v2/asset-metrics` endpoint.
      in: query
      name: status
      schema:
        default: all
        enum:
          - all
          - flash
          - reviewed
          - revised
        type: string

    Timezone:
      description: >-
        Timezone name for `start_time` and `end_time` timestamps.<br/>
        This parameter does not modify the output times, which are always `UTC`.<br/>
        Format is defined by [TZ database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
      in: query
      name: timezone
      schema:
        example: America/New_York
        default: UTC
        type: string

    MinConfirmations:
      description: Specifies how many blocks behind the chain tip block by block metrics (`1b` frequency) are based on. Default for `btc` is `2` and `99` for `eth`. For example, a `min_confirmations` of `0` means metrics are being calculated for the block at the tip of the chain (the latest block received by our node) whereas a `min_confirmations` of `6` means that metrics are being applied to the block that is `6` blocks behind the chain tip (i.e., the 7th block if the chain tip is block 1).
      in: query
      name: min_confirmations
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 99

    TradeMinConfirmations:
      description: Specifies how many blocks behind the chain tip trades are based on. Default is `2`. For example, a `min_confirmations` of `0` means trades are being collected for all blocks up to the block at the tip of the chain (the latest block received by our node) whereas a `min_confirmations` of `6` means that trades are being collected for all blocks up to the block that is `6` blocks behind the chain tip (i.e., the 7th block if the chain tip is block 1). Currently available only for DeFi markets.
      in: query
      name: min_confirmations
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 99
        default: 2

    PageSize:
      description: >-
        Number of items per single page of results.<br/>
        The value of this parameter is ignored if the endpoint supports the `format` parameter and its value is set to `json_stream`.
      in: query
      name: page_size
      schema:
        default: 100
        type: integer
        format: int32
        minimum: 1
        maximum: 10000

    PageSizeAtlasV2:
      description: >-
        Number of items per single page of results.<br/>
        This parameter is disabled for Community users.
      in: query
      name: page_size
      schema:
        default: 100
        type: integer
        format: int32
        minimum: 1
        maximum: 10000

    MempoolFeeratesPageSize:
      description: Number of mempool feerate snapshots per single page of results.
      in: query
      name: page_size
      schema:
        default: 10
        type: integer
        format: int32
        minimum: 1
        maximum: 200

    PagingFrom:
      description: >-
        Where does the first page start, at the start of the interval or at the end.<br/>
        The value of this parameter is ignored if the endpoint supports the `format` parameter and its value is set to `json_stream`.
      in: query
      name: paging_from
      schema:
        default: end
        enum:
          - start
          - end
        type: string
        format: PagingFrom

    PagingFromWithStartByDefault:
      description: >-
        Where does the first page start, at the start of the interval or at the end.<br/>
        The value of this parameter is ignored if the endpoint supports the `format` parameter and its value is set to `json_stream`.
      in: query
      name: paging_from
      schema:
        default: start
        enum:
          - start
          - end
        type: string
        format: PagingFrom

    BookDepth:
      description: Book depth limit. Supported values are between 1 and 30000, `10pct_mid_price` or `full_book`.
      in: query
      name: depth_limit
      schema:
        default: 100
        type: string

    StreamingBookDepth:
      description: Book depth limit.
      in: query
      name: depth_limit
      schema:
        default: 100
        enum:
          - 100
          - full_book
        type: string

    BookPageSize:
      description: >-
        Number of items per single page of results. Maximum value for unlimited order books is 100.<br/>
        The value of this parameter is ignored if the endpoint supports the `format` parameter and its value is set to `json_stream`.
      in: query
      name: page_size
      schema:
        default: 100
        type: integer
        format: int32
        minimum: 1
        maximum: 10000

    Sort:
      description: >-
        How results will be sorted. Metrics with `1b` frequency are sorted by `(asset, height, block_hash)` tuples by default. Metrics with other frequencies are sorted by `(asset, time)` by default. If you want to sort `1d` metrics by `(time, asset)` you should choose `time` as value for the `sort` parameter.<br/>
        Sorting by `time` is useful if you request metrics for a set of assets.
      in: query
      name: sort
      schema:
        default: asset
        enum:
          - asset
          - height
          - time
        type: string

    PairSort:
      description: >-
        How results will be sorted. Metrics are sorted by `(pair, time)` by default. If you want to sort `1d` metrics by `(time, pair)` you should choose `time` as value for the `sort` parameter.<br/>
        Sorting by `time` is useful if you request metrics for a set of asset pairs.
      in: query
      name: sort
      schema:
        default: pair
        enum:
          - pair
          - time
        type: string

    InstitutionSort:
      description: >-
        How results will be sorted. Metrics are sorted by `(institution, time)` by default. If you want to sort `1d` metrics by `(time, institution)` you should choose `time` as value for the `sort` parameter.<br/>
        Sorting by `time` is useful if you request metrics for a set of institutions.<br/>
        Note: sorting by `time` is not supported when wildcards are used.
      in: query
      name: sort
      schema:
        default: institution
        enum:
          - institution
          - time
        type: string

    ExchangeAssetSort:
      description: >-
        How results will be sorted. Metrics are sorted by `(exchange_asset, time)` by default. If you want to sort `1d` metrics by `(time, exchange_asset)` you should choose `time` as value for the `sort` parameter.<br/>
        Sorting by `time` is useful if you request metrics for a set of exchange-assets.
      in: query
      name: sort
      schema:
        default: exchange_asset
        enum:
          - exchange_asset
          - time
        type: string

    MarketMetricsSort:
      description: >-
        How results will be sorted. Metrics are sorted by `(market, time)` by default. If you want to sort `1d` metrics by `(time, market)` you should choose `time` as value for the `sort` parameter.<br/>
        Sorting by `time` is useful if you request metrics for a set of markets.
      in: query
      name: sort
      schema:
        default: market
        enum:
          - market
          - time
        type: string

    ExchangeSort:
      description: >-
        How results will be sorted. Metrics are sorted by `(exchange, time)` by default. If you want to sort `1d` metrics by `(time, exchange)` you should choose `time` as value for the `sort` parameter.<br/>
        Sorting by `time` is useful if you request metrics for a set of exchanges.
      in: query
      name: sort
      schema:
        default: exchange
        enum:
          - exchange
          - time
        type: string

    LimitPerAsset:
      description: >-
        How many entries per asset result should contain. For example, this combination of parameters `assets=btc,eth&metrics=ReferenceRate&limit_per_asset=1` returns the latest `ReferenceRate` values for `btc` and `eth`.
      in: query
      name: limit_per_asset
      schema:
        type: integer
        format: int32

    LimitPerPair:
      description: >-
        How many entries per pair result should contain. For example, this combination of parameters `pair=btc-usd,eth-usd&metrics=volume_trusted_spot_usd_1h&limit_per_pair=1` returns the latest `volume_trusted_spot_usd_1h` values for `btc-usd` and `eth-usd`.
      in: query
      name: limit_per_pair
      schema:
        type: integer
        format: int32

    LimitPerPairCandle:
      description: >-
        How many entries per pair result should contain.
      in: query
      name: limit_per_pair
      schema:
        type: integer
        format: int32

    LimitPerInstitution:
      description: >-
        How many entries per institution result should contain. For example, this combination of parameters `institutions=institution1,institution2&metrics=total_assets&limit_per_institution=1` returns the latest `total_assets` values for `institution1` and `institution2`.
      in: query
      name: limit_per_institution
      schema:
        type: integer
        format: int32

    LimitPerExchangeAsset:
      description: >-
        How many entries per exchange_asset result should contain. For example, this combination of parameters `exchange_assets=binance-btc,coinbase-eth&metrics=volume_trusted_spot_usd_1h&limit_per_exchange_asset=1` returns the latest `volume_trusted_spot_usd_1h` values for `binance-btc` and `coinbase-eth`.
      in: query
      name: limit_per_exchange_asset
      schema:
        type: integer
        format: int32

    LimitPerExchange:
      description: >-
        How many entries per institution result should contain. For example, this combination of parameters `exchanges=binance,coinbase&metrics=volume_trusted_spot_usd_1h&limit_per_exchange=1` returns the latest `volume_trusted_spot_usd_1h` values for `binance` and `coinbase`.
      in: query
      name: limit_per_exchange
      schema:
        type: integer
        format: int32

    LimitPerIndex:
      description: >-
        How many entries per index result should contain. It is useful when multiple indexes are requested.
      in: query
      name: limit_per_index
      schema:
        type: integer
        format: int32

    LimitPerMarket:
      description: >-
        How many entries per market result should contain. It is useful when multiple markets are requested.
      in: query
      name: limit_per_market
      schema:
        type: integer
        format: int32

#    LimitPerDefiProtocol:
#      description: >-
#        How many entries per DeFi protocol the result should contain. It is useful when multiple DeFi protocols are requested.
#      in: query
#      name: limit_per_defi_protocol
#      schema:
#        type: integer
#        format: int32

    NextPageToken:
      description: >-
        Token for receiving the results from the next page of a query.<br/>
        Should not be used directly. To iterate through pages just use `next_page_url` response field.
      in: query
      name: next_page_token
      schema:
        type: string

    AssetMetrics:
      description: >-
        Comma separated metrics to request time series data for.<br/>
        Information on all available metrics can be found on page https://coverage.coinmetrics.io/asset-metrics-v2.<br/>
        Use the [/catalog-all-v2/asset-metrics](#operation/getCatalogAllV2AssetMetrics) endpoint for the full list of supported metrics per asset.
      in: query
      name: metrics
      required: true
      schema:
        example:
          - AdrActCnt
          - BlkHgt
        type: array
        items:
          type: string
      explode: false

    PairMetricsParam:
      description: >-
        Comma separated metrics to request time series data for.<br/>
        Information on all available metrics can be found on page https://coverage.coinmetrics.io/pair-metrics-v2.<br/>
        Use the [/catalog-all-v2/pair-metrics](#operation/getCatalogAllV2PairMetrics) endpoint for the full list of supported metrics per pair.
      in: query
      name: metrics
      required: true
      schema:
        example:
          - volume_trusted_spot_usd_1h
          - volume_trusted_spot_usd_1d
        type: array
        items:
          type: string
      explode: false

    ExchangeMetricsParam:
      description: >-
        Comma separated metrics to request time series data for.<br/>
        Information on all available metrics can be found on page https://coverage.coinmetrics.io/exchange-metrics-v2.<br/>
        Use the [/catalog-all-v2/exchange-metrics](#operation/getCatalogAllV2ExchangeMetrics) endpoint for the full list of supported metrics per exchange.
      in: query
      name: metrics
      required: true
      schema:
        example:
          - open_interest_reported_future_usd
          - volume_reported_spot_usd_1d
        type: array
        items:
          type: string
      explode: false

    ExchangeAssetMetricsParam:
      description: >-
        Comma separated metrics to request time series data for.<br/>
        Information on all available metrics can be found on page https://coverage.coinmetrics.io/exchange-asset-metrics-v2.<br/>
        Use the [/catalog-all-v2/exchange-asset-metrics](#operation/getCatalogAllV2ExchangeAssetMetrics) endpoint for the full list of supported metrics per exchange-asset combination.
      in: query
      name: metrics
      required: true
      schema:
        example:
          - open_interest_reported_future_usd
          - volume_reported_spot_usd_1d
        type: array
        items:
          type: string
      explode: false

    MarketMetricsParam:
      description: >-
        Comma separated metrics to request time series data for.<br/>
        Use the [/catalog-all-v2/market-metrics](#operation/getCatalogAllV2MarketMetrics) endpoint for the full list of supported metrics per exchange-asset combination.
      in: query
      name: metrics
      required: true
      schema:
        example:
          - liquidations_reported_future_buy_units_1d
          - liquidations_reported_future_sell_units_1d
        type: array
        items:
          type: string
      explode: false

    InstitutionMetricsParam:
      description: >-
        Comma separated metrics to request time series data for.<br/>
        Information on all available metrics can be found on page https://docs.coinmetrics.io/market-data/market-data-overview/institution-metrics-overview.<br/>
        Use the [/catalog-all-v2/institution-metrics](#operation/getCatalogAllV2InstitutionMetrics) endpoint for the full list of supported metrics per institution.
      in: query
      name: metrics
      required: true
      schema:
        example:
          - btc_total_assets
          - btc_shares_outstanding
        type: array
        items:
          type: string
      explode: false

    AssetMetricsFrequency:
      description: >-
        Frequency of the metrics. Supported values are `1b` (block by block), `1s` (one second), `1m` (one minute), `5m` (five minutes), `10m` (ten minutes), `1h` (one hour), `1d` (one day), `1d-ny-close` (one day at New York close time). Please refer to the `/catalog-v2/asset-metrics` endpoint for the full list.<br/>
        Use the [/catalog-all-v2/asset-metrics](#operation/getCatalogAllV2AssetMetrics) endpoint for the full list of supported frequencies per asset-metric pair.
      in: query
      name: frequency
      schema:
        default: 1d
        example: 1b
        type: string

    StreamAssetMetricsFrequency:
      description: Frequency of the metrics. Supported values are `1b` (block by block), `1s`, `200ms`.
      in: query
      name: frequency
      schema:
        default: 1b
        example: 1s
        type: string

    StreamingCandleFrequency:
      description: Candle duration. Supported values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`.
      in: query
      name: frequency
      schema:
        default: 1m
        example: 1m
        type: string

    CandleFrequency:
      description: |
        Candle duration. Supported values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, and `1d-HH:00`. \
        Note: The `timezone` parameter value will be taken into account when the `1d` or `1d-HH:00` frequency is specified.
      in: query
      name: frequency
      schema:
        default: 1d
        example: 5m
        type: string

    Backfill:
      description: >-
        What data should be sent upon a connection.<br/>
        By default the latest values are sent just before real-time data.
      in: query
      name: backfill
      schema:
        type: string
        default: latest
        enum:
          - latest
          - none


    BlockchainAsset:
      description: Asset name.
      in: path
      name: asset
      required: true
      schema:
        type: string

    JobIds:
      description: Job identifier.
      in: query
      name: ids
      required: true
      schema:
        type: string

    BlockchainAccount:
      description: Account id.
      in: path
      name: account
      required: true
      schema:
        type: string

    BlockchainJobAccount:
      description: Account id. For ETH_CL, this can either be a validator public key or a validator index.
      in: path
      name: account
      required: true
      schema:
        type: string

    BlockchainAccountsV2:
      description: >-
        Optional comma separated list of accounts to filter a response.<br/>
        The list must contain a single element for Community users.
      in: query
      name: accounts
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainLimitPerAccount:
      description: >-
        How many entries per account the result should contain. It is applicable when multiple accounts are requested.
      in: query
      name: limit_per_account
      schema:
        type: integer
        format: int32

    BlockchainLimitPerAccountV2:
      description: >-
        How many entries per account the result should contain. It is applicable when multiple accounts are requested.<br/>
        For Community users, this parameter is disabled and the limit is fixed to 100.
      in: query
      name: limit_per_account
      schema:
        type: integer
        format: int32

    BlockchainSubAccounts:
      description: Optional comma separated list of sub-accounts to filter a response.
      in: query
      name: sub_accounts
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainSubAccountsV2:
      description: >-
        Optional comma separated list of sub-accounts to filter a response.<br/>
        This parameter is disabled for Community users.
      in: query
      name: sub_accounts
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainBlockHashes:
      description: Optional comma separated list of block hashes to filter a response.
      in: query
      name: block_hashes
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainBlockHashesV2:
      description: >-
        Optional comma separated list of block hashes to filter a response.<br/>
        The list must contain a single element for Community users.
      in: query
      name: block_hashes
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainBlockHeights:
      description: Optional comma separated list of block heights to filter a response.
      in: query
      name: heights
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainBlockHeightsV2:
      description: >-
        Optional comma separated list of block heights to filter a response.<br/>
        The list must contain a single element for Community users.
      in: query
      name: heights
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainTransactionsV2:
      description: >-
        Optional comma separated list of transaction hashes to filter a response.<br/>
        The list must contain a single element for Community users.
      in: query
      name: transaction_hashes
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainTransactionIds:
      description: Optional comma separated list of transaction identifiers (txid) to filter a response.
      in: query
      name: txids
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainTransactionIdsV2:
      description: >-
        Optional comma separated list of transaction identifiers (txid) to filter a response.<br/>
        The list must contain a single element for Community users.
      in: query
      name: txids
      schema:
        type: array
        items:
          type: string
      explode: false

    BlockchainChainType:
      description: Chain type. Supported values are `main` and `all` (includes both main and stale).
      in: query
      name: chain
      schema:
        default: main
        type: string

    BlockchainChainTypeV2:
      description: >-
        Chain type. Supported values are `main` and `all` (includes both main and stale).<br/>
        This parameter is disabled for Community users.
      in: query
      name: chain
      schema:
        default: main
        type: string

    TxTrackerTransactions:
      description: Comma separated list of transaction identifiers (txid) to track.
      in: query
      name: txids
      schema:
        type: array
        items:
          type: string
      explode: false

    TxTrackerAddresses:
      description: >-
        <b>BTC asset only.</b><br/>
        Comma separated list of bitcoin addresses to track transactions for. Transactions in which at least one of the addresses is either a sender or recipient will be returned.<br/>
        By default only transactions currently in mempool are returned. To return all associated transactions use `unconfirmed_only=false` parameter.<br/>
        Mutually exclusive with `txids`, `replacements_for_txids`, `replacements_for_txids` parameters.
      in: query
      name: addresses
      schema:
        type: array
        items:
          type: string
      explode: false

    OnlyUnconfirmedTransactions:
      description: >-
        <b>BTC asset only.</b><br/>
        Can be used only in conjunction with `addresses` parameter. Controls whether all or only unconfirmed transactions (currently in mempool) are returned.
      in: query
      name: unconfirmed_only
      schema:
        type: boolean

    ReplacementsForTransactions:
      description: >-
        <b>BTC asset only.</b><br/>
        Comma separated list of transaction identifiers (txid) to get the corresponding replacement transactions for.<br/>
        Mutually exclusive with `txids`.<br/>
      in: query
      name: replacements_for_txids
      schema:
        type: array
        items:
          type: string
      explode: false

    OnlyReplacementTransactions:
      description: >-
        <b>BTC asset only.</b><br/>
        Boolean indicating if the response should contain only the replacement transactions.
      in: query
      name: replacements_only
      schema:
        type: boolean

    BlockchainIncludeSubAccounts:
      description: Boolean indicating if the response should contain sub-accounts.
      in: query
      name: include_sub_accounts
      schema:
        default: false
        type: boolean

    BlockchainIncludeSubAccountsV2:
      description: >-
        Boolean indicating if the response should contain sub-accounts.<br/>
        This parameter is disabled for Community users.
      in: query
      name: include_sub_accounts
      schema:
        default: false
        type: boolean

    BlockchainBlockHash:
      description: Block hash.
      in: path
      name: block_hash
      required: true
      schema:
        type: string

    BlockchainTransactionId:
      description: Transaction identifier (txid).
      in: path
      name: txid
      required: true
      schema:
        type: string

    BlockchainStartChainSequenceNumber:
      description: Start of the `chain_sequence_number` interval.
      in: query
      name: start_chain_sequence_number
      schema:
        type: integer
        format: int64
        minimum: 0

    BlockchainStartChainSequenceNumberV2:
      description: >-
        Start of the `chain_sequence_number` interval.<br/>
        This parameter is disabled for Community users.
      in: query
      name: start_chain_sequence_number
      schema:
        type: integer
        format: int64
        minimum: 0

    BlockchainEndChainSequenceNumber:
      description: End of the `chain_sequence_number` interval.
      in: query
      name: end_chain_sequence_number
      schema:
        type: integer
        format: int64
        minimum: 0

    BlockchainEndChainSequenceNumberV2:
      description: >-
        End of the `chain_sequence_number` interval.<br/>
        This parameter is disabled for Community users.
      in: query
      name: end_chain_sequence_number
      schema:
        type: integer
        format: int64
        minimum: 0

    IncludeCounterpartiesV2:
      description: Include information about the counterparties balance updates.
      in: query
      name: include_counterparties
      schema:
        default: false
        type: boolean


    TaxonomyAssets:
      description: Comma separated list of assets.
      in: query
      name: assets
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    TaxonomyClassIds:
      description: Comma separated list of class identifiers.
      in: query
      name: class_ids
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    TaxonomySubsectorIds:
      description: Comma separated list of subsector identifiers.
      in: query
      name: subsector_ids
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    TaxonomySectorIds:
      description: Comma separated list of sector identifiers.
      in: query
      name: sector_ids
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    TaxonomyVersion:
      description: Taxonomy version. Defaults to `latest` when no `*_time` parameters specified. Specify asterisk `*` in order to get all versions.
      in: query
      name: version
      required: false
      schema:
        type: string

    TaxonomyVersionStartTime:
      description: >-
        Start time of taxonomy version.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default.<br/>
      in: query
      name: start_time
      required: false
      schema:
        type: string

    TaxonomyVersionEndTime:
      description: >-
        End time of taxonomy version.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default.<br/>
      in: query
      name: end_time
      required: false
      schema:
        type: string

    TaxonomyAssetClassificationStartTime:
      description: >-
        Start time of taxonomy asset classification.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default.<br/>
      in: query
      name: classification_start_time
      required: false
      schema:
        type: string

    TaxonomyAssetClassificationEndTime:
      description: >-
        End time of taxonomy asset classification.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default.<br/>
      in: query
      name: classification_end_time
      required: false
      schema:
        type: string

    IncludeOneSided:
      description: Include one-side and empty books in quotes response.
      in: query
      name: include_one_sided
      schema:
        type: boolean
        default: false

    AssetProfileAssetIds:
      description: Comma separated list of asset ids.<br/>
        By default profile data for all assets is returned. Mutually exclusive with `full_names` parameter.
      in: query
      name: assets
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    AssetProfileFullNames:
      description: Comma separated list of asset full names.<br/>
        By default profile data for all assets is returned. Mutually exclusive with `assets` parameter.
      in: query
      name: full_names
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    NetworkProfileNetworks:
      description: Comma separated list of networks.<br/>
        By default profile data for all networks is returned. Mutually exclusive with `full_names` parameter.
      in: query
      name: networks
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    NetworkProfileFullNames:
      description: Comma separated list of network full names.<br/>
        By default profile data for all networks is returned. Mutually exclusive with `networks` parameter.
      in: query
      name: full_names
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    AggregationMethod:
      description: The method to use for aggregation.
      in: query
      name: aggregation_method
      required: false
      schema:
        type: string
        default: aggregated_spread

    AssetAlertIncludeHeartbeats:
      description: If set to true, includes information about most recent time asset was successfully evaluated.
      in: query
      name: include_heartbeats
      required: false
      schema:
        type: boolean
        default: false

    ContractPricesGranularity:
      description: Downsampling granularity of market contract prices. Supported values are `raw`, `1m`, `1h`, and `1d`.
      in: query
      name: granularity
      schema:
        default: raw
        type: string
        enum: [raw, 1m, 1h, 1d]

    OpenInterestGranularity:
      description: Downsampling granularity of market open interest. Supported values are `raw`, `1m`, `1h`, and `1d`.
      in: query
      name: granularity
      schema:
        default: raw
        type: string
        enum: [raw, 1m, 1h, 1d]

    ImpliedVolatilityGranularity:
      description: Downsampling granularity of market implied volatility. Supported values are `raw`, `1m`, `1h`, and `1d`.
      in: query
      name: granularity
      schema:
        default: raw
        type: string
        enum: [raw, 1m, 1h, 1d]

    GreeksGranularity:
      description: Downsampling granularity of market greeks. Supported values are `raw`, `1m`, `1h`, and `1d`.
      in: query
      name: granularity
      schema:
        default: raw
        type: string
        enum: [raw, 1m, 1h, 1d]

    SecurityMasterAssets:
      description: Comma-separated list of assets to query. Mutually exclusive with `codes`.
      name: assets
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    SecurityMasterCodes:
      description: Comma-separated list of ten-digit alphanumeric identifying codes. Mutually exclusive with `assets`.
      name: codes
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    SecurityMasterMarketType:
      description: Type of markets.
      in: query
      name: type
      required: false
      schema:
        enum:
          - spot
          - future
          - option
        type: string

    SecurityMasterMarkets:
      description: List of markets.
      name: markets
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    ConstituentsMetricName:
      description: Target metric name.
      name: metric
      in: query
      required: true
      schema:
        type: string

    ConstituentId:
      description: |
        Comma separated list of constituents. By default all constituents are returned.
        Different asset metrics may have different constituents.
        For example, constituents for `volume_trusted_spot_usd_1d` are exchanges.
      example:
      name: constituents
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    ConstituentsAtTime:
      description: |
        Returns constituents at a specified date. \
        Value `now` can be specified to get the current constituents. \
        Mutually exclusive with `start_time` and/or `end_time`.
      name: at_time
      in: query
      required: false
      schema:
        type: string

    ConstituentsEndTime:
      description: |
        End of the time interval, inclusive. \
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`. \
        Mutually exclusive with `at_time`.
      name: end_time
      in: query
      schema:
        type: string

    ConstituentsStartTime:
      description: |
        Start of the time interval, inclusive. \
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`. \
        Mutually exclusive with `at_time`.
      name: start_time
      in: query
      schema:
        type: string

    TagType:
      description: The type of a tag.
      in: query
      name: type
      required: false
      schema:
        type: string

    Tags:
      description: Comma separated list of tags. Mutually exclusive with `entities` parameter. Currently a single tag is allowed per each request.
      in: query
      name: tags
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    Entities:
      description: Comma separated list of entities. Mutually exclusive with `tags` parameter.
      in: query
      name: entities
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    EntityLocations:
      description: Comma separated list of entity locations (asset representation where the entity has been tagged). Currently a single entity location is allowed per each request.
      in: query
      name: locations
      required: false
      schema:
        type: array
        items:
          type: string
      explode: false

    IgnoreForbiddenErrors:
      description: Ignore "forbidden" errors for the items you currently don't have access to.
      in: query
      name: ignore_forbidden_errors
      schema:
        type: boolean
        default: false

    IgnoreUnsupportedErrors:
      description: Ignore "unsupported" errors for not currently supported by Coin Metrics items.
      in: query
      name: ignore_unsupported_errors
      schema:
        type: boolean
        default: false

  responses:

    ReferenceDataAssets:
      description: List of assets metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "full_name": "Bitcoin"
                },
                {
                  "asset": "etc",
                  "full_name": "Ethereum Classic"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/assets?api_key=<your_key>&page_size=2&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataAssetsResponse'

    ReferenceDataExchanges:
      description: List of exchanges metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange": "binance",
                  "full_name": "Binance"
                },
                {
                  "exchange": "bittrex",
                  "full_name": "Bittrex"
                }
              ],
              "next_page_token": "YnliaXQ",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/exchanges?api_key=<your_key>&page_size=2&next_page_token=YnliaXQ"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataExchangesResponse'

    ReferenceDataMarkets:
      description: List of markets metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-btc-usdt-spot",
                  "exchange": "binance",
                  "type": "spot",
                  "base": "btc",
                  "quote": "usdt",
                  "pair": "btc-usdt",
                  "symbol": "BTCUSDT"
                },
                {
                  "market": "binance-1000FLOKIUSDT-future",
                  "exchange": "binance",
                  "type": "future",
                  "base": "floki",
                  "quote": "usdt",
                  "pair": "floki-usdt",
                  "symbol": "1000FLOKIUSDT",
                  "size_asset": "floki",
                  "margin_asset": "usdt",
                  "contract_size": "1000",
                  "tick_size": "0.00001",
                  "listing": "2023-05-06T00:00:00.000000000Z",
                  "order_amount_increment": "1",
                  "order_amount_min": "1",
                  "order_amount_max": "10000000",
                  "order_price_increment": "0.0000100",
                  "order_price_min": "0.0000100",
                  "order_price_max": "200",
                  "order_size_min": "5.0"
                },
                {
                  "market": "deribit-BTC-10DEC22-17500-C-option",
                  "exchange": "deribit",
                  "type": "option",
                  "base": "btc",
                  "quote": "usd",
                  "pair": "btc-usd",
                  "symbol": "BTC-10DEC22-17500-C",
                  "size_asset": "btc",
                  "strike": "17500",
                  "option_contract_type": "call",
                  "is_european": true,
                  "contract_size": "1",
                  "listing": "2022-12-08T08:01:00.000000000Z",
                  "expiration": "2022-12-10T08:00:00.000000000Z",
                  "settlement_price": "17160.85",
                  "status": "offline",
                  "order_amount_min": "0.1",
                  "order_price_increment": "0.0005",
                  "order_taker_fee": "0.0003",
                  "order_maker_fee": "0.0003"
                }
              ],
              "next_page_token": "ZGVyaWJpdC1CVEMtMTBERUMyMi0xNzUwMC1QLW9wdGlvbg",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/markets?api_key=<your_key>&page_size=3&next_page_token=ZGVyaWJpdC1CVEMtMTBERUMyMi0xNzUwMC1QLW9wdGlvbg"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataMarketsResponse'

    ReferenceDataIndexes:
      description: List of indexes metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "index": "CMBIBTCT",
                  "full_name": "CMBI Bitcoin Total Return Index",
                  "description": "A single asset index measuring the performance an investor would expect from purchasing and holding Bitcoin as well as liquidating legitimate forked assets.",
                  "type": "single_asset"
                },
                {
                  "index": "CMBIBTCV",
                  "full_name": "CMBI Bitcoin Index",
                  "description": "A single asset index measuring the performance an investor would expect from purchasing and holding Bitcoin."
                }
              ],
              "next_page_token": "Q01CSURFWEU",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/indexes?api_key=<your_key>&page_size=2&next_page_token=Q01CSURFWEU"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataIndexesResponse'

    ReferenceDataPairs:
      description: List of pairs metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "btc-eur",
                  "full_name": "Bitcoin - Euro"
                },
                {
                  "pair": "btc-usdt",
                  "full_name": "Bitcoin - Tether"
                }
              ],
              "next_page_token": "ZXRoLXVzZHQ",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/pairs?api_key=<your_key>&page_size=2&next_page_token=ZXRoLXVzZHQ"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataPairsResponse'

    ReferenceDataAssetMetrics:
      description: List of asset metrics metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "AdrAct30dCnt",
                  "full_name": "Addresses, active, monthly, count",
                  "description": "The sum count of unique addresses that were active in the network (either as a recipient or originator of a ledger change) in the trailing 30 days up to the end of that interval. All parties in a ledger change action (recipients and originators) are counted. Individual addresses are not double-counted if previously active.",
                  "product": "Network Data",
                  "category": "Addresses",
                  "subcategory": "Active",
                  "unit": "Addresses",
                  "data_type": "bigint",
                  "type": "Sum",
                  "display_name": "Active Monthly Addr Cnt",
                  "docs_url": "https://docs.coinmetrics.io/network-data/network-data-overview/addresses/active-addresses"
                },
                {
                  "metric": "AdrAct7dCnt",
                  "full_name": "Addresses, active, weekly, count",
                  "description": "The sum count of unique addresses that were active in the network (either as a recipient or originator of a ledger change) in the trailing 7 days up to the end of that interval. All parties in a ledger change action (recipients and originators) are counted. Individual addresses are not double-counted if active several times in the considered interval.",
                  "product": "Network Data",
                  "category": "Addresses",
                  "subcategory": "Active",
                  "unit": "Addresses",
                  "data_type": "bigint",
                  "type": "Sum",
                  "display_name": "Active Weekly Addr Cnt",
                  "docs_url": "https://docs.coinmetrics.io/network-data/network-data-overview/addresses/active-addresses"
                }
              ],
              "next_page_token": "QWRyQWN0Q250",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/asset-metrics?api_key=<your_key>&page_size=2&next_page_token=QWRyQWN0Q250"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataAssetMetricsResponse'

    ReferenceDataExchangeMetrics:
      description: List of exchange metrics metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "liquidations_reported_future_buy_units_1d",
                  "full_name": "Liquidations, reported, future, buys, native units, one day",
                  "description": "The sum of all buy liquidations from perpetual futures markets in native units of the underlying base asset.",
                  "product": "Market Data",
                  "category": "Liquidations",
                  "subcategory": "Futures",
                  "unit": "Native Units",
                  "data_type": "decimal",
                  "type": "Sum",
                  "display_name": "Reported Futures Buy Liquidations, native units",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/liquidations/"
                },
                {
                  "metric": "liquidations_reported_future_buy_units_1h",
                  "full_name": "Liquidations, reported, future, buys, native units, one hour",
                  "description": "The sum of all buy liquidations from perpetual futures markets in native units of the underlying base asset.",
                  "product": "Market Data",
                  "category": "Liquidations",
                  "subcategory": "Futures",
                  "unit": "Native Units",
                  "data_type": "decimal",
                  "type": "Sum",
                  "display_name": "Reported Futures Buy Liquidations, native units",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/liquidations/"
                }
              ],
              "next_page_token": "bGlxdWlkYXRpb25zX3JlcG9ydGVkX2Z1dHVyZV9idXlfdW5pdHNfNW0",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/exchange-metrics?api_key=<your_key>&page_size=2&next_page_token=bGlxdWlkYXRpb25zX3JlcG9ydGVkX2Z1dHVyZV9idXlfdW5pdHNfNW0"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataExchangeMetricsResponse'

    ReferenceDataExchangeAssetMetrics:
      description: List of exchange asset metrics metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "basis_annualized_120d_exp",
                  "full_name": "Basis, annualized, 120 day expiration ",
                  "description": "The relative difference between the price of a futures contract that expires in 120 days and the price of its underlying spot market.",
                  "product": "Market Data",
                  "category": "Basis",
                  "subcategory": "Future",
                  "unit": "Dimensionless",
                  "data_type": "decimal",
                  "type": "Percentage",
                  "display_name": "Annualized Futures Basis, 120 day expiration",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/basis/"
                },
                {
                  "metric": "basis_annualized_30d_exp",
                  "full_name": "Basis, annualized, 30 day expiration ",
                  "description": "The relative difference between the price of a futures contract that expires in 30 days and the price of its underlying spot market.",
                  "product": "Market Data",
                  "category": "Basis",
                  "subcategory": "Future",
                  "unit": "Dimensionless",
                  "data_type": "decimal",
                  "type": "Percentage",
                  "display_name": "Annualized Futures Basis, 30 day expiration",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/basis/"
                }
              ],
              "next_page_token": "YmFzaXNfYW5udWFsaXplZF82MGRfZXhw",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/exchange-asset-metrics?api_key=<your_key>&page_size=2&next_page_token=YmFzaXNfYW5udWFsaXplZF82MGRfZXhw"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataExchangeAssetMetricsResponse'

    ReferenceDataPairMetrics:
      description: List of pair metrics metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "liquidations_reported_future_buy_units_1d",
                  "full_name": "Liquidations, reported, future, buys, native units, one day",
                  "description": "The sum of all buy liquidations from perpetual futures markets in native units of the underlying base asset.",
                  "product": "Market Data",
                  "category": "Liquidations",
                  "subcategory": "Futures",
                  "unit": "Native Units",
                  "data_type": "decimal",
                  "type": "Sum",
                  "display_name": "Reported Futures Buy Liquidations, native units",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/liquidations/"
                },
                {
                  "metric": "liquidations_reported_future_buy_units_1h",
                  "full_name": "Liquidations, reported, future, buys, native units, one hour",
                  "description": "The sum of all buy liquidations from perpetual futures markets in native units of the underlying base asset.",
                  "product": "Market Data",
                  "category": "Liquidations",
                  "subcategory": "Futures",
                  "unit": "Native Units",
                  "data_type": "decimal",
                  "type": "Sum",
                  "display_name": "Reported Futures Buy Liquidations, native units",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/liquidations/"
                }
              ],
              "next_page_token": "bGlxdWlkYXRpb25zX3JlcG9ydGVkX2Z1dHVyZV9idXlfdW5pdHNfNW0",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/pair-metrics?api_key=<your_key>&page_size=2&next_page_token=bGlxdWlkYXRpb25zX3JlcG9ydGVkX2Z1dHVyZV9idXlfdW5pdHNfNW0"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataPairMetricsResponse'

    ReferenceDataInstitutionMetrics:
      description: List of institution metrics metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "bat_coin_per_share",
                  "full_name": "Grayscale Basic Attention Token Trust, Native Units of Coin Per Share",
                  "description": "The number of native units of the coin per share of the Grayscale Basic Attention Token Trust.",
                  "product": "Market Data",
                  "category": "Institutions",
                  "subcategory": "Investment Products",
                  "unit": "Native Units",
                  "data_type": "decimal",
                  "type": "Ratio",
                  "display_name": "Grayscale Basic Attention Token Trust, Native Units of Coin Per Share",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/institution-metrics-overview/grayscale/coin-per-share"
                },
                {
                  "metric": "bat_market_price",
                  "full_name": "Grayscale Basic Attention Token Trust, Market Price per Share, USD",
                  "description": "The market price per share in U.S. dollars of the Grayscale Basic Attention Token Trust.",
                  "product": "Market Data",
                  "category": "Institutions",
                  "subcategory": "Investment Products",
                  "unit": "USD",
                  "data_type": "decimal",
                  "type": "Ratio",
                  "display_name": "Grayscale Basic Attention Token Trust, Market Price per Share, USD",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/institution-metrics-overview/grayscale/market-price"
                }
              ],
              "next_page_token": "YmF0X25ldF9hc3NldF92YWx1ZQ",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/institution-metrics?api_key=<your_key>&page_size=2&next_page_token=YmF0X25ldF9hc3NldF92YWx1ZQ"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataInstitutionMetricsResponse'

    ReferenceDataMarketMetrics:
      description: List of market metrics metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "liquidations_reported_future_buy_units_1d",
                  "full_name": "Liquidations, reported, future, buys, native units, one day",
                  "description": "The sum of all buy liquidations from perpetual futures markets in native units of the underlying base asset.",
                  "product": "Market Data",
                  "category": "Liquidations",
                  "subcategory": "Futures",
                  "unit": "Native Units",
                  "data_type": "decimal",
                  "type": "Sum",
                  "display_name": "Reported Futures Buy Liquidations, native units",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/liquidations/"
                },
                {
                  "metric": "liquidations_reported_future_buy_units_1h",
                  "full_name": "Liquidations, reported, future, buys, native units, one hour",
                  "description": "The sum of all buy liquidations from perpetual futures markets in native units of the underlying base asset.",
                  "product": "Market Data",
                  "category": "Liquidations",
                  "subcategory": "Futures",
                  "unit": "Native Units",
                  "data_type": "decimal",
                  "type": "Sum",
                  "display_name": "Reported Futures Buy Liquidations, native units",
                  "docs_url": "https://docs.coinmetrics.io/market-data/market-data-overview/liquidations/"
                }
              ],
              "next_page_token": "bGlxdWlkYXRpb25zX3JlcG9ydGVkX2Z1dHVyZV9idXlfdW5pdHNfNW0",
              "next_page_url": "https://api.coinmetrics.io/v4/reference-data/market-metrics?api_key=<your_key>&page_size=2&next_page_token=bGlxdWlkYXRpb25zX3JlcG9ydGVkX2Z1dHVyZV9idXlfdW5pdHNfNW0"
            }
          schema:
            $ref: '#/components/schemas/ReferenceDataMarketMetricsResponse'

    Assets:
      description: List of assets.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "full_name": "Bitcoin",
                  "metrics": [
                    {
                      "metric": "AdrActCnt",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "2009-01-03T18:15:05.000000000Z",
                          "max_time": "2020-06-08T20:22:17.000000000Z",
                          "min_height": "0",
                          "max_height": "633762",
                          "min_hash": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
                          "max_hash": "0000000000000000001103d90edd76573342cf3e2ff2453f8acf4d02fe91a32a"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2009-01-03T00:00:00.000000000Z",
                          "max_time": "2020-06-07T00:00:00.000000000Z",
                          "community": true
                        }
                      ]
                    },
                    {
                      "metric": "FlowInBFXUSD",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "2009-01-03T18:15:05.000000000Z",
                          "max_time": "2020-06-08T20:37:31.000000000Z",
                          "min_height": "0",
                          "max_height": "633763",
                          "min_hash": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
                          "max_hash": "000000000000000000111614e0f5305dd4b16ca75cf4be433f58836eecf76929"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2010-07-18T00:00:00.000000000Z",
                          "max_time": "2020-06-07T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ],
                  "exchanges": [
                    "binance",
                    "coinbase",
                    "kraken"
                  ],
                  "markets": [
                    "binance-btc-usdt-spot",
                    "binance-eth-btc-spot",
                    "coinbase-btc-usd-spot",
                    "coinbase-eth-btc-spot",
                    "kraken-btc-usd-spot"
                  ]
                },
                {
                  "asset": "eth",
                  "full_name": "Ethereum",
                  "metrics": [
                    {
                      "metric": "BlkSizeByte",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "1970-01-01T00:00:00.000000000Z",
                          "max_time": "2020-06-08T20:44:27.000000000Z",
                          "min_height": "0",
                          "max_height": "10227342",
                          "min_hash": "d4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
                          "max_hash": "9358a17c8fa0aab1fb0dca61052764d85f36ae645a614e4d8531f43fcf264025"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2015-07-30T00:00:00.000000000Z",
                          "max_time": "2020-06-07T00:00:00.000000000Z",
                          "community": true
                        }
                      ]
                    },
                    {
                      "metric": "FlowInBFXUSD",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "1970-01-01T00:00:00.000000000Z",
                          "max_time": "2020-06-08T20:44:27.000000000Z",
                          "min_height": "0",
                          "max_height": "10227342",
                          "min_hash": "d4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
                          "max_hash": "9358a17c8fa0aab1fb0dca61052764d85f36ae645a614e4d8531f43fcf264025"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2015-08-08T00:00:00.000000000Z",
                          "max_time": "2020-06-07T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ],
                  "exchanges": [
                    "bitbank",
                    "coinbase",
                    "huobi",
                    "liquid",
                  ],
                  "markets": [
                    "bitbank-eth-btc-spot",
                    "huobi-eth-btc-spot",
                    "huobi-eth-usdt-spot",
                    "coinbase-eth-usd-spot",
                    "coinbase-bat-eth-spot",
                    "liquid-eth-usd-spot"
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/AssetsResponse'

    AssetAlertRules:
      description: List of asset alerts.
      content:
        application/json:
          example:
            {
              "data": [ {
                "asset": "btc",
                "name":"block_count_empty_6b_hi",
                "conditions":[ {
                  "description": "The last 4 blocks were empty.",
                  "threshold": "4",
                  "constituents": [
                    "block_count_empty_6b"
                  ]
                } ]
              } ]
            }
          schema:
            $ref: '#/components/schemas/AssetAlertRulesResponse'

    Pairs:
      description: List of asset pairs.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "aave-bnb",
                  "full_name": "Aave - BNB",
                  "metrics": [
                    {
                      "metric": "volume_trusted_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2020-10-16T00:00:00.000000000Z",
                          "max_time": "2021-01-05T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_trusted_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2020-10-15T03:00:00.000000000Z",
                          "max_time": "2021-01-06T12:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "pair": "aave-btc",
                  "full_name": "Aave - Bitcoin",
                  "metrics": [
                    {
                      "metric": "volume_trusted_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2020-10-11T00:00:00.000000000Z",
                          "max_time": "2021-01-05T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_trusted_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2020-10-10T19:00:00.000000000Z",
                          "max_time": "2021-01-06T12:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/PairsResponse'

    CatalogPairCandles:
      description: List of asset pair candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "btc-eur",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2011-08-28T18:26:00.000000000Z",
                      "max_time": "2022-06-29T23:25:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2011-08-28T18:25:00.000000000Z",
                      "max_time": "2022-06-29T23:20:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2011-08-28T18:20:00.000000000Z",
                      "max_time": "2022-06-29T23:10:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2011-08-28T18:15:00.000000000Z",
                      "max_time": "2022-06-29T23:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2011-08-28T18:00:00.000000000Z",
                      "max_time": "2022-06-29T22:30:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2011-08-28T18:00:00.000000000Z",
                      "max_time": "2022-06-29T22:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2011-08-28T16:00:00.000000000Z",
                      "max_time": "2022-06-29T16:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2011-08-28T00:00:00.000000000Z",
                      "max_time": "2022-06-28T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "pair": "btc-usd",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2010-07-18T03:43:00.000000000Z",
                      "max_time": "2022-06-29T23:25:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2010-07-18T03:40:00.000000000Z",
                      "max_time": "2022-06-29T23:20:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2010-07-18T03:40:00.000000000Z",
                      "max_time": "2022-06-29T23:10:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2010-07-18T03:30:00.000000000Z",
                      "max_time": "2022-06-29T23:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2010-07-18T03:30:00.000000000Z",
                      "max_time": "2022-06-29T22:30:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2010-07-18T03:00:00.000000000Z",
                      "max_time": "2022-06-29T22:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2010-07-18T00:00:00.000000000Z",
                      "max_time": "2022-06-29T16:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-18T00:00:00.000000000Z",
                      "max_time": "2022-06-28T00:00:00.000000000Z"
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogPairCandlesResponse'

    CatalogV2PairCandles:
      description: List of asset pair candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "btc-eur",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2011-08-28T18:26:00.000000000Z",
                      "max_time": "2022-06-29T23:25:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2011-08-28T18:25:00.000000000Z",
                      "max_time": "2022-06-29T23:20:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2011-08-28T18:20:00.000000000Z",
                      "max_time": "2022-06-29T23:10:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2011-08-28T18:15:00.000000000Z",
                      "max_time": "2022-06-29T23:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2011-08-28T18:00:00.000000000Z",
                      "max_time": "2022-06-29T22:30:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2011-08-28T18:00:00.000000000Z",
                      "max_time": "2022-06-29T22:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2011-08-28T16:00:00.000000000Z",
                      "max_time": "2022-06-29T16:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2011-08-28T00:00:00.000000000Z",
                      "max_time": "2022-06-28T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "pair": "btc-usd",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2010-07-18T03:43:00.000000000Z",
                      "max_time": "2022-06-29T23:25:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2010-07-18T03:40:00.000000000Z",
                      "max_time": "2022-06-29T23:20:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2010-07-18T03:40:00.000000000Z",
                      "max_time": "2022-06-29T23:10:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2010-07-18T03:30:00.000000000Z",
                      "max_time": "2022-06-29T23:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2010-07-18T03:30:00.000000000Z",
                      "max_time": "2022-06-29T22:30:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2010-07-18T03:00:00.000000000Z",
                      "max_time": "2022-06-29T22:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2010-07-18T00:00:00.000000000Z",
                      "max_time": "2022-06-29T16:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-18T00:00:00.000000000Z",
                      "max_time": "2022-06-28T00:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "Q01CSTEw",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/pair-candles?api_key=<your_key>&page_size=2&next_page_token=Q01CSTEw"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2PairCandlesResponse'

    CatalogAllV2PairCandles:
      description: List of asset pair candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "btc-eur",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2011-08-28T18:26:00.000000000Z",
                      "max_time": "2022-06-29T23:25:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2011-08-28T18:25:00.000000000Z",
                      "max_time": "2022-06-29T23:20:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2011-08-28T18:20:00.000000000Z",
                      "max_time": "2022-06-29T23:10:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2011-08-28T18:15:00.000000000Z",
                      "max_time": "2022-06-29T23:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2011-08-28T18:00:00.000000000Z",
                      "max_time": "2022-06-29T22:30:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2011-08-28T18:00:00.000000000Z",
                      "max_time": "2022-06-29T22:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2011-08-28T16:00:00.000000000Z",
                      "max_time": "2022-06-29T16:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2011-08-28T00:00:00.000000000Z",
                      "max_time": "2022-06-28T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "pair": "btc-usd",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2010-07-18T03:43:00.000000000Z",
                      "max_time": "2022-06-29T23:25:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2010-07-18T03:40:00.000000000Z",
                      "max_time": "2022-06-29T23:20:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2010-07-18T03:40:00.000000000Z",
                      "max_time": "2022-06-29T23:10:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2010-07-18T03:30:00.000000000Z",
                      "max_time": "2022-06-29T23:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2010-07-18T03:30:00.000000000Z",
                      "max_time": "2022-06-29T22:30:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2010-07-18T03:00:00.000000000Z",
                      "max_time": "2022-06-29T22:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2010-07-18T00:00:00.000000000Z",
                      "max_time": "2022-06-29T16:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-18T00:00:00.000000000Z",
                      "max_time": "2022-06-28T00:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "Q01CSTEw",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/pair-candles?api_key=<your_key>&page_size=2&next_page_token=Q01CSTEw"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2PairCandlesResponse'

    CatalogIndexCandles:
      description: List of index candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "index": "CMBIBTC",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2022-06-28T13:51:00.000000000Z",
                      "max_time": "2022-07-15T15:55:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2022-06-28T13:50:00.000000000Z",
                      "max_time": "2022-07-15T15:50:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2022-06-28T13:50:00.000000000Z",
                      "max_time": "2022-07-15T15:40:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2022-06-28T13:45:00.000000000Z",
                      "max_time": "2022-07-15T15:30:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2022-06-28T13:30:00.000000000Z",
                      "max_time": "2022-07-15T15:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2022-06-28T13:00:00.000000000Z",
                      "max_time": "2022-07-15T14:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2022-06-28T12:00:00.000000000Z",
                      "max_time": "2022-07-15T08:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2022-06-28T00:00:00.000000000Z",
                      "max_time": "2022-07-14T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "index": "CMBIETHT",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2022-06-28T13:51:00.000000000Z",
                      "max_time": "2022-07-15T15:55:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2022-06-28T13:50:00.000000000Z",
                      "max_time": "2022-07-15T15:50:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2022-06-28T13:50:00.000000000Z",
                      "max_time": "2022-07-15T15:40:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2022-06-28T13:45:00.000000000Z",
                      "max_time": "2022-07-15T15:30:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2022-06-28T13:30:00.000000000Z",
                      "max_time": "2022-07-15T15:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2022-06-28T13:00:00.000000000Z",
                      "max_time": "2022-07-15T14:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2022-06-28T12:00:00.000000000Z",
                      "max_time": "2022-07-15T08:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2022-06-28T00:00:00.000000000Z",
                      "max_time": "2022-07-14T00:00:00.000000000Z"
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogIndexCandlesResponse'

    CatalogV2IndexCandles:
      description: List of index candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "index": "CBTCED",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2023-06-08T07:05:00.000000000Z",
                      "max_time": "2023-08-24T15:32:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2023-06-08T07:05:00.000000000Z",
                      "max_time": "2023-08-24T15:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:20:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:15:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T14:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2023-06-08T04:00:00.000000000Z",
                      "max_time": "2023-08-24T08:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2023-06-08T00:00:00.000000000Z",
                      "max_time": "2023-08-23T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "index": "CBTCRT",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2023-06-08T07:05:00.000000000Z",
                      "max_time": "2023-08-24T15:32:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2023-06-08T07:05:00.000000000Z",
                      "max_time": "2023-08-24T15:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:20:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:15:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T14:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2023-06-08T04:00:00.000000000Z",
                      "max_time": "2023-08-24T08:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2023-06-08T00:00:00.000000000Z",
                      "max_time": "2023-08-23T00:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "Q01CSTEw",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/index-candles?api_key=<your_key>&page_size=2&next_page_token=Q01CSTEw"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2IndexCandlesResponse'

    CatalogAllV2IndexCandles:
      description: List of index candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "index": "CBTCED",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2023-06-08T07:05:00.000000000Z",
                      "max_time": "2023-08-24T15:32:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2023-06-08T07:05:00.000000000Z",
                      "max_time": "2023-08-24T15:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:20:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:15:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T14:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2023-06-08T04:00:00.000000000Z",
                      "max_time": "2023-08-24T08:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2023-06-08T00:00:00.000000000Z",
                      "max_time": "2023-08-23T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "index": "CBTCRT",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2023-06-08T07:05:00.000000000Z",
                      "max_time": "2023-08-24T15:32:00.000000000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2023-06-08T07:05:00.000000000Z",
                      "max_time": "2023-08-24T15:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:20:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:15:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T15:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2023-06-08T07:00:00.000000000Z",
                      "max_time": "2023-08-24T14:00:00.000000000Z"
                    },
                    {
                      "frequency": "4h",
                      "min_time": "2023-06-08T04:00:00.000000000Z",
                      "max_time": "2023-08-24T08:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2023-06-08T00:00:00.000000000Z",
                      "max_time": "2023-08-23T00:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "Q01CSTEw",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/index-candles?api_key=<your_key>&page_size=2&next_page_token=Q01CSTEw"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2IndexCandlesResponse'

    ExchangeAssets:
      description: List of exchange-assets.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange_asset": "binance-btc",
                  "metrics": [
                    {
                      "metric": "volume_trusted_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2020-10-16T00:00:00.000000000Z",
                          "max_time": "2021-01-05T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_trusted_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2020-10-15T03:00:00.000000000Z",
                          "max_time": "2021-01-06T12:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "exchange_asset": "coinbase-eth",
                  "metrics": [
                    {
                      "metric": "volume_trusted_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2020-10-11T00:00:00.000000000Z",
                          "max_time": "2021-01-05T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_trusted_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2020-10-10T19:00:00.000000000Z",
                          "max_time": "2021-01-06T12:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/ExchangeAssetsResponse'

    Institutions:
      description: List of institutions.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "institution": "grayscale",
                  "metrics": [
                    {
                      "metric": "btc_total_assets",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2020-10-16T00:00:00.000000000Z",
                          "max_time": "2021-01-05T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "btc_shares_outstanding",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2020-10-15T03:00:00.000000000Z",
                          "max_time": "2021-01-06T12:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/InstitutionsResponse'

    Exchanges:
      description: List of exchanges.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange": "bibox",
                  "markets": [
                    "bibox-abt-btc-spot",
                    "bibox-etc-usdt-spot",
                  ],
                  "min_time": "2019-04-24T11:09:59.000000000Z",
                  "max_time": "2019-05-18T16:06:10.927000000Z"
                },
                {
                  "exchange": "binance",
                  "markets": [
                    "binance-BTCUSDT-future",
                    "binance-LTCUSDT-future",
                    "binance-ada-bnb-spot",
                    "binance-btc-usdt-spot",
                    "binance-bcpt-btc-spot",
                    "binance-bcd-eth-spot",
                  ],
                  "min_time": "2017-07-14T04:00:00.510000000Z",
                  "max_time": "2020-06-08T20:33:28.868000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/ExchangesResponse'

    Markets:
      description: List of markets.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-btc-usdt-spot",
                  "min_time": "2017-08-17T04:00:32.285000000Z",
                  "max_time": "2022-08-22T14:19:01.239000000Z",
                  "exchange": "binance",
                  "type": "spot",
                  "trades": {
                    "min_time": "2017-08-17T04:00:32.285000000Z",
                    "max_time": "2022-08-22T14:19:01.239000000Z"
                  },
                  "orderbooks": {
                    "min_time": "2021-08-03T16:00:00.000000000Z",
                    "max_time": "2022-08-22T14:18:50.000000000Z"
                  },
                  "quotes": {
                    "min_time": "2021-08-03T16:00:00.000000000Z",
                    "max_time": "2022-08-22T14:18:50.000000000Z"
                  },
                  "base": "btc",
                  "quote": "usdt",
                  "status": "online",
                  "order_amount_increment": "0.00000001",
                  "order_amount_size_min": "0.0001",
                  "order_amount_size_max": "100",
                  "order_price_increment": "0.01",
                  "order_price_min": "0.1",
                  "order_price_max": "100000",
                  "order_size_min": "0.0001",
                  "order_taker_fee": "0.002",
                  "order_maker_fee": "0.002",
                  "margin_trading_enabled": true
                },
                {
                  "market": "bitfinex-btc-usdt-spot",
                  "min_time": "2019-03-11T10:05:37.974000000Z",
                  "max_time": "2022-08-22T14:18:50.000000000Z",
                  "exchange": "bitfinex",
                  "type": "spot",
                  "trades": {
                    "min_time": "2019-03-11T10:05:37.974000000Z",
                    "max_time": "2022-08-22T14:18:46.665000000Z"
                  },
                  "orderbooks": {
                    "min_time": "2021-08-20T13:00:00.000000000Z",
                    "max_time": "2022-08-22T14:18:50.000000000Z"
                  },
                  "quotes": {
                    "min_time": "2021-08-20T13:00:00.000000000Z",
                    "max_time": "2022-08-22T14:18:50.000000000Z"
                  },
                  "base": "btc",
                  "quote": "usdt",
                  "status": "online",
                  "order_amount_increment": "0.00000001",
                  "order_amount_size_min": "0.0001",
                  "order_price_increment": "0.01",
                  "order_price_order_min": "0.1",
                  "order_size_min": "0.0001",
                  "order_taker_fee": "0.002",
                  "order_maker_fee": "0.002",
                  "margin_trading_enabled": false
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/MarketsResponse'

    CatalogMarketCandles:
      description: List of market candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bitmex-XBTUSD-future",
                  "frequencies": [
                    {
                      "frequency": "5m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-19T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "bittrex-btc-usd-spot",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:00:00.000001000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-19T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "cme-BTCQ1-future",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "min_time": "2019-12-25T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketCandlesResponse'

    CatalogV2MarketCandles:
      description: List of market candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bitmex-XBTUSD-future",
                  "frequencies": [
                    {
                      "frequency": "5m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-19T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "bittrex-btc-usd-spot",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:00:00.000001000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-19T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "cme-BTCQ1-future",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "min_time": "2019-12-25T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-candles?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketCandlesResponse'

    CatalogAllV2MarketCandles:
      description: List of market candles statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bitmex-XBTUSD-future",
                  "frequencies": [
                    {
                      "frequency": "5m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-19T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "bittrex-btc-usd-spot",
                  "frequencies": [
                    {
                      "frequency": "1m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:00:00.000001000Z"
                    },
                    {
                      "frequency": "5m",
                      "min_time": "2020-01-19T21:00:00.000001000Z",
                      "max_time": "2020-01-19T21:25:00.000000000Z"
                    },
                    {
                      "frequency": "10m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "15m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "30m",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2020-01-19T21:00:00.000000000Z",
                      "max_time": "2020-01-19T21:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-19T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "cme-BTCQ1-future",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "min_time": "2019-12-25T00:00:00.000000000Z",
                      "max_time": "2019-12-25T00:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-candles?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketCandlesResponse'

    CatalogMarketTrades:
      description: List of market trades statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bibox-1inch-usdt-spot",
                  "min_time": "2022-03-07T19:43:21.195000000Z",
                  "max_time": "2022-07-04T11:47:49.707000000Z"
                },
                {
                  "market": "bibox-aaa-usdt-spot",
                  "min_time": "2021-12-01T11:11:20.656000000Z",
                  "max_time": "2022-03-01T18:14:06.507000000Z"
                },
                {
                  "market": "bibox-aave-btc-spot",
                  "min_time": "2022-03-07T19:47:10.014000000Z",
                  "max_time": "2022-07-04T11:47:56.717000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketTradesResponse'

    CatalogV2MarketTrades:
      description: List of market trades statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bibox-1inch-usdt-spot",
                  "min_time": "2022-03-07T19:43:21.195000000Z",
                  "max_time": "2022-07-04T11:47:49.707000000Z"
                },
                {
                  "market": "bibox-aaa-usdt-spot",
                  "min_time": "2021-12-01T11:11:20.656000000Z",
                  "max_time": "2022-03-01T18:14:06.507000000Z"
                },
                {
                  "market": "bibox-aave-btc-spot",
                  "min_time": "2022-03-07T19:47:10.014000000Z",
                  "max_time": "2022-07-04T11:47:56.717000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-trades?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketTradesResponse'

    CatalogAllV2MarketTrades:
      description: List of market trades statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bibox-1inch-usdt-spot",
                  "min_time": "2022-03-07T19:43:21.195000000Z",
                  "max_time": "2022-07-04T11:47:49.707000000Z"
                },
                {
                  "market": "bibox-aaa-usdt-spot",
                  "min_time": "2021-12-01T11:11:20.656000000Z",
                  "max_time": "2022-03-01T18:14:06.507000000Z"
                },
                {
                  "market": "bibox-aave-btc-spot",
                  "min_time": "2022-03-07T19:47:10.014000000Z",
                  "max_time": "2022-07-04T11:47:56.717000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-trades?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketTradesResponse'

    CatalogMarketOrderbooks:
      description: List of market orderbooks statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:00:00.000000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z",
                  "depths": [
                    {
                      "depth": "30000",
                      "min_time": "2022-01-26T03:00:00.000000000Z",
                      "max_time": "2022-04-11T08:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "binance-1000FLOKIUSDT-future",
                  "min_time": "2023-05-06T16:00:00.000000000Z",
                  "max_time": "2023-09-08T11:00:00.000000000Z",
                  "depths": [
                    {
                      "depth": "30000",
                      "min_time": "2023-05-06T16:00:00.000000000Z",
                      "max_time": "2023-09-08T11:00:00.000000000Z"
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketOrderbooksResponse'

    CatalogV2MarketOrderbooks:
      description: List of market orderbooks statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "depths": [
                    {
                      "depth": "30000",
                      "min_time": "2022-01-26T03:00:00.000000000Z",
                      "max_time": "2022-04-11T08:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "binance-1000FLOKIUSDT-future",
                  "depths": [
                    {
                      "depth": "30000",
                      "min_time": "2023-05-06T16:00:00.000000000Z",
                      "max_time": "2023-09-08T11:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "YmluYW5jZS0xMDAwTFVOQ0JVU0QtZnV0dXJl",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-orderbooks?api_key=<your_key>&page_size=2&next_page_token=YmluYW5jZS0xMDAwTFVOQ0JVU0QtZnV0dXJl"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketOrderbooksResponse'

    CatalogAllV2MarketOrderbooks:
      description: List of market orderbooks statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "depths": [
                    {
                      "depth": "30000",
                      "min_time": "2022-01-26T03:00:00.000000000Z",
                      "max_time": "2022-04-11T08:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "market": "binance-1000FLOKIUSDT-future",
                  "depths": [
                    {
                      "depth": "30000",
                      "min_time": "2023-05-06T16:00:00.000000000Z",
                      "max_time": "2023-09-08T11:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "YmluYW5jZS0xMDAwTFVOQ0JVU0QtZnV0dXJl",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-orderbooks?api_key=<your_key>&page_size=2&next_page_token=YmluYW5jZS0xMDAwTFVOQ0JVU0QtZnV0dXJl"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketOrderbooksResponse'

    CatalogMarketQuotes:
      description: List of market quotes statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:00:00.000000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:00:00.000000000Z",
                  "max_time": "2022-07-04T13:00:00.000000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-11-10T22:00:00.000000000Z",
                  "max_time": "2022-07-04T13:00:00.000000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketQuotesResponse'

    CatalogV2MarketQuotes:
      description: List of market quotes statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:00:00.000000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:00:00.000000000Z",
                  "max_time": "2022-07-04T13:00:00.000000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-11-10T22:00:00.000000000Z",
                  "max_time": "2022-07-04T13:00:00.000000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-quotes?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketQuotesResponse'

    CatalogAllV2MarketQuotes:
      description: List of market quotes statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:00:00.000000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:00:00.000000000Z",
                  "max_time": "2022-07-04T13:00:00.000000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-11-10T22:00:00.000000000Z",
                  "max_time": "2022-07-04T13:00:00.000000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-quotes?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketQuotesResponse'

    CatalogMarketFundingRates:
      description: List of market funding rates statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketFundingRatesResponse'

    CatalogV2MarketFundingRates:
      description: List of market funding rates statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-funding-rates?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketFundingRatesResponse'

    CatalogV2MarketFundingRatesPredicted:
      description: List of predicted market funding rates statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bybit-1000000VINUUSDT-future",
                  "min_time": "2023-11-28T10:09:00.000000000Z",
                  "max_time": "2024-01-30T13:17:00.000000000Z"
                },
                {
                  "market": "bybit-10000LADYSUSDT-future",
                  "min_time": "2023-05-11T13:08:00.000000000Z",
                  "max_time": "2024-01-30T13:17:00.000000000Z"
                },
                {
                  "market": "bybit-10000NFTUSDT-future",
                  "min_time": "2023-01-27T21:22:00.000000000Z",
                  "max_time": "2024-01-30T13:17:00.000000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketFundingRatesPredictedResponse'

    CatalogAllV2MarketFundingRates:
      description: List of market funding rates statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-funding-rates?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketFundingRatesResponse'

    CatalogAllV2MarketFundingRatesPredicted:
      description: List of predicted market funding rates statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bybit-1000000VINUUSDT-future",
                  "min_time": "2023-11-28T10:09:00.000000000Z",
                  "max_time": "2024-01-30T13:17:00.000000000Z"
                },
                {
                  "market": "bybit-10000LADYSUSDT-future",
                  "min_time": "2023-05-11T13:08:00.000000000Z",
                  "max_time": "2024-01-30T13:17:00.000000000Z"
                },
                {
                  "market": "bybit-10000NFTUSDT-future",
                  "min_time": "2023-01-27T21:22:00.000000000Z",
                  "max_time": "2024-01-30T13:17:00.000000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketFundingRatesPredictedResponse'

    CatalogMarketContractPrices:
      description: List of contract prices statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketContractPricesResponse'

    CatalogV2MarketContractPrices:
      description: List of contract prices statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-contract-prices?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketContractPricesResponse'

    CatalogAllV2MarketContractPrices:
      description: List of contract prices statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-contract-prices?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketContractPricesResponse'

    CatalogMarketImpliedVolatility:
      description: List of implied volatility statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketImpliedVolatilityResponse'

    CatalogV2MarketImpliedVolatility:
      description: List of implied volatility statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-implied-volatility?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketImpliedVolatilityResponse'

    CatalogAllV2MarketImpliedVolatility:
      description: List of implied volatility statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-implied-volatility?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketImpliedVolatilityResponse'

    CatalogMarketGreeks:
      description: List of greeks statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketGreeksResponse'

    CatalogV2MarketGreeks:
      description: List of greeks statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-greeks?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketGreeksResponse'

    CatalogAllV2MarketGreeks:
      description: List of greeks statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-BTC-15OCT21-60000-C-option",
                  "min_time": "2022-01-26T08:00:00.001000000Z",
                  "max_time": "2022-04-11T08:00:00.000000000Z"
                },
                {
                  "market": "deribit-BTC-1OCT21-75000-C-option",
                  "min_time": "2022-05-30T16:00:00.005000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                },
                {
                  "market": "deribit-BTC-26NOV21-60000-C-option",
                  "min_time": "2021-05-10T16:00:00.013000000Z",
                  "max_time": "2022-07-04T08:00:00.001000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-greeks?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketGreeksResponse'

    CatalogMarketOpeninterest:
      description: List of market open interest statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:30:43.271000000Z",
                  "max_time": "2022-04-11T08:51:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:45:00.000000000Z",
                  "max_time": "2022-07-04T13:53:00.000000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-10T13:00:58.123000000Z",
                  "max_time": "2022-07-04T13:53:00.000000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketOpeninterestResponse'

    CatalogV2MarketOpeninterest:
      description: List of market open interest statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:30:43.271000000Z",
                  "max_time": "2022-04-11T08:51:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:45:00.000000000Z",
                  "max_time": "2022-07-04T13:53:00.000000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-10T13:00:58.123000000Z",
                  "max_time": "2022-07-04T13:53:00.000000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-openinterest?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketOpeninterestResponse'

    CatalogAllV2MarketOpeninterest:
      description: List of market open interest statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:30:43.271000000Z",
                  "max_time": "2022-04-11T08:51:00.000000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:45:00.000000000Z",
                  "max_time": "2022-07-04T13:53:00.000000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-10T13:00:58.123000000Z",
                  "max_time": "2022-07-04T13:53:00.000000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-openinterest?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketOpeninterestResponse'

    CatalogMarketLiquidations:
      description: List of market liquidations statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:46:28.290000000Z",
                  "max_time": "2022-04-11T03:40:00.193000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:45:32.286000000Z",
                  "max_time": "2022-07-04T12:25:16.559000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-11T23:00:17.729000000Z",
                  "max_time": "2022-07-04T13:35:00.567000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketLiquidationsResponse'

    CatalogV2MarketLiquidations:
      description: List of market liquidations statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:46:28.290000000Z",
                  "max_time": "2022-04-11T03:40:00.193000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:45:32.286000000Z",
                  "max_time": "2022-07-04T12:25:16.559000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-11T23:00:17.729000000Z",
                  "max_time": "2022-07-04T13:35:00.567000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-liquidations?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketLiquidationsResponse'

    CatalogAllV2MarketLiquidations:
      description: List of market liquidations statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000BTTCUSDT-future",
                  "min_time": "2022-01-26T03:46:28.290000000Z",
                  "max_time": "2022-04-11T03:40:00.193000000Z"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "min_time": "2022-05-31T02:45:32.286000000Z",
                  "max_time": "2022-07-04T12:25:16.559000000Z"
                },
                {
                  "market": "binance-1000SHIBUSDT-future",
                  "min_time": "2021-05-11T23:00:17.729000000Z",
                  "max_time": "2022-07-04T13:35:00.567000000Z"
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-liquidations?api_key=<your_key>&page_size=3&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketLiquidationsResponse'

    CatalogMarketMetrics:
      description: List of market metrics statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-BTCUSDT-future",
                  "metrics": [
                    {
                      "metric": "liquidations_reported_future_buy_usd_5m",
                      "frequencies": [
                        {
                          "frequency": "5m",
                          "min_time": "2020-01-01T01:25:00.000000000Z",
                          "max_time": "2022-01-21T00:30:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2020-01-01T01:00:00.000000000Z",
                          "max_time": "2022-01-20T23:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_units_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2020-01-01T00:00:00.000000000Z",
                          "max_time": "2022-01-20T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "market": "bybit-BTCUSDT-future",
                  "metrics": [
                    {
                      "metric": "liquidations_reported_future_buy_usd_5m",
                      "frequencies": [
                        {
                          "frequency": "5m",
                          "min_time": "2021-04-30T12:35:00.000000000Z",
                          "max_time": "2022-01-21T00:25:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2021-04-30T12:00:00.000000000Z",
                          "max_time": "2022-01-20T23:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_units_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2021-04-30T00:00:00.000000000Z",
                          "max_time": "2022-01-20T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMarketMetricsResponse'

    CatalogV2MarketMetrics:
      description: List of market metrics statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-BTCUSDT-future",
                  "metrics": [
                    {
                      "metric": "liquidations_reported_future_buy_usd_5m",
                      "frequencies": [
                        {
                          "frequency": "5m",
                          "min_time": "2020-01-01T01:25:00.000000000Z",
                          "max_time": "2022-01-21T00:30:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2020-01-01T01:00:00.000000000Z",
                          "max_time": "2022-01-20T23:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_units_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2020-01-01T00:00:00.000000000Z",
                          "max_time": "2022-01-20T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "market": "bybit-BTCUSDT-future",
                  "metrics": [
                    {
                      "metric": "liquidations_reported_future_buy_usd_5m",
                      "frequencies": [
                        {
                          "frequency": "5m",
                          "min_time": "2021-04-30T12:35:00.000000000Z",
                          "max_time": "2022-01-21T00:25:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2021-04-30T12:00:00.000000000Z",
                          "max_time": "2022-01-20T23:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_units_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2021-04-30T00:00:00.000000000Z",
                          "max_time": "2022-01-20T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/market-metrics?api_key=<your_key>&page_size=2&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketMetricsResponse'

    CatalogAllV2MarketMetrics:
      description: List of market metrics statistics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-BTCUSDT-future",
                  "metrics": [
                    {
                      "metric": "liquidations_reported_future_buy_usd_5m",
                      "frequencies": [
                        {
                          "frequency": "5m",
                          "min_time": "2020-01-01T01:25:00.000000000Z",
                          "max_time": "2022-01-21T00:30:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2020-01-01T01:00:00.000000000Z",
                          "max_time": "2022-01-20T23:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_units_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2020-01-01T00:00:00.000000000Z",
                          "max_time": "2022-01-20T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "market": "bybit-BTCUSDT-future",
                  "metrics": [
                    {
                      "metric": "liquidations_reported_future_buy_usd_5m",
                      "frequencies": [
                        {
                          "frequency": "5m",
                          "min_time": "2021-04-30T12:35:00.000000000Z",
                          "max_time": "2022-01-21T00:25:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2021-04-30T12:00:00.000000000Z",
                          "max_time": "2022-01-20T23:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_units_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2021-04-30T00:00:00.000000000Z",
                          "max_time": "2022-01-20T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "Ymlib3gtYWF2ZS1ldGgtc3BvdA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/market-metrics?api_key=<your_key>&page_size=2&next_page_token=Ymlib3gtYWF2ZS1ldGgtc3BvdA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MarketMetricsResponse'

    CatalogMetrics:
      description: List of asset metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "AdrActCnt",
                  "full_name": "Addresses, active, count",
                  "description": "The sum count of unique addresses that were active in the network (either as a recipient or originator of a ledger change) that interval. All parties in a ledger change action (recipients and originators) are counted. Individual addresses are not double-counted if previously active.",
                  "category": "Addresses",
                  "subcategory": "Active",
                  "unit": "Addresses",
                  "data_type": "bigint",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1b",
                      "assets": [
                        "btc",
                        "eth",
                        "sol"
                      ]
                    },
                    {
                      "frequency": "1d",
                      "assets": [
                        "ada",
                        "btc"
                      ]
                    }
                  ],
                  "display_name": "Active Addr Cnt"
                },
                {
                  "metric": "AdrActContCnt",
                  "full_name": "Addresses, active, contracts, count",
                  "description": "The sum count of unique smart contract addresses that were active in the network (either as a recipient or originator of a ledger change) that interval. All parties in a ledger change action (recipients and originators) are counted. Individual addresses are not double-counted if previously active.",
                  "category": "Addresses",
                  "subcategory": "Active",
                  "unit": "Addresses",
                  "data_type": "bigint",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "assets": [
                        "etc",
                        "eth",
                        "xtz"
                      ]
                    }
                  ],
                  "display_name": "Active Smart Contract Addr Cnt"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMetricsResponse'

    CatalogAssetMetrics:
      description: List of asset metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "AdrActCnt",
                  "full_name": "Addresses, active, count",
                  "description": "The sum count of unique addresses that were active in the network (either as a recipient or originator of a ledger change) that interval. All parties in a ledger change action (recipients and originators) are counted. Individual addresses are not double-counted if previously active.",
                  "product": "Network Data",
                  "category": "Addresses",
                  "subcategory": "Active",
                  "unit": "Addresses",
                  "data_type": "bigint",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1b",
                      "assets": [
                        "btc",
                        "eth",
                        "sol"
                      ]
                    },
                    {
                      "frequency": "1d",
                      "assets": [
                        "ada",
                        "btc"
                      ]
                    }
                  ],
                  "display_name": "Active Addr Cnt"
                },
                {
                  "metric": "AdrActContCnt",
                  "full_name": "Addresses, active, contracts, count",
                  "description": "The sum count of unique smart contract addresses that were active in the network (either as a recipient or originator of a ledger change) that interval. All parties in a ledger change action (recipients and originators) are counted. Individual addresses are not double-counted if previously active.",
                  "product": "Network Data",
                  "category": "Addresses",
                  "subcategory": "Active",
                  "unit": "Addresses",
                  "data_type": "bigint",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "assets": [
                        "etc",
                        "eth",
                        "xtz"
                      ]
                    }
                  ],
                  "display_name": "Active Smart Contract Addr Cnt"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogAssetMetricsResponse'

    CatalogV2AssetMetrics:
      description: List of asset metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "metrics": [
                    {
                      "metric": "AdrActCnt",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "2009-01-03T18:15:05.000000000Z",
                          "max_time": "2023-05-11T14:40:34.000000000Z",
                          "min_height": "0",
                          "max_height": "789270",
                          "min_hash": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
                          "max_hash": "000000000000000000048a29c1b3374cfaac726ee4e7774d6884699ae5cff7a9"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2009-01-03T00:00:00.000000000Z",
                          "max_time": "2023-05-10T00:00:00.000000000Z",
                          "community": true
                        }
                      ]
                    },
                    {
                      "metric": "FlowInBFXUSD",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "2009-01-03T18:15:05.000000000Z",
                          "max_time": "2023-05-11T14:40:34.000000000Z",
                          "min_height": "0",
                          "max_height": "789270",
                          "min_hash": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
                          "max_hash": "000000000000000000048a29c1b3374cfaac726ee4e7774d6884699ae5cff7a9"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2010-07-18T00:00:00.000000000Z",
                          "max_time": "2023-05-10T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "asset": "eth",
                  "metrics": [
                    {
                      "metric": "BlkSizeByte",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "1970-01-01T00:00:00.000000000Z",
                          "max_time": "2023-05-11T16:18:47.000000000Z",
                          "min_height": "0",
                          "max_height": "17238243",
                          "min_hash": "d4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
                          "max_hash": "dfefa28d80fe8f6926ca8d161df8bc2819c30e17b176e166123325391ac8bb0b"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2015-07-30T00:00:00.000000000Z",
                          "max_time": "2023-05-10T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "FlowInBFXUSD",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "1970-01-01T00:00:00.000000000Z",
                          "max_time": "2023-05-11T16:18:47.000000000Z",
                          "min_height": "0",
                          "max_height": "17238243",
                          "min_hash": "d4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
                          "max_hash": "dfefa28d80fe8f6926ca8d161df8bc2819c30e17b176e166123325391ac8bb0b"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2015-08-08T00:00:00.000000000Z",
                          "max_time": "2023-06-29T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "cGVycA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/asset-metrics?api_key=<your_key>&page_size=2&next_page_token=cGVycA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2AssetMetricsResponse'

    CatalogAllV2AssetMetrics:
      description: List of asset metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "metrics": [
                    {
                      "metric": "AdrActCnt",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "2009-01-03T18:15:05.000000000Z",
                          "max_time": "2023-05-11T14:40:34.000000000Z",
                          "min_height": "0",
                          "max_height": "789270",
                          "min_hash": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
                          "max_hash": "000000000000000000048a29c1b3374cfaac726ee4e7774d6884699ae5cff7a9"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2009-01-03T00:00:00.000000000Z",
                          "max_time": "2023-05-10T00:00:00.000000000Z",
                          "community": true
                        }
                      ]
                    },
                    {
                      "metric": "FlowInBFXUSD",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "2009-01-03T18:15:05.000000000Z",
                          "max_time": "2023-05-11T14:40:34.000000000Z",
                          "min_height": "0",
                          "max_height": "789270",
                          "min_hash": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
                          "max_hash": "000000000000000000048a29c1b3374cfaac726ee4e7774d6884699ae5cff7a9"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2010-07-18T00:00:00.000000000Z",
                          "max_time": "2023-05-10T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "asset": "eth",
                  "metrics": [
                    {
                      "metric": "BlkSizeByte",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "1970-01-01T00:00:00.000000000Z",
                          "max_time": "2023-05-11T16:18:47.000000000Z",
                          "min_height": "0",
                          "max_height": "17238243",
                          "min_hash": "d4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
                          "max_hash": "dfefa28d80fe8f6926ca8d161df8bc2819c30e17b176e166123325391ac8bb0b"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2015-07-30T00:00:00.000000000Z",
                          "max_time": "2023-05-10T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "FlowInBFXUSD",
                      "frequencies": [
                        {
                          "frequency": "1b",
                          "min_time": "1970-01-01T00:00:00.000000000Z",
                          "max_time": "2023-05-11T16:18:47.000000000Z",
                          "min_height": "0",
                          "max_height": "17238243",
                          "min_hash": "d4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3",
                          "max_hash": "dfefa28d80fe8f6926ca8d161df8bc2819c30e17b176e166123325391ac8bb0b"
                        },
                        {
                          "frequency": "1d",
                          "min_time": "2015-08-08T00:00:00.000000000Z",
                          "max_time": "2023-06-29T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "cGVycA",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/asset-metrics?api_key=<your_key>&page_size=2&next_page_token=cGVycA"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2AssetMetricsResponse'

    CatalogExchangeMetrics:
      description: List of exchange metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "open_interest_reported_future_coin_margined_usd",
                  "full_name": "Open interest, reported, future, coin-margined, USD",
                  "description": "The sum of all reported open interest from futures markets where the margin asset is equivalent to the underlying base asset in units of U.S. dollars.",
                  "product": "Market Data",
                  "category": "Open Interest",
                  "subcategory": "Future",
                  "unit": "USD",
                  "data_type": "decimal",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1h",
                      "exchanges": [
                        "binance",
                        "bitmex",
                        "bybit",
                        "deribit",
                        "huobi",
                        "kraken",
                        "okex"
                      ]
                    },
                    {
                      "frequency": "1d",
                      "exchanges": [
                        "binance",
                        "bitmex",
                        "bybit",
                        "deribit",
                        "huobi",
                        "kraken",
                        "okex"
                      ]
                    }
                  ],
                  "display_name": "Reported Coin-Margined Future Open Interest"
                },
                {
                  "metric": "volume_reported_future_perpetual_usd_1d",
                  "full_name": "Volume, reported, future, perpetual, USD, one day",
                  "description": "The sum of all reported volume from perpetual futures markets in units of U.S. dollars.",
                  "product": "Market Data",
                  "category": "Volume",
                  "subcategory": "Future",
                  "unit": "USD",
                  "data_type": "decimal",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "exchanges": [
                        "binance",
                        "bitfinex",
                        "kraken",
                        "okex"
                      ]
                    }
                  ],
                  "display_name": "Reported Perpetual Future Volume"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogExchangeMetricsResponse'

    CatalogV2ExchangeMetrics:
      description: List of exchange metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange": "bibox",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "exchange": "binance",
                  "metrics": [
                    {
                      "metric": "liquidations_reported_future_buy_units_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2023-04-09T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_units_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2023-04-09T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "YmluYW5jZS51cw",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/exchange-metrics?api_key=<your_key>&page_size=2&next_page_token=YmluYW5jZS51cw"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2ExchangeMetricsResponse'

    CatalogAllV2ExchangeMetrics:
      description: List of exchange metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange": "bibox",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "exchange": "binance",
                  "metrics": [
                    {
                      "metric": "liquidations_reported_future_buy_units_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2023-04-09T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "liquidations_reported_future_buy_units_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2023-04-09T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "YmluYW5jZS51cw",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/exchange-metrics?api_key=<your_key>&page_size=2&next_page_token=YmluYW5jZS51cw"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2ExchangeMetricsResponse'

    CatalogExchangeAssetMetrics:
      description: List of exchange-asset metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "open_interest_reported_future_nonperpetual_usd",
                  "full_name": "Open interest, reported, future, non-perpetual, USD",
                  "description": "The sum of all reported open interest from non-perpetual futures markets in units of U.S. dollars.",
                  "product": "Market Data",
                  "category": "Open Interest",
                  "subcategory": "Future",
                  "unit": "USD",
                  "data_type": "decimal",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1h",
                      "exchange_assets": [
                        "binance-1inch",
                        "binance-ada",
                        "binance-algo"
                      ]
                    },
                    {
                      "frequency": "1d",
                      "exchange_assets": [
                        "binance-1inch",
                        "binance-ada",
                        "binance-algo"
                      ]
                    }
                  ],
                  "display_name": "Reported Non-Perpetual Future Open Interest"
                },
                {
                  "metric": "open_interest_reported_future_tether_margined_usd",
                  "full_name": "Open interest, reported, future, tether-margined, USD",
                  "description": "The sum of all reported open interest from futures markets where the margin asset is Tether in units of U.S. dollars.",
                  "product": "Market Data",
                  "category": "Open Interest",
                  "subcategory": "Future",
                  "unit": "USD",
                  "data_type": "decimal",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1h",
                      "exchange_assets": [
                        "binance-1inch",
                        "binance-ada",
                        "binance-algo"
                      ]
                    },
                    {
                      "frequency": "1d",
                      "exchange_assets": [
                        "binance-1inch",
                        "binance-ada",
                        "binance-algo"
                      ]
                    }
                  ],
                  "display_name": "Reported Tether-Margined Future Open Interest"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogExchangeAssetMetricsResponse'

    CatalogV2ExchangeAssetMetrics:
      description: List of exchange-asset metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange_asset": "bibox-1inch",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "exchange_asset": "bibox-aave",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "Ymlib3gtYWNz",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/exchange-asset-metrics?api_key=<your_key>&page_size=2&next_page_token=Ymlib3gtYWNz"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2ExchangeAssetMetricsResponse'

    CatalogAllV2ExchangeAssetMetrics:
      description: List of exchange-asset metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange_asset": "bibox-1inch",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "exchange_asset": "bibox-aave",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "Ymlib3gtYWNz",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/exchange-asset-metrics?api_key=<your_key>&page_size=2&next_page_token=Ymlib3gtYWNz"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2ExchangeAssetMetricsResponse'

    CatalogPairMetrics:
      description: List of pair metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "open_interest_reported_future_coin_margined_usd",
                  "full_name": "Open interest, reported, future, coin-margined, USD",
                  "description": "The sum of all reported open interest from futures markets where the margin asset is equivalent to the underlying base asset in units of U.S. dollars.",
                  "product": "Market Data",
                  "category": "Open Interest",
                  "subcategory": "Future",
                  "unit": "USD",
                  "data_type": "decimal",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1h",
                      "pairs": [
                        "1inch-usd",
                        "ada-usd",
                        "algo-usd"
                      ]
                    },
                    {
                      "frequency": "1d",
                      "pairs": [
                        "1inch-usdc",
                        "ada-usdc",
                        "algo-usdc"
                      ]
                    }
                  ],
                  "display_name": "Reported Coin-Margined Future Open Interest"
                },
                {
                  "metric": "volume_reported_future_coin_margined_usd_1d",
                  "full_name": "Volume, reported, future, coin-margined, USD, one day",
                  "description": "The sum of all reported volume from futures markets where the margin asset is equivalent to the underlying base asset in units of U.S. dollars.",
                  "product": "Market Data",
                  "category": "Volume",
                  "subcategory": "Future",
                  "unit": "USD",
                  "data_type": "decimal",
                  "type": "Sum",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "pairs": [
                        "1inch-usdc",
                        "ada-usdc",
                        "algo-usdc"
                      ]
                    }
                  ],
                  "display_name": "Reported Coin-Margined Future Volume"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogPairMetricsResponse'

    CatalogV2PairMetrics:
      description: List of pair metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "1inch-btc",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "pair": "1inch-busd",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "MWluY2gtZGFp",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/pair-metrics?api_key=<your_key>&page_size=2&next_page_token=MWluY2gtZGFp"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2PairMetricsResponse'

    CatalogAllV2PairMetrics:
      description: List of pair metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "1inch-btc",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                },
                {
                  "pair": "1inch-busd",
                  "metrics": [
                    {
                      "metric": "volume_reported_spot_usd_1d",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-06-06T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "volume_reported_spot_usd_1h",
                      "frequencies": [
                        {
                          "frequency": "1h",
                          "min_time": "2022-06-06T23:00:00.000000000Z",
                          "max_time": "2023-08-09T10:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ],
              "next_page_token": "MWluY2gtZGFp",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/pair-metrics?api_key=<your_key>&page_size=2&next_page_token=MWluY2gtZGFp"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2PairMetricsResponse'

    CatalogInstitutionMetrics:
      description: List of institution metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "metric": "bat_coin_per_share",
                  "full_name": "Grayscale Basic Attention Token Trust, Native Units of Coin Per Share",
                  "description": "The number of native units of the coin per share of the Grayscale Basic Attention Token Trust.",
                  "product": "Market Data",
                  "category": "Institutions",
                  "subcategory": "Investment Products",
                  "unit": "Native Units",
                  "data_type": "decimal",
                  "type": "Ratio",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "institutions": [
                        "grayscale"
                      ]
                    }
                  ],
                  "display_name": "Grayscale Basic Attention Token Trust, Native Units of Coin Per Share"
                },
                {
                  "metric": "bat_market_price",
                  "full_name": "Grayscale Basic Attention Token Trust, Market Price per Share, USD",
                  "description": "The market price per share in U.S. dollars of the Grayscale Basic Attention Token Trust.",
                  "product": "Market Data",
                  "category": "Institutions",
                  "subcategory": "Investment Products",
                  "unit": "USD",
                  "data_type": "decimal",
                  "type": "Ratio",
                  "frequencies": [
                    {
                      "frequency": "1d",
                      "institutions": [
                        "grayscale"
                      ]
                    }
                  ],
                  "display_name": "Grayscale Basic Attention Token Trust, Market Price per Share, USD"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogInstitutionMetricsResponse'

    CatalogV2InstitutionMetrics:
      description: List of institution metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "institution": "grayscale",
                  "metrics": [
                    {
                      "metric": "bat_coin_per_share",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-10-31T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "bat_market_price",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-10-31T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogV2InstitutionMetricsResponse'

    CatalogAllV2InstitutionMetrics:
      description: List of institution metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "institution": "grayscale",
                  "metrics": [
                    {
                      "metric": "bat_coin_per_share",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-10-31T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    },
                    {
                      "metric": "bat_market_price",
                      "frequencies": [
                        {
                          "frequency": "1d",
                          "min_time": "2022-10-31T00:00:00.000000000Z",
                          "max_time": "2023-08-08T00:00:00.000000000Z"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogV2InstitutionMetricsResponse'

    CatalogAssetChains:
      description: List of asset chains assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2021-08-09T10:34:38.290000000Z",
                  "max_time": "2023-03-30T17:24:20.193000000Z"
                },
                {
                  "asset": "eth",
                  "min_time": "2022-02-16T09:10:20.286000000Z",
                  "max_time": "2023-03-30T18:18:23.559000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogAssetChainsResponse'

    CatalogV2AssetChains:
      description: List of asset chains assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/asset-chains?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2AssetChainsResponse'

    CatalogAllV2AssetChains:
      description: List of asset chains assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/asset-chains?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2AssetChainsResponse'

    CatalogMempoolFeerates:
      description: List of mempool feerates assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-03-27T21:14:00.000000000Z",
                  "max_time": "2023-04-03T21:22:00.000000000Z"
                },
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMempoolFeeratesResponse'

    CatalogV2MempoolFeerates:
      description: List of mempool feerates assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/mempool-feerates?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MempoolFeeratesResponse'

    CatalogAllV2MempoolFeerates:
      description: List of mempool feerates assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/mempool-feerates?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MempoolFeeratesResponse'

    CatalogMiningPoolTipsSummary:
      description: List of mining pool tips assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2021-08-09T10:34:38.290000000Z",
                  "max_time": "2023-03-30T17:24:20.193000000Z"
                },
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogMiningPoolTipsSummaryResponse'

    CatalogV2MiningPoolTipsSummary:
      description: List of mining pool tips assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/mining-pool-tips-summary?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MiningPoolTipsSummaryResponse'

    CatalogAllV2MiningPoolTipsSummary:
      description: List of mining pool tips assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/mining-pool-tips-summary?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2MiningPoolTipsSummaryResponse'

    CatalogTransactionTracker:
      description: List of transaction tracker assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2021-08-09T10:34:38.290000000Z",
                  "max_time": "2023-03-30T17:24:20.193000000Z"
                },
                {
                  "asset": "eth",
                  "min_time": "2022-02-16T09:10:20.286000000Z",
                  "max_time": "2023-03-30T18:18:23.559000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/CatalogTransactionTrackerResponse'

    CatalogV2TransactionTracker:
      description: List of transaction tracker assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/transaction-tracker?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2TransactionTrackerResponse'

    CatalogV2BlockchainAccounts:
      description: List of blockchain accounts assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/accounts?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2BlockchainAccountsResponse'

    CatalogV2BlockchainBalanceUpdates:
      description: List of blockchain balance updates assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/balance-updates?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2BlockchainBalanceUpdatesResponse'

    CatalogV2BlockchainBlocks:
      description: List of blockchain block assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/blocks?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2BlockchainBlocksResponse'

    CatalogV2BlockchainTransactions:
      description: List of blockchain transactions assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/blockchain-v2/transactions?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2BlockchainTransactionsResponse'

    CatalogAllV2TransactionTracker:
      description: List of transaction tracker assets
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "btc",
                  "min_time": "2023-08-17T14:58:45.614000000Z",
                  "max_time": "2023-08-24T15:29:26.235000000Z"
                }
              ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/transaction-tracker?api_key=<your_key>&page_size=1&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2TransactionTrackerResponse'

    Indexes:
      description: List of indexes.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "index": "CMBI10",
                  "full_name": "CMBI 10 Index",
                  "description": "An index consisting of the 10 largest cryptoassets, weighted by their free float market capitalization.",
                  "frequencies": [
                    {
                      "frequency": "15s",
                      "min_time": "2020-06-08T20:12:40.000000000Z",
                      "max_time": "2020-06-08T20:29:30.000000000Z"
                    }
                  ]
                },
                {
                  "index": "CMBIBTC",
                  "full_name": "CMBI Bitcoin Index",
                  "description": "A single asset index measuring the performance an investor would expect from purchasing and holding Bitcoin.",
                  "frequencies": [
                    {
                      "frequency": "15s",
                      "min_time": "2010-07-18T20:00:00.000000000Z",
                      "max_time": "2020-06-08T20:29:45.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2010-07-19T00:00:00.000000000Z",
                      "max_time": "2020-06-08T00:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-ny-close",
                      "min_time": "2010-07-18T20:00:00.000000000Z",
                      "max_time": "2020-06-08T20:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-sg-close",
                      "min_time": "2010-07-19T08:00:00.000000000Z",
                      "max_time": "2020-06-08T08:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2010-07-18T20:00:00.000000000Z",
                      "max_time": "2020-06-08T20:00:00.000000000Z"
                    }
                  ]
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/IndexesResponse'

    CatalogV2IndexLevels:
      description: List of index levels.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "index": "CMBI10",
                  "frequencies": [
                    {
                      "frequency": "15s",
                      "min_time": "2022-06-06T15:17:15.000000000Z",
                      "max_time": "2023-09-11T11:56:45.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2022-06-07T00:00:00.000000000Z",
                      "max_time": "2023-09-11T00:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2022-06-06T14:00:00.000000000Z",
                      "max_time": "2023-09-11T11:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-ny-close",
                      "min_time": "2022-06-06T20:00:00.000000000Z",
                      "max_time": "2023-09-10T20:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-sg-close",
                      "min_time": "2022-06-07T08:00:00.000000000Z",
                      "max_time": "2023-09-11T08:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "index": "CMBI10E",
                  "frequencies": [
                    {
                      "frequency": "15s",
                      "min_time": "2022-06-06T15:17:15.000000000Z",
                      "max_time": "2023-09-11T11:56:45.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2022-06-07T00:00:00.000000000Z",
                      "max_time": "2023-09-11T00:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2022-06-06T14:00:00.000000000Z",
                      "max_time": "2023-09-11T11:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-ny-close",
                      "min_time": "2022-06-06T20:00:00.000000000Z",
                      "max_time": "2023-09-10T20:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-sg-close",
                      "min_time": "2022-06-07T08:00:00.000000000Z",
                      "max_time": "2023-09-11T08:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "Q01CSTEwRVg",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-v2/index-levels?api_key=<your_key>&page_size=2&next_page_token=Q01CSTEwRVg"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2IndexLevelsResponse'

    CatalogAllV2IndexLevels:
      description: List of index levels.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "index": "CMBI10",
                  "frequencies": [
                    {
                      "frequency": "15s",
                      "min_time": "2022-06-06T15:17:15.000000000Z",
                      "max_time": "2023-09-11T11:56:45.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2022-06-07T00:00:00.000000000Z",
                      "max_time": "2023-09-11T00:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2022-06-06T14:00:00.000000000Z",
                      "max_time": "2023-09-11T11:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-ny-close",
                      "min_time": "2022-06-06T20:00:00.000000000Z",
                      "max_time": "2023-09-10T20:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-sg-close",
                      "min_time": "2022-06-07T08:00:00.000000000Z",
                      "max_time": "2023-09-11T08:00:00.000000000Z"
                    }
                  ]
                },
                {
                  "index": "CMBI10E",
                  "frequencies": [
                    {
                      "frequency": "15s",
                      "min_time": "2022-06-06T15:17:15.000000000Z",
                      "max_time": "2023-09-11T11:56:45.000000000Z"
                    },
                    {
                      "frequency": "1d",
                      "min_time": "2022-06-07T00:00:00.000000000Z",
                      "max_time": "2023-09-11T00:00:00.000000000Z"
                    },
                    {
                      "frequency": "1h",
                      "min_time": "2022-06-06T14:00:00.000000000Z",
                      "max_time": "2023-09-11T11:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-ny-close",
                      "min_time": "2022-06-06T20:00:00.000000000Z",
                      "max_time": "2023-09-10T20:00:00.000000000Z"
                    },
                    {
                      "frequency": "1d-sg-close",
                      "min_time": "2022-06-07T08:00:00.000000000Z",
                      "max_time": "2023-09-11T08:00:00.000000000Z"
                    }
                  ]
                }
              ],
              "next_page_token": "Q01CSTEwRVg",
              "next_page_url": "https://api.coinmetrics.io/v4/catalog-all-v2/index-levels?api_key=<your_key>&page_size=2&next_page_token=Q01CSTEwRVg"
            }
          schema:
            $ref: '#/components/schemas/CatalogV2IndexLevelsResponse'

    AssetMetrics:
      description: Time series of metrics for an asset.
      content:
        application/json:
          examples:
            daily_metrics:
              summary: Example of a message with daily metrics.
              value:
                {
                  "data":[
                    {
                      "asset": "btc",
                      "time": "2020-02-29T00:00:00.000000000Z",
                      "PriceUSD": "8582.09029964933",
                      "SplyBMXNtv": "283220.10827406",
                      "SplyBMXNtv-status": "reviewed",
                      "SplyBMXNtv-status-time": "2020-03-01T09:59:13.847251000Z"
                    },
                    {
                      "asset": "btc",
                      "time": "2020-03-01T00:00:00.000000000Z",
                      "PriceUSD": "8541.77389392169",
                      "SplyBMXNtv": "284691.32323907",
                      "SplyBMXNtv-status": "reviewed",
                      "SplyBMXNtv-status-time": "2020-03-02T14:00:02.622168000Z"
                    }
                  ],
                  "next_page_token": "0.MjAyMC0wNi0wN1QwMDowMDowMFo,MjAyMC0wNi0wN1QwMDowMDowMFo",
                  "next_page_url": "https://api.coinmetrics.io/v4/timeseries/asset-metrics?api_key=<your_key>&pretty=true&assets=btc&metrics=SplyBMXNtv,PriceUSD&page_size=2&next_page_token=0.MjAyMC0wNi0wN1QwMDowMDowMFo,MjAyMC0wNi0wN1QwMDowMDowMFo"
                }
            block_by_block_metrics:
              summary: Example of a message with block by block metrics.
              value:
                {
                  "data": [
                    {
                      "block_hash": "0000000000000000000b7ee9ded84d26167a13c8377cd003fb344584368ba7e9",
                      "parent_block_hash": "0000000000000000000fd3f882c12258b3c604c724fe2e9747e250b094b8b026",
                      "height": "635276",
                      "asset": "btc",
                      "time": "2020-06-18T10:37:23.000000000Z",
                      "FlowTfrToExCnt": "374",
                      "FlowTfrToExCnt-status": "flash",
                      "FlowTfrToExCnt-status-time": "2020-06-18T10:38:47.586052000Z",
                      "PriceUSD": "9435.03"
                    },
                    {
                      "block_hash": "00000000000000000004be53922df7ddf7efc5ed5c45fdf48ccc92eb7f4df30b",
                      "parent_block_hash": "0000000000000000000b7ee9ded84d26167a13c8377cd003fb344584368ba7e9",
                      "height": "635277",
                      "asset": "btc",
                      "time": "2020-06-18T11:07:58.000000000Z",
                      "FlowTfrToExCnt": "325",
                      "FlowTfrToExCnt-status": "flash",
                      "FlowTfrToExCnt-status-time": "2020-06-18T11:09:15.174316000Z",
                      "PriceUSD": "9441.84"
                    }
                  ],
                  "next_page_token": "0.NjM1Mjc2,NjM1Mjc2",
                  "next_page_url": "https://api.coinmetrics.io/v4/timeseries/asset-metrics?api_key=<your_key>&pretty=true&assets=btc&metrics=FlowTfrToExCnt,PriceUSD&page_size=2&frequency=1b&next_page_token=0.NjM1Mjc2,NjM1Mjc2"
                }
            by_second_frequency_metrics:
              summary: Example of a message with 1s metrics.
              value:
                {
                  "data": [
                    {
                      "asset": "btc",
                      "time": "2020-06-18T11:36:09.000000000Z",
                      "ReferenceRate": "9431.1200000000008"
                    },
                    {
                      "asset": "btc",
                      "time": "2020-06-18T11:36:10.000000000Z",
                      "ReferenceRate": "9431.1200000000008"
                    }
                  ],
                  "next_page_token": "0.MjAyMC0wNi0xOFQxMTozNjowOVo",
                  "next_page_url": "https://api.coinmetrics.io/v4/timeseries/asset-metrics?api_key=<your_key>&pretty=true&assets=btc&metrics=ReferenceRate&page_size=2&frequency=1s&next_page_token=0.MjAyMC0wNi0xOFQxMTozNjowOVo"
                }
          schema:
            $ref: '#/components/schemas/AssetMetricsResponse'
        text/csv:
          example: |-
            asset,time,PriceUSD,SplyBMXNtv,SplyBMXNtv-status,SplyBMXNtv-status-time
            btc,2020-02-29T00:00:00.000000000Z,8582.09029964933,283220.10827406,reviewed,2020-03-01T09:59:13.847251000Z
            btc,2020-03-01T00:00:00.000000000Z,8541.77389392169,284691.32323907,reviewed,2020-03-02T14:00:02.622168000Z
            btc,2020-03-02T00:00:00.000000000Z,8906.21475645821,284962.29021857,reviewed,2020-03-03T14:24:11.689979000Z
          schema:
            $ref: '#/components/schemas/AssetMetricsResponse'

    StreamingAssetMetrics:
      description: Asset metrics WebSocket message.
      content:
        application/json:
          examples:
            new_block:
              summary: Example of a new block message.
              value:
                {"time":"2020-06-08T20:54:04.000000000Z","asset":"eth","height":"10227376","hash":"54c517db6ae6e9e0466db43fccccac137b9a75cfdab70cac0272654348ad76aa","parent_hash":"64f4c0126d63335a552dca030129e2f48a2c636cc88530ba168c2902d65dbcf2","type":"new_block","AdrActCnt":"255","FlowInBFXUSD":"0","PriceUSD":"242.28","cm_sequence_id":"0"}
            reorg:
              summary: Example of a reorg message.
              value:
                {"time":"2020-06-09T06:39:42.000000000Z","asset":"eth","height":"10229978","hash":"9d706cd4480b1097f87039705032181df327fcf91fad9a3ca7a293faab9a1582","parent_hash":"4e42633d8dc79b9680c14cac6a4c6eac11dbf9b40586a5a4398f93c319d7e683","type":"reorg","cm_sequence_id":"50"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingAssetMetric'

    MarketTrades:
      description: Time series of market trades.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "time": "2015-01-08T20:55:00.028749000Z",
                  "market": "coinbase-btc-usd-spot",
                  "coin_metrics_id": "100",
                  "amount": "1000.01",
                  "price": "10.61",
                  "database_time": "2016-06-08T20:55:00.256754000Z",
                  "side": "buy"
                },
                {
                  "time": "2021-06-08T20:55:00.758178000Z",
                  "market": "coinbase-btc-usd-spot",
                  "coin_metrics_id": "200000000",
                  "amount": "1000.01",
                  "price": "1000000.61",
                  "database_time": "2021-06-08T20:55:01.053472000Z",
                  "side": "sell"
                }
              ],
              "next_page_token": "0.MjAyMC0wNi0wOFQyMTowMzowNi40OTM1OTZafDk0MjMzMjAz",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/market-trades?markets=coinbase-btc-usd-spot&api_key=<your_key>&pretty=true&page_size=2&next_page_token=0.MjAyMC0wNi0wOFQyMTowMzowNi40OTM1OTZafDk0MjMzMjAz"
            }
          schema:
            $ref: '#/components/schemas/MarketTradesResponse'
        text/csv:
          example: |-
            time,market,coin_metrics_id,amount,price,database_time,side,block_hash,block_height,txid,initiator,sender,beneficiary
            2015-01-08T20:55:00.028749000Z,coinbase-btc-usd-spot,100,1000.01,10.61,2016-06-08T20:55:00.256754000Z,buy,,,,,,
            2021-06-08T20:55:00.758178000Z,coinbase-btc-usd-spot,200000000,1000.01,1000000.61,2021-06-08T20:55:01.053472000Z,sell,,,,,,
          schema:
            $ref: '#/components/schemas/MarketTradesResponse'

    MarketOpenInterest:
      description: Time series of market open interest.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-BTCUSDT-future",
                  "time": "2020-08-05T23:04:50.421035000Z",
                  "contract_count": "35074.075",
                  "value_usd": "408810440.79225",
                  "database_time": "2020-08-05T23:04:50.606185000Z",
                  "exchange_time": "2020-08-05T23:03:59.417000000Z"
                },
                {
                  "market": "binance-BTCUSDT-future",
                  "time": "2020-08-05T23:19:10.016074000Z",
                  "contract_count": "35061.142",
                  "value_usd": "409113039.09552",
                  "database_time": "2020-08-05T23:19:10.749665000Z",
                  "exchange_time": "2020-08-05T23:19:00.458000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/MarketOpenInterestResponse'

    MarketLiquidations:
      description: Time series of market liquidations.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-BTCUSDT-future",
                  "time": "2020-10-10T15:44:42.105000000Z",
                  "coin_metrics_id": "1602344682105000000",
                  "amount": "0.045",
                  "price": "11380.39",
                  "type": "trade",
                  "database_time": "2020-10-10T15:44:45.109122000Z",
                  "side": "buy"
                },
                {
                  "market": "binance-BTCUSDT-future",
                  "time": "2020-10-10T15:45:37.067000000Z",
                  "coin_metrics_id": "1602344737067000000",
                  "amount": "0.004",
                  "price": "11386",
                  "type": "trade",
                  "database_time": "2020-10-10T15:45:39.329348000Z",
                  "side": "buy"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/MarketLiquidationsResponse'

    MarketFundingRates:
      description: Time series of market funding rates.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "bitmex-XBTUSD-future",
                  "time": "2020-11-11T18:00:00.000000000Z",
                  "rate": "-0.000007",
                  "period": "08:00:00",
                  "interval": "01:00:00",
                  "database_time": "2020-12-02T10:49:31.262231000Z"
                },
                {
                  "market": "bitmex-XBTUSD-future",
                  "time": "2020-11-11T19:00:00.000000000Z",
                  "rate": "0.2123",
                  "period": "08:00:00",
                  "interval": "01:00:00",
                  "database_time": "2020-12-02T10:49:31.262231000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/MarketFundingRatesResponse'

    MarketFundingRatesPredicted:
      description: Time series of predicted market funding rates.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-XRP_USDC-PERPETUAL-future",
                  "time": "2024-01-30T13:36:00.000000000Z",
                  "database_time": "2024-01-30T13:36:16.493351000Z",
                  "rate_predicted": "0.00013059"
                },
                {
                  "market": "deribit-XRP_USDC-PERPETUAL-future",
                  "time": "2024-01-30T13:37:00.000000000Z",
                  "database_time": "2024-01-30T13:37:16.500723000Z",
                  "rate_predicted": "0.00013016"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/MarketFundingRatesPredictedResponse'

    StreamingMarketTrades:
      description: Trade WebSocket message.
      content:
        application/json:
          examples:
            new_trade:
              summary: Example of a trade message.
              value:
                {"time":"2020-06-08T21:00:06.138932000Z","market":"coinbase-btc-usd-spot","coin_metrics_id":"94233007","amount":"0.0197263","price":"9702","collect_time":"2020-06-08T21:00:06.203893000Z","side":"buy","cm_sequence_id":"0"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingMarketTrade'

    StreamingMarketLiquidations:
      description: Liquidation WebSocket message.
      content:
        application/json:
          examples:
            new_liquidation:
              summary: Example of a liquidation message.
              value:
                {"market":"binance-LEVERUSDT-future","time":"2023-10-12T12:44:33.663000000Z","coin_metrics_id":"1697114673663000000","amount":"377748","price":"0.001381","type":"trade","side":"sell","cm_sequence_id":"45"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingMarketLiquidation'

    StreamingMarketOpenInterests:
      description: Open Interest WebSocket message.
      content:
        application/json:
          examples:
            new_openinterest:
              summary: Example of an open interest message.
              value:
                {"market":"okex-EOS-USDT-231027-future","time":"2023-10-26T06:06:00.000000000Z","contract_count":"5122","value_usd":"31121.272","exchange_time":"2023-10-26T06:06:00.000000000Z","cm_sequence_id":"126"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingMarketOpenInterest'

    StreamingMarketCandles:
      description: Candle WebSocket message.
      content:
        application/json:
          examples:
            new_candle:
              summary: Example of a candle message.
              value:
                {"market":"bitstamp-btc-usd-spot","time":"2022-05-17T09:00:00.000000000Z","price_open":"30547.68","price_close":"30558.65","price_high":"30563.59","price_low":"30547.68","vwap":"30553.973252816509","volume":"1.908","candle_usd_volume":"58296.980966373899172","candle_trades_count":"10","cm_sequence_id":"0"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingMarketCandle'

    StreamingIndexLevels:
      description: Index levels WebSocket message.
      content:
        application/json:
          examples:
            new_index_level:
              summary: Example of an index level message.
              value:
                {"index": "CMBIWORK", "level": "389473805.713838875", "time": "2017-05-22T00:00:00.000000000Z", "cm_sequence_id": "0"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingIndexLevel'

    MarketOrderBooks:
      description: Time series of market order books.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "time": "2020-06-08T21:01:23.283083000Z",
                  "market": "coinbase-btc-usd-spot",
                  "coin_metrics_id": "1591479594286046-27268420",
                  "asks": [
                    {
                      "price": "9701.48",
                      "size": "2.65178241"
                    },
                    {
                      "price": "9701.49",
                      "size": "0.10941481"
                    }
                  ],
                  "bids": [
                    {
                      "price": "9701.4",
                      "size": "4.43779413"
                    },
                    {
                      "price": "9699.94",
                      "size": "0.041"
                    }
                  ]
                }
              ],
              "next_page_token": "0.MjAyMC0wNi0wOFQyMTowMToyMy4yODMwODNafDE1OTE0Nzk1OTQyODYwNDY",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/market-orderbooks?markets=coinbase-btc-usd-spot&api_key=<your_key>&pretty=true&page_size=1&next_page_token=0.MjAyMC0wNi0wOFQyMTowMToyMy4yODMwODNafDE1OTE0Nzk1OTQyODYwNDY"
            }
          schema:
            $ref: '#/components/schemas/MarketOrderbookResponse'

    StreamingMarketOrderbooks:
      description: Orderbook WebSocket message.
      content:
        application/json:
          examples:
            snapshot_message:
              summary: Example of an order book snapshot message.
              value:
                {"time":"2020-06-08T21:07:27.015507000Z","market":"coinbase-btc-usd-spot","coin_metrics_id":"1591540219445728-16126985","asks":[{"price":"9695.09","size":"1.58265903"},{"price":"9695.1","size":"0.01056118"},{"price":"9695.14","size":"0.0257"}],"bids":[{"price":"9695.07","size":"0.97684462"},{"price":"9694.38","size":"0.14852787"},{"price":"9694.37","size":"0.90808736"},{"price":"9693.24","size":"0.46738235"},{"price":"9693","size":"0.0023"}],"type":"snapshot","collect_time":"2020-06-08T21:07:27.082612000Z","cm_sequence_id":"0"}
            update_message:
              summary: Example of an order book update message.
              value:
                {"time":"2020-06-09T11:19:48.028405000Z","market":"coinbase-btc-usd-spot","coin_metrics_id":"1591673013698762-3620038","asks":[{"price":"9716.86","size":"0.01732866"},{"price":"9695.09","size":"0"}],"bids":[],"type":"update","collect_time":"2020-06-09T11:19:48.095655000Z","cm_sequence_id":"1"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingMarketOrderbook'

    MarketQuotes:
      description: Time series of market quotes.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "time": "2020-06-08T21:14:48.215145000Z",
                  "market": "coinbase-btc-usd-spot",
                  "coin_metrics_id": "1591479594286046-27326992",
                  "ask_price": "9685.02",
                  "ask_size": "0.04340557",
                  "bid_price": "9685.01",
                  "bid_size": "0.00484254"
                }
              ],
              "next_page_token": "0.MjAyMC0wNi0wOFQyMToxNDo0OC4yMTUxNDVafDE1OTE0Nzk1OTQyODYwNDY",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/market-quotes?markets=coinbase-btc-usd-spot&api_key=<your_key>&pretty=true&page_size=1&next_page_token=0.MjAyMC0wNi0wOFQyMToxNDo0OC4yMTUxNDVafDE1OTE0Nzk1OTQyODYwNDY"
            }
          schema:
            $ref: '#/components/schemas/MarketQuotesResponse'

    StreamingMarketQuotes:
      description: Market quote WebSocket message.
      content:
        application/json:
          examples:
            new_quote:
              summary: Example of a quote message.
              value:
                {"time":"2020-06-08T21:15:45.771742000Z","market":"coinbase-btc-usd-spot","coin_metrics_id":"1591540219445728-16162629","ask_price":"9685.01","ask_size":"2.42779345","bid_price":"9685","bid_size":"0.43939159","cm_sequence_id":"1"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingMarketQuote'

    StreamingAggregatedSpreadQuotes:
      description: Aggregated spread quote WebSocket message.
      content:
        application/json:
          examples:
            new_quote:
              summary: Example of a quote message.
              value:
                {"time":"2020-06-08T21:15:45.771742000Z","pair":"btc-usd","ask_price":"24343.725954328216","ask_size":"2.96375165","bid_price":"24342.036360171896","bid_size":"12.00588437","mid_price":"24342.881157250056","spread":"0.0000694081421754166","cm_sequence_id":"0"}
            warning:
              summary: Example of a warning message.
              value:
                {"warning":{"type": "falling_behind", "message": "Your connection is falling behind and messages are being queued for delivery to you. Your queue is now over 60% full. You will be disconnected when the queue is full."}}
            error:
              summary: Example of an error message.
              value:
                {"error":{"type": "stall", "message": "The client was reading too slowly and was disconnected by the server."}}
          schema:
            $ref: '#/components/schemas/StreamingAggregatedSpreadQuote'

    MarketCandles:
      description: Time series of market candles.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "time": "2020-06-08T20:45:00.000000000Z",
                  "market": "coinbase-btc-usd-spot",
                  "price_open": "9705.07999999999993",
                  "price_close": "9705.01000000000022",
                  "price_high": "9706.19000000000051",
                  "price_low": "9705",
                  "vwap": "9705.1686505895068",
                  "volume": "16.8066639099999975",
                  "candle_usd_volume": "16.8066639099999975",
                  "candle_trades_count": "212"
                },
                {
                  "time": "2020-06-08T20:50:00.000000000Z",
                  "market": "coinbase-btc-usd-spot",
                  "price_open": "9705",
                  "price_close": "9696.27000000000044",
                  "price_high": "9705",
                  "price_low": "9695.71999999999935",
                  "vwap": "9698.38894423754937",
                  "volume": "14.7672128699999963",
                  "candle_usd_volume": "14.7672128699999963",
                  "candle_trades_count": "215"
                }
              ],
              "next_page_token": "0.MjAyMC0wNi0wOFQyMDo0NTowMFo",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/market-candles?markets=coinbase-btc-usd-spot&api_key=<your_key>&pretty=true&page_size=2&frequency=5m&next_page_token=0.MjAyMC0wNi0wOFQyMDo0NTowMFo"
            }
          schema:
            $ref: '#/components/schemas/MarketCandlesResponse'

    MarketContractPrices:
      description: Time series of market contract prices.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-ETH-25MAR22-1200-P-option",
                  "time": "2021-09-01T13:24:00.000000000Z",
                  "mark_price": "0.02126",
                  "index_price": "3529.34",
                  "database_time": "2021-09-01T13:24:41.266168000Z",
                  "exchange_time": "2021-09-01T13:24:00.000000000Z"
                }
              ],
              "next_page_token": "0.MjAyMC0wNi0wOFQyMDo0NTowMFo",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/market-contract-prices?markets=deribit-ETH-10SEP21-3200-P-option&api_key=<your_key>&pretty=true&page_size=2&next_page_token=0.MjAyMC0wNi0wOFQyMDo0NTowMFo"
            }
          schema:
            $ref: '#/components/schemas/MarketContractPricesResponse'

    MarketImpliedVolatility:
      description: Time series of market implied volatility.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-ETH-10SEP21-3200-P-option",
                  "time": "2021-09-05T13:26:00.000000000Z",
                  "database_time": "2021-09-05T13:26:37.808731000Z",
                  "exchange_time": "2021-09-05T13:26:36.642000000Z",
                  "iv_bid": "1.0086",
                  "iv_ask": "1.1132",
                  "iv_mark": "1.0616"
                }
              ],
              "next_page_token": "0.MjAyMC0wNi0wOFQyMDo0NTowMFo",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/market-implied-volatility?markets=deribit-ETH-10SEP21-3200-P-option&api_key=<your_key>&pretty=true&page_size=2&next_page_token=0.MjAyMC0wNi0wOFQyMDo0NTowMFo"
            }
          schema:
            $ref: '#/components/schemas/MarketImpliedVolatilityResponse'

    MarketGreeks:
      description: Time series of market greeks.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "deribit-ETH-25MAR22-1200-P-option",
                  "time": "2021-09-01T13:24:00.000000000Z",
                  "database_time": "2021-09-01T13:24:41.266168000Z",
                  "exchange_time": "2021-09-01T13:24:00.000000000Z",
                  "vega": "2.47772",
                  "theta": "-0.70691",
                  "rho": "-1.31245",
                  "delta": "-0.04137",
                  "gamma": "0.00003"
                }
              ],
              "next_page_token": "0.MjAyMC0wNi0wOFQyMDo0NTowMFo",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/market-greeks?markets=deribit-ETH-10SEP21-3200-P-option&api_key=<your_key>&pretty=true&page_size=2&next_page_token=0.MjAyMC0wNi0wOFQyMDo0NTowMFo"
            }
          schema:
            $ref: '#/components/schemas/MarketGreeksResponse'

    PairMetrics:
      description: Time series of pair metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "btc-usd",
                  "time": "2020-09-28T00:00:00.000000000Z",
                  "volume_trusted_spot_usd_1d": "317000178.776577"
                },
                {
                  "pair": "btc-usd",
                  "time": "2020-09-29T00:00:00.000000000Z",
                  "volume_trusted_spot_usd_1d": "246153685.485477"
                },
                {
                  "pair": "btc-usd",
                  "time": "2020-09-30T00:00:00.000000000Z",
                  "volume_trusted_spot_usd_1d": "217972373.240482"
                },
                {
                  "pair": "btc-usd",
                  "time": "2020-10-01T00:00:00.000000000Z",
                  "volume_trusted_spot_usd_1d": "492203699.871197"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/PairMetricsResponse'

    PairCandles:
      description: Time series of pair candles.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "pair": "btc-usd",
                  "time": "2022-06-27T00:00:00.000000000Z",
                  "price_open": "21027.92",
                  "price_close": "20722.93",
                  "price_high": "21510.66",
                  "price_low": "20505.5"
                },
                {
                  "pair": "btc-usd",
                  "time": "2022-06-28T00:00:00.000000000Z",
                  "price_open": "20722.93",
                  "price_close": "20252.89",
                  "price_high": "21185.14",
                  "price_low": "20177.31"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/PairCandlesResponse'

    IndexCandles:
      description: Time series of index candles.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "index": "CMBIBTC",
                  "time": "2022-06-28T00:00:00.000000000Z",
                  "price_open": "21072.8899999999994",
                  "price_close": "20248.47",
                  "price_high": "21086.7200000000012",
                  "price_low": "20184.6",
                  "candle_trades_count": "116028440"
                },
                {
                  "index": "CMBIBTC",
                  "time": "2022-06-29T00:00:00.000000000Z",
                  "price_open": "20252.89",
                  "price_close": "20089.0299999999988",
                  "price_high": "20402.8100000000013",
                  "price_low": "19867.9399999999987",
                  "candle_trades_count": "228458314"
                },
                {
                  "index": "CMBIBTC",
                  "time": "2022-06-30T00:00:00.000000000Z",
                  "price_open": "20093.1800000000003",
                  "price_close": "19900.6",
                  "price_high": "20130",
                  "price_low": "18655.1500000000015",
                  "candle_trades_count": "252868227"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/IndexCandlesResponse'

    ExchangeMetrics:
      description: Time series of exchange metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange": "binance",
                  "time": "2022-01-01T00:00:00.000000000Z",
                  "volume_reported_spot_usd_1d": "8988114373.91716"
                },
                {
                  "exchange": "binance",
                  "time": "2022-01-02T00:00:00.000000000Z",
                  "volume_reported_spot_usd_1d": "9686610104.12659"
                },
                {
                  "exchange": "binance",
                  "time": "2022-01-03T00:00:00.000000000Z",
                  "volume_reported_spot_usd_1d": "13513437237.6032"
                },
                {
                  "exchange": "binance",
                  "time": "2022-01-04T00:00:00.000000000Z",
                  "volume_reported_spot_usd_1d": "15006844836.1782"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/ExchangeMetricsResponse'

    ExchangeAssetMetrics:
      description: Time series of exchange-asset metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange_asset": "binance-btc",
                  "time": "2021-10-04T00:00:00.000000000Z",
                  "open_interest_reported_future_usd": "3469621227.0258"
                },
                {
                  "exchange_asset": "binance-btc",
                  "time": "2021-10-05T00:00:00.000000000Z",
                  "open_interest_reported_future_usd": "3562791590.02995"
                },
                {
                  "exchange_asset": "binance-btc",
                  "time": "2021-10-06T00:00:00.000000000Z",
                  "open_interest_reported_future_usd": "3970248573.60142"
                },
                {
                  "exchange_asset": "binance-btc",
                  "time": "2021-10-07T00:00:00.000000000Z",
                  "open_interest_reported_future_usd": "4110308192.96416"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/ExchangeAssetMetricsResponse'

    MarketMetrics:
      description: Time series of market metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-BTCUSDT-future",
                  "time": "2022-01-19T20:00:00.000000000Z",
                  "liquidations_reported_future_buy_usd_5m": "1298.36866"
                },
                {
                  "market": "binance-BTCUSDT-future",
                  "time": "2022-01-19T20:10:00.000000000Z",
                  "liquidations_reported_future_buy_usd_5m": "39713.60016"
                },
                {
                  "market": "binance-BTCUSDT-future",
                  "time": "2022-01-19T20:30:00.000000000Z",
                  "liquidations_reported_future_buy_usd_5m": "29084.10932"
                },
                {
                  "market": "binance-BTCUSDT-future",
                  "time": "2022-01-19T21:00:00.000000000Z",
                  "liquidations_reported_future_buy_usd_5m": "46294.99528"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/MarketMetricsResponse'

    InstitutionMetrics:
      description: Time series of institution metrics.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "institution": "institution1",
                  "time": "2020-09-28T00:00:00.000000000Z",
                  "total_assets": "317000178.776577"
                },
                {
                  "institution": "institution1",
                  "time": "2020-09-29T00:00:00.000000000Z",
                  "total_assets": "246153685.485477"
                },
                {
                  "institution": "institution1",
                  "time": "2020-09-30T00:00:00.000000000Z",
                  "total_assets": "217972373.240482"
                },
                {
                  "institution": "institution1",
                  "time": "2020-10-01T00:00:00.000000000Z",
                  "total_assets": "492203699.871197"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/InstitutionMetricsResponse'

    IndexLevels:
      description: Time series of index levels.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "time": "2017-05-22T00:00:00.000000000Z",
                  "index": "CMBIWORK",
                  "level": "389473805.713838875"
                },
                {
                  "time": "2017-05-23T00:00:00.000000000Z",
                  "index": "CMBIWORK",
                  "level": "362701474.775819778"
                }
              ],
              "next_page_token": "0.MjAxNy0wNS0yMlQwMDowMDowMFo",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/index-levels?indexes=CMBIWORK&api_key=<your_key>&pretty=true&page_size=2&next_page_token=0.MjAxNy0wNS0yMlQwMDowMDowMFo"
            }
          schema:
            $ref: '#/components/schemas/IndexLevelsResponse'

    IndexConstituents:
      description: Time series of index constituents.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "time": "2020-05-01T22:00:00.000000000Z",
                  "index": "CMBI10",
                  "constituents": [
                    {
                      "asset": "bch",
                      "weight": "0.01887429752681492"
                    },
                    {
                      "asset": "bsv",
                      "weight": "0.01343767932475944"
                    },
                    {
                      "asset": "btc",
                      "weight": "0.747355794635124"
                    },
                    {
                      "asset": "etc",
                      "weight": "0.004565578678797349"
                    },
                    {
                      "asset": "eth",
                      "weight": "0.1351998514006912"
                    },
                    {
                      "asset": "ltc",
                      "weight": "0.01756776057810796"
                    },
                    {
                      "asset": "xlm",
                      "weight": "0.008757017272583251"
                    },
                    {
                      "asset": "xmr",
                      "weight": "0.006442672327610681"
                    },
                    {
                      "asset": "xrp",
                      "weight": "0.03769069726575187"
                    },
                    {
                      "asset": "xtz",
                      "weight": "0.01010865098975933"
                    }
                  ]
                },
              ],
              "next_page_token": "0.MjAyMC0wNS0wMVQyMjowMDowMFo",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/index-constituents?indexes=CMBI10&api_key=<your_key>&pretty=true&page_size=1&next_page_token=0.MjAyMC0wNS0wMVQyMjowMDowMFo"
            }
          schema:
            $ref: '#/components/schemas/IndexConstituentsResponse'

    MiningPoolTipsSummary:
      description: Time series of mining pool tips summaries.
      content:
        application/json:
          example:
            {
              "data": [ {
                "asset": "btc",
                "time": "2021-04-20T15:38:35.378090000Z",
                "tips_count": "2",
                "block_hashes_at_tip": "1",
                "tips": [ {
                  "last_time": "2021-04-20T15:26:21.615787000Z",
                  "height": "679916",
                  "hash": "0000000000000000000b014cad322db899c4fcffc2bdbe1968c6fa85217308a2",
                  "pool_count": "2"
                }, {
                  "last_time": "2021-04-20T15:38:35.378090000Z",
                  "height": "679917",
                  "hash": "000000000000000000004035d600016c2005b4238acb2750625126542b8033a0",
                  "pool_count": "10"
                } ]
              }, {
                "asset": "btc",
                "time": "2021-04-20T15:38:35.543325000Z",
                "tips_count": "2",
                "block_hashes_at_tip": "1",
                "tips": [ {
                  "last_time": "2021-04-20T15:26:21.351310000Z",
                  "height": "679916",
                  "hash": "0000000000000000000b014cad322db899c4fcffc2bdbe1968c6fa85217308a2",
                  "pool_count": "1"
                }, {
                  "last_time": "2021-04-20T15:38:35.543325000Z",
                  "height": "679917",
                  "hash": "000000000000000000004035d600016c2005b4238acb2750625126542b8033a0",
                  "pool_count": "11"
                } ]
              }, {
                "asset": "btc",
                "time": "2021-04-20T15:38:35.744213000Z",
                "tips_count": "1",
                "block_hashes_at_tip": "1",
                "tips": [ {
                  "last_time": "2021-04-20T15:38:35.744213000Z",
                  "height": "679917",
                  "hash": "000000000000000000004035d600016c2005b4238acb2750625126542b8033a0",
                  "pool_count": "12"
                } ]
              } ],
              "next_page_token": "0.MjAyMS0wNC0yMFQxNTozODozNS4zNzgwOTBa",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/mining-pool-tips-summary?api_key=<your_key>&pretty=true&assets=btc&page_size=3&next_page_token=0.MjAyMS0wNC0yMFQxNTozODozNS4zNzgwOTBa"
            }
          schema:
            $ref: '#/components/schemas/MiningPoolTipsSummaryResponse'

    AssetChains:
      description: Time series of asset chains.
      content:
        application/json:
          example:
            {
              "data": [ {
                "asset": "btc",
                "time": "2021-01-01T15:30:00.000000000Z",
                "chains_count": "2",
                "blocks_count_at_tip": "1",
                "reorg": "true",
                "reorg_depth": "1",
                "chains": [
                  [ {
                    "hash": "000000000000000000004035d600016c2005b4238acb2750625126542b8033aa",
                    "height": "679917",
                    "time": "2021-01-01T15:00:00.000000000Z"
                  }, {
                    "hash": "000000000000000000004035d600016c2005b4238acb2750625126542b8033ac",
                    "height": "679918",
                    "time": "2021-01-01T15:20:00.000000000Z"
                  }, {
                    "hash": "000000000000000000004035d600016c2005b4238acb2750625126542b8033ad",
                    "height": "679919",
                    "time": "2021-01-01T15:30:00.000000000Z"
                  }
                  ], [ {
                    "hash": "000000000000000000004035d600016c2005b4238acb2750625126542b8033aa",
                    "height": "679917",
                    "time": "2021-01-01T15:00:00.000000000Z"
                  }, {
                    "hash": "000000000000000000004035d600016c2005b4238acb2750625126542b8033ab",
                    "height": "679918",
                    "time": "2021-01-01T15:10:00.000000000Z"
                  }
                  ]
                ]
              }
              ],
              "next_page_token": "0.MjAyMS0wNC0yMFQxNTozODozNS4zNzgwOTBa",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/asset-chains?api_key=<your_key>&pretty=true&assets=btc&page_size=3&next_page_token=0.MjAyMS0wNC0yMFQxNTozODozNS4zNzgwOTBa"
            }
          schema:
            $ref: '#/components/schemas/AssetChainsResponse'

    TaxonomyAssets:
      description: Assets' taxonomy.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "asset1",
                  "full_name": "Asset 1",
                  "taxonomy_version": "1.0",
                  "updated_at_taxonomy_version": "1.0",
                  "classification_start_time": "2010-07-19",
                  "class_id": "20",
                  "class": "Application",
                  "sector_id": "2030",
                  "sector": "Metaverse",
                  "subsector_id": "203020",
                  "subsector": "Gaming",
                  "classification_end_time": "2021-06-12"
                },
                {
                  "asset": "asset2",
                  "full_name": "Asset 2",
                  "taxonomy_version": "2.0",
                  "updated_at_taxonomy_version": "2.0",
                  "classification_start_time": "2022-06-13",
                  "class_id": "10",
                  "class": "Transaction",
                  "sector_id": "1010",
                  "sector": "Digital Currency (DC)",
                  "subsector_id": "101010",
                  "subsector": "General-Purpose Digital Currencies"
                }
              ],
              "next_page_token": "bHJjfDE2Njc0MzM2MDAwMDA",
              "next_page_url": "https://api.coinmetrics.io/v4/taxonomy/assets?page_size=2&api_key=<your_key>&next_page_token=bHJjfDE2Njc0MzM2MDAwMDA"
            }
          schema:
            $ref: '#/components/schemas/TaxonomyAssetsResponse'

    TaxonomyMetadataAssets:
      description: Assets' taxonomy metadata.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "taxonomy_version": "1.1",
                  "taxonomy_start_time": "2021-06-13",
                  "subsectors": [
                    {
                      "class_id": "10",
                      "class": "Transaction",
                      "sector_id": "1010",
                      "sector": "Digital Currency (DC)",
                      "subsector_id": "101010",
                      "subsector": "Remittance Coins"
                    },
                    {
                      "class_id": "10",
                      "class": "Transaction",
                      "sector_id": "1010",
                      "sector": "Digital Currency (DC)",
                      "subsector_id": "101020",
                      "subsector": "Meme Coins"
                    },
                    {
                      "class_id": "10",
                      "class": "Transaction",
                      "sector_id": "1010",
                      "sector": "Digital Currency (DC)",
                      "subsector_id": "101040",
                      "subsector": "Remittance Coins"
                    }
                  ],
                  "taxonomy_end_time": "2022-06-12"
                }
              ],
              "next_page_token": "Mi4w",
              "next_page_url": "https://api.coinmetrics.io/v4/taxonomy-metadata/assets?paging_from=end&page_size=2&version=*&api_key=<your_key>&next_page_token=Mi4w"
            }
          schema:
            $ref: '#/components/schemas/TaxonomyMetadataAssetsResponse'

    AssetProfiles:
      description: Asset profiles data.
      content:
        application/json:
          example:
            {
              "data": [ {
                "asset": "eth",
                "full_name": "Ethereum",
                "description": "Ethereum is a decentralized computing platform that allows users to create, deploy and interact with programs known as smart contracts.",
                "overview": "Ethereum is a decentralized computing platform that allows users to create, deploy and interact with programs known as smart contracts. Ethereum is a transaction based state machine, meaning that at any point in time the state of the Ethereum network is represented by a mapping of accounts to their associated balance or state. The state of the Ethereum network is updated every time a new block is added to the chain, roughly every 12 seconds. Each block contains information regarding new transactions and is linked to the previous block. The ETH 1.0 chain used a proof-of-work consensus protocol similar to the one implemented by Bitcoin. However, in September 2022 Ethereum transitioned to a new proof-of-stake consensus mechanism that will help reduce fees and increase speed. In a proof-of-stake network, validators stake ETH capital (32 ETH) in a smart contract as a deterrent to act dishonestly. Validators in the network are responsible for validating blocks sent into the network, and creating new blocks when directed. Ethereum also has the capability for users to create smart contracts that are written in a high level language, compiled into bytecode and sent to a contract. The Ethereum Virtual Machine handles all of the bytecode and imposes the coded logic. Smart contracts allow developers to impose logic and rules upon interactions, ultimately creating a product that provides value on the chain. Examples of products built on Ethereum include Aave, a lending platform, and Livepeer, a video streaming infrastructure. Ethereum also provides the framework to create many different types of assets with rules. Examples of popular smart contracts include ERC-20, a framework to create tokens on Ethereum, or ERC-721, a framework for NFTs. Users can interact with smart contracts once they have been deployed allowing for the creation of decentralized applications and additional use cases.",
                "creation_date": "2015-07-30",
                "token_purpose": [ "Fee Token", "Staking Token" ],
                "project_team": "N/A",
                "foundation": "Ethereum Foundation",
                "website": "https://ethereum.org/en/",
                "whitepaper_url": "https://ethereum.org/en/whitepaper/#ethereum-whitepaper",
                "token_generation_event_supply": "72009990.5",
                "supply_cap": "N/A",
                "vesting_schedule": [ {
                  "vesting_schedule_allocation": "N/A",
                  "vesting_schedule_cliff": "N/A",
                  "vesting_schedule_total_unlock_time": "N/A"
                } ],
                "new_token_issuance_recipient": [ "Validator" ],
                "issuing_networks": [ "Ethereum" ],
                "issuance_schedule_changes": "Ethereum issuance when using Proof-of-Work began at 5 ETH per block, lowering to 3 ETH per block after the Byzantium fork in October 2017, and again to 2 ETH per block after the Constantinople fork in February 2019. After the merge and Ethereum's migration to Proof-of-Stake, ETH is issued by calculating 166 times the square root of the sum of staked ETH. ETH issuance fluctuates consistently depending on the amount staked and amount of ETH participating in each epoch, overall decreasing when more ETH is staked.",
                "significant_historical_changes": [ {
                  "date": "2016-06-17",
                  "details": "Ethereum DAO was hacked for $50 million"
                }, {
                  "date": "2021-09-15",
                  "details": "EIP-1559 was introduced restructuring the fee market and introducing a variable base fee that is burned"
                }, {
                  "date": "2024-03-13",
                  "details": "Ethereum migrated from Proof-of-Work to Proof-of-Stake completing the merge"
                } ],
                "upgrade_history": [ {
                  "date": "2016",
                  "details": "DAO Fork - Roll back after DAO $50 million in DAO funds were stolen, creating Ethereum Classic and today's Ethereum chain"
                }, {
                  "date": "2017",
                  "details": "Byzantium - Reduced block rewards from 5 ETH to 3 ETH, delayed difficulty bomb by 1 year, increased transaction privacy and Layer-2 network scaling activities"
                }, {
                  "date": "2019",
                  "details": "Constantinople - Reduced block rewards from 3 ETH to 2 ETH and EVM gas optimizations"
                }, {
                  "date": "2021",
                  "details": "London - Introduction of EIP-1559 with optimized fee mechanisms separating base fee and priority fee for transaction inclusion in current block"
                } ],
                "blog_updates": "https://blog.ethereum.org/",
                "project_github_repository": [ "https://github.com/ethereum" ],
                "asset_regulation": "Indirectly",
                "asset_regulated_products": [ "ETH Spot ETFs" ],
                "etp_custodians": [ "Coinbase Custody Trust Company, LLC", "Fidelity Digital Asset Services, LLC", "Gemini Trust Company, LLC" ]
              } ],
              "next_page_token": "YnRj",
              "next_page_url": "https://api.coinmetrics.io/v4/profile/assets?api_key=<your_key>&pretty=true&next_page_token=YnRj"
            }
          schema:
            $ref: '#/components/schemas/AssetProfilesResponse'

    NetworkProfiles:
      description: Network profiles data.
      content:
        application/json:
          example:
            {
              "data": [ {
                "full_name": "Solana",
                "network": "sol",
                "modular_or_monolithic": "Monolithic",
                "overview": "Solana (SOL) is a smart contract compatible layer one blockchain that supports high speed transactions using a proof-of-history consensus mechanism. Solana was built to support high frequency blockchain applications by addressing scalability, decentralization, and cost issues. Solana is capable of executing 65,000 transactions per second and 400 ms block times using a proof-of-history consensus protocol. Nodes on the blockchain often struggle to determine an accurate timeline of events due to issues of latency and slow network speeds. Solana is able to create a synchronized clock for each node using a variable delay function with a fixed runtime and verifiable solution ultimately creating the proof-of-history consensus mechanism. Solana’s Tower Byzantine Fault Tolerance (BFT) Consensus Mechanism utilizes proof-of-history to latency and increase speeds. BFT ensures more efficient finality because once two-thirds of the validators have agreed on a certain order of events the timeline is finalized. The Solana main chain uses proof-of-delegated stake where SOL holders can stake themselves or delegate to a validator and earn passive returns.",
                "consensus_mechanism": "Proof-of-Stake: Proof-of-History",
                "hashing_algorithm": "SHA256",
                "transaction_finality": "No Fixed Finality Threshold",
                "available_clients": [ "Rust Client" ],
                "smart_contract_deployment": "Permissionless",
                "foundation": [ "Solana Foundation: Non-profit foundation focused on decentralizing the network by providing grants, validator delegations, and server programs", "Solana Labs: Organization building and implementing products and tooling to expand the Solana ecosystem" ],
                "founding_team_identity": "Known",
                "repository": [ {
                  "github_repository": "Solana Core",
                  "github_url": "github.com/solana-labs/solana"
                } ],
                "transaction_visibility": "Visible",
                "native_fee_token": "SOL",
                "significant_historical_changes": [ {
                  "date": "2020-10-07",
                  "details": "Solana announced its integration with Wormhole to support cross-chain message and asset transfers with Ethereum"
                }, {
                  "date": "2022-12-13",
                  "details": "Solana made its QUIC implementation the official message propogation standard for transactions in upgrade 1.13.4"
                }, {
                  "date": "2024-01-24",
                  "details": "Solana's Token Extensions program was released to increase token customizability for issuers"
                } ],
                "rollup_info": [ {
                  "rollup_type": "N/A",
                  "state_validation": "N/A"
                } ],
                "network_scaling_solution": "true",
                "type_of_network": "Blockchain",
                "chain_explorers": [ "https://solscan.io/", "https://explorer.solana.com/", "https://solanabeach.io/", "https://solana.fm/" ]
              } ],
              "next_page_token": "ZXRo",
              "next_page_url": "https://api.coinmetrics.io/v4/profile/networks?api_key=<your_key>&pretty=true&next_page_token=ZXRo"
            }
          schema:
            $ref: '#/components/schemas/NetworkProfilesResponse'

    InvalidParameters:
      description: Request parameters are invalid.
      content:
        application/json:
          examples:
            bad_time_format:
              summary: Bad time format response example.
              value:
                {
                  "error": {
                    "type": "bad_parameter",
                    "message": "Bad parameter 'start_time'. Incorrect time format '<invalid_time>'. Supported formats are 'yyyy-MM-dd', 'yyyyMMdd', 'yyyy-MM-ddTHH:mm:ss', 'yyyy-MM-ddTHHmmss', 'yyyy-MM-ddTHH:mm:ss.SSS', 'yyyy-MM-ddTHHmmss.SSS', 'yyyy-MM-ddTHH:mm:ss.SSSSSS', 'yyyy-MM-ddTHHmmss.SSSSSS', 'yyyy-MM-ddTHH:mm:ss.SSSSSSSSS', 'yyyy-MM-ddTHHmmss.SSSSSSSSS'."
                  }
                }
            bad_page_size:
              summary: Bad page_size example.
              value:
                {
                  "error": {
                    "type": "bad_parameter",
                    "message": "Bad parameter 'page_size'. Must be at most 10000."
                  }
                }
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    UriTooLong:
      description: Provided URI is too long. It must not be greater than 10000 symbols.

    Unauthorized:
      description: Requested resource requires authorization.
      content:
        application/json:
          examples:
            unauthorized:
              summary: Unauthorized error response.
              value:
                {
                  "error": {
                    "type": "unauthorized",
                    "message": "Requested resource requires authorization."
                  }
                }
            wrong_credentials:
              summary: Wrong credentials error response.
              value:
                {
                  "error": {
                    "type": "wrong_credentials",
                    "message": "Supplied credentials are not valid."
                  }
                }
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "forbidden",
                "message": "Requested metric 'SplyBMXNtv' with frequency '1d' for asset 'btc' is not available with supplied credentials."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Requested resource is not available with supplied credentials.

    BlockchainForbidden:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "forbidden",
                "message": "Requested resource is not available with supplied credentials."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Requested resource is not available with supplied credentials.

    AssetNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'assets'. Value 'sdvwbtc' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Asset not found.

    AccountNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "not_found",
                "message": "Account '112jmDkNGHSbhhY17JGpxU3sMA9ZExG7b2' not found."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Account not found.

    DefiProtocolNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'defi_protocols'. Value 'sdvwbtc' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: DeFi protocol not found.

    AssetAlertNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'alerts'. Value 'mempool_count_empty_6m' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Asset alert not found.

    PairNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'pairs'. Value 'sdvwbtc' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Pair not found.

    InstitutionNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'institutions'. Value 'sdvwbtc' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Institution not found.

    ExchangeNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'id'. Exchange 'sdvwbtc' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Exchange not found.

    ExchangeAssetNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'id'. Exchange-asset pair 'sdvwbtc-btc' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Exchange-asset pair not found.

    MarketNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'markets'. Market 'sdvwbtc-as-asd-spot' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Market not found.

    MetricNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'metrics'. Value 'asdgwav' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Metric not found.

    IndexNotFound:
      content:
        application/json:
          example:
            {
              "error": {
                "type": "bad_parameter",
                "message": "Bad parameter 'indexes'. Value 'asdgwav' is not supported."
              }
            }
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Index not found.

    BlockchainBlocksV2:
      description: Blockchain blocks.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "block_hash": "0000000071966c2b1d065fd446b1e485b2c9d9594acd2007ccbd5441cfc89444",
                  "height": "7",
                  "consensus_time": "2009-01-09T03:16:28.000000000Z",
                  "miner_time": "2009-01-09T03:39:29.000000000Z",
                  "n_transactions": "1",
                  "n_balance_updates": "3",
                  "parent_block_hash": "000000003031a0e73735690c5a1ff2a4be82553b2a12b776fbd3a215dc8f778d",
                  "nonce": "39a59c86",
                  "extra_data": "04ffff001d012b",
                  "version": "1",
                  "difficulty": "1",
                  "physical_size": "215",
                  "consensus_size": "860",
                  "consensus_size_limit": "4000000"
                },
                {
                  "block_hash": "00000000408c48f847aa786c2268fc3e6ec2af68e8468a34a28c61b7f1de0dc6",
                  "height": "8",
                  "consensus_time": "2009-01-09T03:16:28.000000000Z",
                  "miner_time": "2009-01-09T03:45:43.000000000Z",
                  "n_transactions": "1",
                  "n_balance_updates": "3",
                  "parent_block_hash": "0000000071966c2b1d065fd446b1e485b2c9d9594acd2007ccbd5441cfc89444",
                  "nonce": "1c4b5666",
                  "extra_data": "04ffff001d012c",
                  "version": "1",
                  "difficulty": "1",
                  "physical_size": "215",
                  "consensus_size": "860",
                  "consensus_size_limit": "4000000"
                }
              ],
              "next_page_token": "N3wwMDAwMDAwMDcxOTY2YzJiMWQwNjVmZDQ0NmIxZTQ4NWIyYzlkOTU5NGFjZDIwMDdjY2JkNTQ0MWNmYzg5NDQ0",
              "next_page_url": "https://api.coinmetrics.io/v4/blockchain-v2/btc/blocks?api_key=<your_key>&pretty=true&page_size=2&next_page_token=N3wwMDAwMDAwMDcxOTY2YzJiMWQwNjVmZDQ0NmIxZTQ4NWIyYzlkOTU5NGFjZDIwMDdjY2JkNTQ0MWNmYzg5NDQ0"
            }
          schema:
            $ref: '#/components/schemas/BlockchainBlocksResponseV2'

    BlockchainAccountsV2:
      description: Blockchain accounts.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockchainAccountsResponseV2'
          example:
            {
              "data": [
                {
                  "account": "112jmDkNGHSbhhY17JGpxU3sMA9ZExG7b2",
                  "type": "UTXO",
                  "balance": "0.0000583",
                  "n_debits": "3",
                  "n_credits": "4",
                  "creation_height": "470920",
                  "creation_block_hash": "0000000000000000002c7505ef2272e0677fa53d68d633f8e076ed42dd3380e6",
                  "creation_time": "2017-06-12T06:50:36.000000000Z",
                  "creation_chain_sequence_number": "2022585999040108",
                  "last_chain_sequence_number": "2054987232324222",
                  "last_debit_height": "474496",
                  "last_credit_height": "478464"
                },
                {
                  "account": "112dtXeVfH3QgRJJwCiQe1FuRAKBqWfY3U",
                  "type": "UTXO",
                  "balance": "0",
                  "n_debits": "6",
                  "n_credits": "6",
                  "creation_height": "480777",
                  "creation_block_hash": "0000000000000000000e7d28b7c2a37e42278e5d34c8a64a05d227e3608feac8",
                  "creation_time": "2017-08-16T12:34:59.000000000Z",
                  "creation_chain_sequence_number": "2064921491679245",
                  "last_chain_sequence_number": "2207213758185607",
                  "last_debit_height": "513907",
                  "last_credit_height": "513892"
                }
              ],
              "next_page_token": "MzA1MDYxMjE5MTE1MDIxNXxiYzFxeDlydnhzZTU2M3NsdTRuM3gzNHFkY3RzYWFxa21wbnNmN240MDM",
              "next_page_url": "https://api.coinmetrics.io/v4/blockchain-v2/btc/accounts?api_key=<your_key>&pretty=true&page_size=10000&next_page_token=MzA1MDYxMjE5MTE1MDIxNXxiYzFxeDlydnhzZTU2M3NsdTRuM3gzNHFkY3RzYWFxa21wbnNmN240MDM"
            }

    BlockchainSubAccountsV2:
      description: Blockchain sub-accounts.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockchainSubAccountsResponseV2'
          example:
            {
              "data": [
                {
                  "sub_account": "b4d1e49d6e18f3b811a79d58c1c3af234e53c8721568cc2a865cec2d6b13a2e8-0",
                  "account": "12wmLv9BrJrpFF1Txeyqc1AAj1dX34k8Y8",
                  "type": "UTXO",
                  "creation_height": "92067",
                  "creation_time": "2010-11-15T22:06:47.000000000Z",
                  "creation_chain_sequence_number": "395424754041356",
                  "creation_block_hash": "000000000006f9b809365a295225ec109b1e76fcb16f040bed626211ce9ce7c8",
                  "balance": "1.57"
                },
                {
                  "sub_account": "b5cb830ba0c5ea696709121530357a2ab0154bbb95add2393f34eb662eb828df-0",
                  "account": "12wmLv9BrJrpFF1Txeyqc1AAj1dX34k8Y8",
                  "type": "UTXO",
                  "creation_height": "92068",
                  "creation_time": "2010-11-15T22:22:30.000000000Z",
                  "creation_chain_sequence_number": "395429049008526",
                  "creation_block_hash": "00000000000c10491f16d464f138e9ca3fd335ac97e0e7e1bae94cd1eb9b6e66",
                  "balance": "3.09"
                }
              ],
              "next_page_token": "Mzk1NDI5MDQ5MDA4NTI2fDEyd21MdjlCckpycEZGMVR4ZXlxYzFBQWoxZFgzNGs4WTg",
              "next_page_url": "https://api.coinmetrics.io/v4/blockchain-v2/btc/sub-accounts?api_key=<your_key>&pretty=true&page_size=10000&next_page_token=Mzk1NDI5MDQ5MDA4NTI2fDEyd21MdjlCckpycEZGMVR4ZXlxYzFBQWoxZFgzNGs4WTg"
            }

    BlockchainTransactionsV2:
      description: Blockchain transactions.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockchainTransactionsResponseV2'
          example:
            {
              "data": [
                {
                  "block_hash": "749e49620fcbdbb474a067f6eb350bee5cf67e4d76e624e63b9680824e6b15a7",
                  "height": "1720841",
                  "txid": "55a25f64dc6f0d8d71b0ac733ccea1017d300da329be0790d905957e91913d50",
                  "consensus_time": "2019-10-17T10:00:43.000000000Z",
                  "miner_time" : "2019-10-17T10:00:43.000000000Z",
                  "tx_position": "7390955816615984",
                  "n_balance_updates": "4",
                  "amount": "0.85215625",
                  "version": "2",
                  "physical_size": "248",
                  "consensus_size": "662",
                  "fee": "0.00000232",
                  "min_chain_sequence_number": "7390955816616149",
                  "max_chain_sequence_number": "7390955816616152"
                },
                {
                  "block_hash": "749e49620fcbdbb474a067f6eb350bee5cf67e4d76e624e63b9680824e6b15a7",
                  "height": "1720841",
                  "txid": "468d5c24de3008250974cd0447249a1ae2e36af36d26159f0b448ef16b8329da",
                  "consensus_time": "2019-10-17T10:00:43.000000000Z",
                  "miner_time" : "2019-10-17T10:00:43.000000000Z",
                  "tx_position": "7390955816615985",
                  "n_balance_updates": "4",
                  "amount": "0.85175575",
                  "version": "2",
                  "physical_size": "248",
                  "consensus_size": "662",
                  "fee": "0.00000232",
                  "min_chain_sequence_number": "7390955816616153",
                  "max_chain_sequence_number": "7390955816616156"
                }
              ],
              "next_page_token": "MTUwNTY4NjY4NDk1ODcyfGI5NDg3YTM3MzY2OWRlMDAzNGFkM2Q2NmI5OWY1ZGZlMTRkNGIyMTBkZjQ2MTExNTFjM2Y0YjM0OTc0MTM2Y2M",
              "next_page_url": "https://api.coinmetrics.io/v4/blockchain-v2/btc/transactions?api_key=<your key>&start_height=35055&page_size=2&next_page_token=MTUwNTY4NjY4NDk1ODcyfGI5NDg3YTM3MzY2OWRlMDAzNGFkM2Q2NmI5OWY1ZGZlMTRkNGIyMTBkZjQ2MTExNTFjM2Y0YjM0OTc0MTM2Y2M"
            }

    BlockchainBalanceUpdatesV2:
      description: Blockchain balance updates.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockchainBalanceUpdatesResponseV2'
          example:
            {
              "data": [
                {
                  "block_hash": "0000000000000000000439ea9434c8b20e5e30459022865a7a7fd31e4233538b",
                  "height": "649240",
                  "consensus_time": "2020-09-20T16:49:48.000000000Z",
                  "credit": false,
                  "total_received": "0.03823664",
                  "total_sent": "0.03632737",
                  "chain_sequence_number": "2788464567269277",
                  "account": "112dvb4DogEpcp3yUR59HQuN1LFJbPErAT",
                  "account_creation_height": "645045",
                  "change": "-0.00195697",
                  "previous_balance": "0.00386624",
                  "new_balance": "0.00190927",
                  "transaction_sequence_number": "0",
                  "txid": "379580cd4910e3ce306ee2129fd1a29ef0a6f86e984d1e7f26c181b4cb83ba51",
                  "sub_account": {
                    "previous_balance": "0.00195697",
                    "new_balance": "0",
                    "sub_account": "d5633404739f275af7af6012f4e03e32235857751e382a420d1683582a09afb1-1161",
                    "n_debits": "1",
                    "n_credits": "1",
                    "previous_credit_height": "648382",
                    "previous_chain_sequence_number": "2784779485328037",
                    "total_received": "0.00195697",
                    "total_sent": "0.00195697",
                    "creation_height": "648382"
                  },
                  "n_debits": "5",
                  "n_credits": "6",
                  "previous_debit_height": "649240",
                  "previous_credit_height": "649073",
                  "previous_chain_sequence_number": "2788464567269275"
                },
                {
                  "block_hash": "0000000000000000000439ea9434c8b20e5e30459022865a7a7fd31e4233538b",
                  "height": "649240",
                  "consensus_time": "2020-09-20T16:49:48.000000000Z",
                  "credit": false,
                  "total_received": "0.03823664",
                  "total_sent": "0.03823664",
                  "chain_sequence_number": "2788464567269279",
                  "account": "112dvb4DogEpcp3yUR59HQuN1LFJbPErAT",
                  "account_creation_height": "645045",
                  "change": "-0.00190927",
                  "previous_balance": "0.00190927",
                  "new_balance": "0",
                  "transaction_sequence_number": "0",
                  "txid": "379580cd4910e3ce306ee2129fd1a29ef0a6f86e984d1e7f26c181b4cb83ba51",
                  "sub_account": {
                    "previous_balance": "0.00190927",
                    "new_balance": "0",
                    "sub_account": "468effb920e280e966a993918acde9a37118c0daf16d5fc067b1522661e1bab9-1259",
                    "n_debits": "1",
                    "n_credits": "1",
                    "previous_credit_height": "648906",
                    "previous_chain_sequence_number": "2787030048192699",
                    "total_received": "0.00190927",
                    "total_sent": "0.00190927",
                    "creation_height": "648906"
                  },
                  "n_debits": "6",
                  "n_credits": "6",
                  "previous_debit_height": "649240",
                  "previous_credit_height": "649073",
                  "previous_chain_sequence_number": "2788464567269277"
                }
              ],
              "next_page_token": "Mjc4ODQ2NDU2NzI2OTI3N3wwMDAwMDAwMDAwMDAwMDAwMDAwNDM5ZWE5NDM0YzhiMjBlNWUzMDQ1OTAyMjg2NWE3YTdmZDMxZTQyMzM1Mzhi",
              "next_page_url": "https://api.coinmetrics.io/v4/blockchain-v2/btc/balance-updates?api_key=<your_key>&pretty=true&include_sub_accounts=true&page_size=2&next_page_token=Mjc4ODQ2NDU2NzI2OTI3N3wwMDAwMDAwMDAwMDAwMDAwMDAwNDM5ZWE5NDM0YzhiMjBlNWUzMDQ1OTAyMjg2NWE3YTdmZDMxZTQyMzM1Mzhi"
            }

    BlockchainBalanceUpdatesForAccountV2:
      description: Blockchain balance updates for account.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockchainBalanceUpdatesResponseV2'
          example:
            {
              "data": [
                {
                  "block_hash": "0000000000000000000439ea9434c8b20e5e30459022865a7a7fd31e4233538b",
                  "height": "649240",
                  "consensus_time": "2020-09-20T16:49:48.000000000Z",
                  "credit": false,
                  "total_received": "0.03823664",
                  "total_sent": "0.03632737",
                  "chain_sequence_number": "2788464567269277",
                  "account": "112dvb4DogEpcp3yUR59HQuN1LFJbPErAT",
                  "account_creation_height": "645045",
                  "change": "-0.00195697",
                  "previous_balance": "0.00386624",
                  "new_balance": "0.00190927",
                  "transaction_sequence_number": "0",
                  "txid": "379580cd4910e3ce306ee2129fd1a29ef0a6f86e984d1e7f26c181b4cb83ba51",
                  "sub_account": {
                    "previous_balance": "0.00195697",
                    "new_balance": "0",
                    "sub_account": "d5633404739f275af7af6012f4e03e32235857751e382a420d1683582a09afb1-1161",
                    "n_debits": "1",
                    "n_credits": "1",
                    "previous_credit_height": "648382",
                    "previous_chain_sequence_number": "2784779485328037",
                    "total_received": "0.00195697",
                    "total_sent": "0.00195697",
                    "creation_height": "648382"
                  },
                  "n_debits": "5",
                  "n_credits": "6",
                  "previous_debit_height": "649240",
                  "previous_credit_height": "649073",
                  "previous_chain_sequence_number": "2788464567269275"
                },
                {
                  "block_hash": "0000000000000000000439ea9434c8b20e5e30459022865a7a7fd31e4233538b",
                  "height": "649240",
                  "consensus_time": "2020-09-20T16:49:48.000000000Z",
                  "credit": false,
                  "total_received": "0.03823664",
                  "total_sent": "0.03823664",
                  "chain_sequence_number": "2788464567269279",
                  "account": "112dvb4DogEpcp3yUR59HQuN1LFJbPErAT",
                  "account_creation_height": "645045",
                  "change": "-0.00190927",
                  "previous_balance": "0.00190927",
                  "new_balance": "0",
                  "transaction_sequence_number": "0",
                  "txid": "379580cd4910e3ce306ee2129fd1a29ef0a6f86e984d1e7f26c181b4cb83ba51",
                  "sub_account": {
                    "previous_balance": "0.00190927",
                    "new_balance": "0",
                    "sub_account": "468effb920e280e966a993918acde9a37118c0daf16d5fc067b1522661e1bab9-1259",
                    "n_debits": "1",
                    "n_credits": "1",
                    "previous_credit_height": "648906",
                    "previous_chain_sequence_number": "2787030048192699",
                    "total_received": "0.00190927",
                    "total_sent": "0.00190927",
                    "creation_height": "648906"
                  },
                  "n_debits": "6",
                  "n_credits": "6",
                  "previous_debit_height": "649240",
                  "previous_credit_height": "649073",
                  "previous_chain_sequence_number": "2788464567269277"
                }
              ],
              "next_page_token": "Mjc4ODQ2NDU2NzI2OTI3N3wwMDAwMDAwMDAwMDAwMDAwMDAwNDM5ZWE5NDM0YzhiMjBlNWUzMDQ1OTAyMjg2NWE3YTdmZDMxZTQyMzM1Mzhi",
              "next_page_url": "https://api.coinmetrics.io/v4/blockchain-v2/btc/accounts/112jmDkNGHSbhhY17JGpxU3sMA9ZExG7b2/balance-updates?pretty=true&api_key=<your_key>"
            }

    BlockchainFullBlockV2:
      description: Blockchain full block.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockchainFullBlockResponseV2'
          example:
            {
              "block_hash": "0000000000000000000079fca9c54dd7532d139ed258f02e3d1368e7006157d9",
              "height": "758506",
              "consensus_time": "2022-10-13T18:27:09.000000000Z",
              "miner_time": "2022-10-13T18:57:56.000000000Z",
              "n_transactions": "469",
              "n_balance_updates": "7425",
              "transactions": [
                {
                  "txid": "232687100669217c7335d2b2b6f5e7ae61cc6d4c79b8b1b1c7a1fa21938422b9",
                  "consensus_time": "2022-10-13T18:27:09.000000000Z",
                  "tx_position": "3257758463819776",
                  "n_balance_updates": "4",
                  "amount": "6.34186444",
                  "balance_updates": [
                    {
                      "chain_sequence_number": "3257758463819776",
                      "account": "FEES",
                      "account_creation_height": "0",
                      "change": "-0.09186444",
                      "previous_balance": "0",
                      "new_balance": "-0.09186444",
                      "transaction_sequence_number": "0",
                      "n_debits": "758507",
                      "n_credits": "771183299",
                      "previous_debit_height": "758505",
                      "previous_credit_height": "758505",
                      "previous_chain_sequence_number": "3257754168874991"
                    },
                    {
                      "chain_sequence_number": "3257758463819777",
                      "account": "ISSUANCE",
                      "account_creation_height": "0",
                      "change": "-6.25",
                      "previous_balance": "-19178133.54497096",
                      "new_balance": "-19178139.79497096",
                      "transaction_sequence_number": "0",
                      "n_debits": "758507",
                      "n_credits": "0",
                      "previous_debit_height": "758505",
                      "previous_chain_sequence_number": "3257754168852481"
                    }
                  ],
                  "min_chain_sequence_number": "3257758463819776",
                  "max_chain_sequence_number": "3257758463819779"
                }
              ],
              "balance_updates": [ ],
              "parent_block_hash": "000000000000000000079a2d36f1308ea00fd26fda92fe12c5dd4e1a5b0c15e7",
              "difficulty": "35610794164371.65",
              "physical_size": "1075674",
              "consensus_size": "3993099",
              "consensus_size_limit": "4000000"
            }

    BlockchainFullTransactionV2:
      description: Blockchain full transaction.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BlockchainFullSingleTransactionResponseV2'
          example:
            {
              "txid": "16262dacdac04f41b50dd4174d3bd0d133916a325e5244b3febcb760a8d3975f",
              "consensus_time": "2022-10-14T04:17:24.000000000Z",
              "miner_time" : "2022-10-14T04:17:24.000000000Z",
              "tx_position": "10095861795127296",
              "n_balance_updates": "4",
              "amount": "12.5480776",
              "block_hash": "b5f4f41003c656a8cf7deaa8555e3240bfd24244672397b3c544bd8bd9bed036",
              "height": "2350626",
              "min_chain_sequence_number": "10095861795127296",
              "max_chain_sequence_number": "10095861795127299",
              "balance_updates": [
                {
                  "chain_sequence_number": "10095861795127296",
                  "account": "FEES",
                  "account_creation_height": "0",
                  "change": "-0.0480776",
                  "previous_balance": "0",
                  "new_balance": "-0.0480776",
                  "transaction_sequence_number": "0",
                  "n_debits": "2350627",
                  "n_credits": "128653555",
                  "previous_debit_height": "2350625",
                  "previous_credit_height": "2350625",
                  "previous_chain_sequence_number": "10095857500165790"
                },
                {
                  "chain_sequence_number": "10095861795127297",
                  "account": "ISSUANCE",
                  "account_creation_height": "0",
                  "change": "-12.5",
                  "previous_balance": "-71380870.73347135",
                  "new_balance": "-71380883.23347135",
                  "transaction_sequence_number": "0",
                  "n_debits": "2350627",
                  "n_credits": "0",
                  "previous_debit_height": "2350625",
                  "previous_chain_sequence_number": "10095857500160001"
                },
                {
                  "chain_sequence_number": "10095861795127299",
                  "account": "LaYPLuQEanVCYM9TztR9FuT3ZbTJM6wHEZ",
                  "account_creation_height": "1785846",
                  "change": "12.5480776",
                  "previous_balance": "588.96230971",
                  "new_balance": "601.51038731",
                  "transaction_sequence_number": "0",
                  "n_debits": "10123",
                  "n_credits": "10171",
                  "previous_debit_height": "2348134",
                  "previous_credit_height": "2350581",
                  "previous_chain_sequence_number": "10095668521598979"
                }
              ]
            }

    TxTracker:
      description: Current status and its updates for the requested transactions.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TxTrackerResponse'
          example:
            {
              "data": [ {
                "txid": "04b743bc2451c2a8c9fb3bb946de4eb1305a4c0c51fd7a02ee5975fb4cecf4da",
                "time": "2021-06-08T11:48:21.000000000Z",
                "first_seen_time": "2021-06-08T10:41:55.396000000Z",
                "status": "CONFIRMED",
                "status_update_time": "2021-06-08T10:44:38.224000000Z",
                "status_updates": [ {
                  "time": "2021-06-08T10:41:57.421000000Z",
                  "status": "UNCONFIRMED"
                }, {
                  "time": "2021-06-08T10:44:38.224000000Z",
                  "status": "CONFIRMED",
                  "block_hash": "000000000000000000003eee54fd5f1ae769400e66b3cd9475b5fd6255de1834",
                  "height": "686786"
                } ],
                "details": {
                  "version": "1",
                  "amount": "0.10302613",
                  "replace_by_fee_supported": false,
                  "fee": "0.0009",
                  "feerate": "473.6842",
                  "mempool_feerate_mean_at_first_seen_time": "25.5569",
                  "mempool_feerate_min_at_first_seen_time": "1",
                  "consensus_size": "760",
                  "physical_size": "380"
                },
                "block_hash": "000000000000000000003eee54fd5f1ae769400e66b3cd9475b5fd6255de1834",
                "height": "686786",
                "n_confirmations": "1"
              } ],
              "inputs": [ {
                  "address": "112dvb4DogEpcp3yUR59HQuN1LFJbPErAT"
              }, {
                  "address": "112duuEvfsJDVsuVn7Xe27bpxtq5mnuvtX"
              } ],
              "outputs": [ {
                  "address": "112jmDkNGHSbhhY17JGpxU3sMA9ZExG7b2"
              }, {
                  "address": "112dtXeVfH3QgRJJwCiQe1FuRAKBqWfY3U"
              } ],
              "next_page_token": "MjAyMS0wNi0wOFQxMDo0MTo1NS4zOTZafEJMZER2Q1JSd3FqSi16dTVSdDVPc1RCYVRBeFJfWG9DN2xsMS0wenM5Tm8",
              "next_page_url": "https://api.coinmetrics.io/v4/blockchain/btc/transaction-tracker?api_key=<your_key>&pretty=true&txids=04b743bc2451c2a8c9fb3bb946de4eb1305a4c0c51fd7a02ee5975fb4cecf4da,edb7e7b0dc1914d29ef978b332a45b89c225c555f18d6d4cfbcec0963d432544&page_size=1&paging_from=start&next_page_token=MjAyMS0wNi0wOFQxMDo0MTo1NS4zOTZafEJMZER2Q1JSd3FqSi16dTVSdDVPc1RCYVRBeFJfWG9DN2xsMS0wenM5Tm8"
            }

    MempoolFeerates:
      description: Mempool feerates.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MempoolFeeratesResponse'
          example:
            {
              "data": [ {
                "asset": "btc",
                "time": "2021-06-08T11:48:21.000000000Z",
                "feerates": [ {
                  "feerate": "1",
                  "count": "123",
                  "consensus_size": "512",
                  "physical_size": "128",
                  "fees": "0.09"
                }, {
                  "feerate": "3",
                  "count": "12",
                  "consensus_size": "2048",
                  "physical_size": "1152",
                  "fees": "0.003"
                } ]
              } ],
              "next_page_token": "MjAyMS0wNi0wOFQxMDo0MTo1NS4zOTZafEJMZER2Q1JSd3FqSi16dTVSdDVPc1RCYVRBeFJfWG9DN2xsMS0wenM5Tm8",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/mempool-feerates?api_key=<your_key>&assets=btc&pretty=true&page_size=1&paging_from=start&next_page_token=MjAyMS0wNi0wOFQxMDo0MTo1NS4zOTZafEJMZER2Q1JSd3FqSi16dTVSdDVPc1RCYVRBeFJfWG9DN2xsMS0wenM5Tm8"
            }

    AssetAlerts:
      description: Asset alerts.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetAlertsResponse'
          example:
            {
              "data": [ {
                "asset": "btc",
                "time": "2021-06-08T11:48:21.000000000Z",
                "alert": "mempool_count_empty_5m",
                "value": "0",
                "threshold": "0",
                "status": "active"
              }, {
                "asset": "btc",
                "time": "2021-06-08T12:48:21.000000000Z",
                "alert": "mempool_vsize_hi",
                "value": "323",
                "threshold": "300",
                "status": "active"
              }, {
                "asset": "btc",
                "time": "2021-06-08T13:48:21.000000000Z",
                "alert": "mempool_count_empty_5m",
                "value": "1",
                "threshold": "0",
                "status": "inactive"
              } ],
              "next_page_token": "MjAyMS0wNi0wOFQxMDo0MTo1NS4zOTZafEJMZER2Q1JSd3FqSi16dTVSdDVPc1RCYVRBeFJfWG9DN2xsMS0wenM5Tm8",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/asset-alerts?api_key=<your_key>&assets=btc&alerts=mempool_vsize_hi,mempool_count_empty_5m&pretty=true&page_size=1&paging_from=start&next_page_token=MjAyMS0wNi0wOFQxMDo0MTo1NS4zOTZafEJMZER2Q1JSd3FqSi16dTVSdDVPc1RCYVRBeFJfWG9DN2xsMS0wenM5Tm8"
            }

    DefiBalanceSheets:
      description: DeFi balance sheets.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefiBalanceSheetsResponse'
          example:
            {
              "data": [
                {
                  "defi_protocol": "aave_v2_eth",
                  "block_height": "15656731",
                  "time": "2022-10-02T00:00:00.000000000Z",
                  "assets_total_usd": "5457689622.84",
                  "assets_total_count": "34",
                  "assets": [
                    {
                      "asset": "1inch",
                      "balance_units": "16674724.15",
                      "balance_usd": "9580408.36",
                      "share": "0.001755"
                    },
                    {
                      "asset": "aave",
                      "balance_units": "1743338.27",
                      "balance_usd": "129832512.22",
                      "share": "0.023789"
                    }
                  ],
                  "liabilities_total_usd": "5458419619.21",
                  "liabilities_total_count": "34",
                  "liabilities": [
                    {
                      "asset": "1inch",
                      "balance_units": "16674705.4",
                      "balance_usd": "9580397.58",
                      "share": "0.001755"
                    },
                    {
                      "asset": "aave",
                      "balance_units": "1743338.27",
                      "balance_usd": "129832512.22",
                      "share": "0.023786"
                    }
                  ],
                  "loans_lent_total_usd": "1531826827.01",
                  "tvl_total_usd": "3925862795.83",
                  "net_working_capital": "-1532556823.38",
                  "protocol_utilization_ratio": "0.28",
                  "liquid_supply_ratio": "0.72",
                  "current_ratio": "0.72",
                  "debt_to_assets_ratio": "1"
                }
              ],
              "next_page_token": "0.MTUwMjYyMzI",
              "next_page_url": "https://api.coinmetrics.io/v4/timeseries/defi-balance-sheets?api_key=<your_key>&defi_protocols=aave_v2_eth&next_page_token=0.MTUwMjYyMzI"
            }

    SecurityMasterAssets:
      description: List of assets and their metadata in security master
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "asset": "audio",
                  "code": "CB568F357F",
                  "decimals": "18",
                  "creation_date": "2020-10-22",
                  "type": "erc20",
                  "parent_asset": "eth",
                  "erc20_token_contract": "18aaa7115705e8be94bffebde57af9bfc265b998"
                },
                {
                  "asset": "badger",
                  "code": "C9E3139EE9",
                  "decimals": "18",
                  "creation_date": "2020-11-28",
                  "type": "erc20",
                  "parent_asset": "eth",
                  "erc20_token_contract": "3472a5a71965499acd81997a54bba8d852c6e53d"
                }
              ],
              "next_page_token": "Mg",
              "next_page_url": "https://api.coinmetrics.io/v4/security-master/assets?assets=audio,badger,coti,crv,dydx&page_size=2&next_page_token=Mg&api_key=<your_key>"
            }
          schema:
            $ref: '#/components/schemas/SecurityMasterAssetsResponse'

    SecurityMasterMarkets:
      description: List of security master entries.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "market": "binance-1000FLOKIUSDT-future",
                  "exchange": "binance",
                  "type": "future",
                  "code": "C7101DFDBB",
                  "pair": "floki-usdt",
                  "base": "floki",
                  "quote": "usdt",
                  "symbol": "1000FLOKIUSDT",
                  "size_asset": "floki",
                  "margin_asset": "usdt",
                  "contract_size": "1000",
                  "tick_size": "0.00001",
                  "listing": "2023-05-06T00:00:00.000000000Z",
                  "order_amount_increment": "1",
                  "order_amount_min": "1",
                  "order_amount_max": "10000000",
                  "order_price_increment": "0.0000100",
                  "order_price_min": "0.0000100",
                  "order_price_max": "200",
                  "order_size_min": "5.0",
                  "price_open": "0.02221",
                  "price_close": "0.02229",
                  "price_high": "0.0229",
                  "price_low": "0.02209",
                  "vwap": "0.02241939522043145",
                  "volume": "469491373",
                  "candle_usd_volume": "10527753.918885918819449634",
                  "candle_trades_count": "58244"
                },
                {
                  "market": "binance-1000LUNCBUSD-future",
                  "exchange": "binance",
                  "type": "future",
                  "code": "C314D2136A",
                  "pair": "luna-busd",
                  "base": "luna",
                  "quote": "busd",
                  "symbol": "1000LUNCBUSD",
                  "size_asset": "luna",
                  "margin_asset": "busd",
                  "contract_size": "1000",
                  "tick_size": "0.00001",
                  "listing": "2022-05-30T07:00:00.000000000Z",
                  "order_amount_increment": "1",
                  "order_amount_min": "1",
                  "order_amount_max": "10000000",
                  "order_price_increment": "0.0000100",
                  "order_price_min": "0.0001000",
                  "order_price_max": "200",
                  "order_size_min": "5.0",
                  "price_open": "0.09374",
                  "price_close": "0.09329",
                  "price_high": "0.09499",
                  "price_low": "0.09151",
                  "vwap": "0.09285032139768002",
                  "volume": "121883176",
                  "candle_usd_volume": "11325203.70835771043391917",
                  "candle_trades_count": "49781"
                }
              ],
              "next_page_token": "0.MTUwMjYyMzI",
              "next_page_url": "https://api.coinmetrics.io/v4/security-master/markets?type=future&api_key=<your_key>&next_page_token=0.MTUwMjYyMzI"
            }
          schema:
            $ref: '#/components/schemas/SecurityMasterMarketsResponse'

    JobsDetails:
      description: Jobs details.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "id": "ZjRjZDE2N2EtYzljYy00MjQ5LTk4ZWYtOTlkZDljZTE1ZDU3OjgzNTZkODQyLTA5ODMtNGM2NC1hMGE5LWY5MzBhZTMxODFiZg",
                  "status": "completed",
                  "results": [
                    {
                      "url": "https://async-job-results-0000.coinmetrics.io/6e88ba1c-3c92-4e76-bb11-0a99eecf8956.gz"
                    }
                  ],
                  "creation_time": "2023-01-04T00:00:00.000000000Z",
                  "completion_time": "2023-01-05T00:00:00.000000000Z",
                  "expiration_time": "2023-01-06T00:00:00.000000000Z"
                }
              ]
            }
          schema:
            $ref: '#/components/schemas/JobsDetailsResponse'

    AssetMetricsConstituentSnapshots:
      description: Snapshots of asset metric constituents.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "time": "2023-09-01T00:00:00.000000000Z",
                  "exchange": "coinbase"
                },
                {
                  "time": "2023-09-01T00:00:00.000000000Z",
                  "exchange": "binance"
                },
                {
                  "time": "2023-09-01T00:00:00.000000000Z",
                  "exchange": "binance.us"
                }
              ],
              "next_page_token": "0.MjAxNy0wNS0yMlQwMDowMDowMFo",
              "next_page_url": "https://api.coinmetrics.io/v4/constituent-snapshots/asset-metrics?metric=volume_trusted_spot_usd_1d&at_time=now&pretty=true&page_size=3&api_key=<your_key>"
            }
          schema:
            $ref: '#/components/schemas/ConstituentSnapshotsAssetMetricsResponse'
        text/csv:
          example: |-
            time,exchange
            2023-09-01T00:00:00.000000000Z,coinbase
            2023-09-01T00:00:00.000000000Z,binance
            2023-09-01T00:00:00.000000000Z,binance.us
          schema:
            $ref: '#/components/schemas/ConstituentSnapshotsAssetMetricsResponse'

    AssetMetricsConstituentTimeframes:
      description: List of timeframes.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "exchange": "gemini",
                  "start_time": "2023-10-12T00:00:00.000000000Z",
                  "end_time": null
                },
                {
                  "exchange": "kraken",
                  "start_time": "2023-10-12T00:00:00.000000000Z",
                  "end_time": null
                },
                {
                  "exchange": "binance",
                  "start_time": "2023-04-01T00:00:00.000000000Z",
                  "end_time": "2023-10-12T00:00:00.000000000Z"
                },
                {
                  "exchange": "binance.us",
                  "start_time": "2023-04-01T00:00:00.000000000Z",
                  "end_time": "2023-10-12T00:00:00.000000000Z"
                },
                {
                  "exchange": "bitstamp",
                  "start_time": "2023-04-01T00:00:00.000000000Z",
                  "end_time": "2023-10-12T00:00:00.000000000Z"
                }
              ],
              "next_page_token": "0.MjAxNy0wNS0yMlQwMDowMDowMFo",
              "next_page_url": "https://api.coinmetrics.io/v4/constituent-timeframes/asset-metrics?metric=volume_trusted_spot_usd_1d&pretty=true&page_size=5&api_key=<your_key>"
            }
          schema:
            $ref: '#/components/schemas/ConstituentTimeframesAssetMetricsResponse'
        text/csv:
          example: |-
            exchange,start_time,end_time
            gemini,2023-10-12T00:00:00.000000000Z,null
            kraken,2023-10-12T00:00:00.000000000Z,null
            binance,2023-04-01T00:00:00.000000000Z,2023-10-12T00:00:00.000000000Z
            binance.us,2023-04-01T00:00:00.000000000Z,2023-10-12T00:00:00.000000000Z
            bitstamp,2023-04-01T00:00:00.000000000Z,2023-10-12T00:00:00.000000000Z
          schema:
            $ref: '#/components/schemas/ConstituentTimeframesAssetMetricsResponse'

    BlockchainMetadataTags:
      description: List of tags.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "tag": "ADDRESS_IS_COLD_WALLET",
                  "type": "ENTITY",
                  "description": "Tag the ADDRESS as COLD wallet."
                },
                {
                  "tag": "ADDRESS_IS_EXCHANGE",
                  "type": "ENTITY",
                  "description": "Tag the ADDRESS as EXCHANGE."
                }
              ]
            }
          "schema":
            $ref: '#/components/schemas/BlockchainMetadataTagsResponse'

    BlockchainMetadataTaggedEntities:
      description: List of tagged entities. Ordered by tuple `(entity, tag, location, start_time)` if requested by providing `entities` parameter. Ordered by tuple `(tag, location, entity, started_time)` if requested by providing `tags` parameter.
      content:
        application/json:
          example:
            {
              "data": [
                {
                  "entity": "00000000000003441d59dde9a90bffb1cd3fabf1",
                  "tag": "ADDRESS_IS_CONTRACT",
                  "location": "eth",
                  "type": "ADDRESS",
                  "tagger_type": "COINMETRICS",
                  "tagger_method": "DETERMINISTIC",
                  "start_time": "2021-04-24T09:23:53.000000000Z",
                  "start_block_height": "12302098",
                  "start_block_hash": "3f18d476b03fca40a128b3a715f2f6da1056cf4dcc9ec24500f7a53acee4733b"
                },
                {
                  "entity": "00000000000006b2ab6decbc6fc7ec6bd2fbc720",
                  "tag": "ADDRESS_IS_CONTRACT",
                  "location": "eth",
                  "type": "ADDRESS",
                  "tagger_type": "COINMETRICS",
                  "tagger_method": "DETERMINISTIC",
                  "start_time": "2023-10-12T21:50:47.000000000Z",
                  "start_block_height": "18337128",
                  "start_block_hash": "5184d01e7ba0c8769553342bdf66b4a5aabb096ad4f5c754429733613a155ae5"
                }
              ],
              "next_page_token": "0.MjAyMC0wNi0wOFQyMTowM",
              "next_page_url": "https://api.coinmetrics.io/v4/blockchain-metadata/tagged-entities?api_key=<your_key>&tags=ADDRESS_IS_CONTRACT&next_page_token=0.MjAyMC0wNi0wOFQyMTowM"
            }
          schema:
            $ref: '#/components/schemas/BlockchainMetadataTaggedEntitiesResponse'


    CreatedJobDetails:
      description: Details of just created job.
      content:
        application/json:
          example:
            {
              "job_id": "ZjRjZDE2N2EtYzljYy00MjQ5LTk4ZWYtOTlkZDljZTE1ZDU3OjgzNTZkODQyLTA5ODMtNGM2NC1hMGE5LWY5MzBhZTMxODFiZg",
              "job_url": "https://api.coinmetrics.io/v4/jobs?api_key=<your_key>&ids=ZjRjZDE2N2EtYzljYy00MjQ5LTk4ZWYtOTlkZDljZTE1ZDU3OjgzNTZkODQyLTA5ODMtNGM2NC1hMGE5LWY5MzBhZTMxODFiZg"
            }
          schema:
            $ref: '#/components/schemas/CreatedJobDetailsResponse'

  schemas:
    BlockchainJobAccountBalancesRequest:
      properties:
        assets:
          $ref: '#/components/schemas/BlockchainJobAssets'
        accounts:
          $ref: '#/components/schemas/BlockchainJobAccounts'
        at_time:
          $ref: '#/components/schemas/BlockchainJobAtTime'
        at_slot:
          $ref: '#/components/schemas/BlockchainJobAtSlot'
        at_height:
          $ref: '#/components/schemas/BlockchainJobAtHeight'
      required:
        - assets
        - accounts

    BlockchainJobBalanceUpdatesRequest:
      properties:
        assets:
          $ref: '#/components/schemas/BlockchainJobAssets'
        accounts:
          $ref: '#/components/schemas/BlockchainJobAccounts'
        start_time:
          $ref: '#/components/schemas/BlockchainJobStartTime'
        end_time:
          $ref: '#/components/schemas/BlockchainJobEndTime'
        start_height:
          $ref: '#/components/schemas/BlockchainJobStartHeight'
        end_height:
          $ref: '#/components/schemas/BlockchainJobEndHeight'
        start_slot:
          $ref: '#/components/schemas/BlockchainJobStartSlot'
        end_slot:
          $ref: '#/components/schemas/BlockchainJobEndSlot'
      required:
        - assets
        - accounts

    BlockchainJobTransactionsRequest:
      properties:
        assets:
          $ref: '#/components/schemas/BlockchainJobAssets'
        txids:
          $ref: '#/components/schemas/BlockchainTransactionIds'
      required:
        - assets
        - txids

    BlockchainJobAccountBalance:
      title: "Account Balance"
      x-tags:
        - Blockchain Explorer Job Results
      type: object
      properties:
        account:
          $ref: '#/components/schemas/BlockchainJobAccount'
        balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
      required:
        - account
        - balance

    BlockchainJobBalanceUpdate:
      title: "Balance update"
      x-tags:
        - Blockchain Explorer Job Results
      allOf:
        - $ref: "#/components/schemas/BlockchainJobTransactionBalanceUpdate"
        - type: object
          properties:
            block_hash:
              $ref: '#/components/schemas/BlockchainBlockHash'
            height:
              $ref: '#/components/schemas/BlockchainBlockHeight'
            slot:
              $ref: '#/components/schemas/BlockchainBlockSlot'
            consensus_time:
              $ref: '#/components/schemas/Time'
            txid:
              $ref: '#/components/schemas/BlockchainTransactionId'
            reason:
              $ref: '#/components/schemas/BlockchainBalanceUpdatesReason'
          required:
            - consensus_time

    BlockchainJobTransactionBalanceUpdates:
      type: array
      items:
        $ref: "#/components/schemas/BlockchainJobTransactionBalanceUpdate"

    BlockchainJobTransactionBalanceUpdate:
      properties:
        account:
          $ref: '#/components/schemas/BlockchainJobAccount'
        change:
          $ref: '#/components/schemas/BlockchainBalanceChange'
        previous_balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
        new_balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
      required:
        - account
        - change
        - previous_balance
        - new_balance

    BlockchainJobTransactionInfo:
      title: "Transaction info"
      x-tags:
        - Blockchain Explorer Job Results
      type: object
      properties:
        txid:
          $ref: '#/components/schemas/BlockchainTransactionId'
        consensus_time:
          $ref: '#/components/schemas/Time'
        miner_time:
          $ref: '#/components/schemas/Time'
        n_balance_updates:
          $ref: '#/components/schemas/BlockchainNumberOfBalanceUpdates'
        amount:
          $ref: '#/components/schemas/BlockchainTransactionAmount'
        block_hash:
          $ref: '#/components/schemas/BlockchainBlockHash'
        height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        slot:
          $ref: '#/components/schemas/BlockchainBlockSlot'
        balance_updates:
          $ref: '#/components/schemas/BlockchainJobTransactionBalanceUpdate'
      required:
        - txid
        - consensus_time
        - miner_time
        - n_balance_updates
        - amount
        - block_hash
        - height

    AssetsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AssetInfo'
          type: array
      required:
        - data
      type: object

    AssetAlertRulesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AssetAlertRuleInfo'
          type: array
      required:
        - data
      type: object

    PairsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PairInfo'
          type: array
      required:
        - data
      type: object

    CatalogPairCandlesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogPairCandlesInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2PairCandlesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogPairCandlesInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogIndexCandlesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogIndexCandlesInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2IndexCandlesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogIndexCandlesInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ExchangeAssetsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ExchangeAssetInfo'
          type: array
      required:
        - data
      type: object

    InstitutionsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/InstitutionInfo'
          type: array
      required:
        - data
      type: object

    AssetInfo:
      description: Information about asset.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        full_name:
          $ref: '#/components/schemas/FullName'
        experimental:
          $ref: '#/components/schemas/ExperimentalAsset'
        metrics:
          $ref: '#/components/schemas/MetricsIds'
        exchanges:
          $ref: '#/components/schemas/ExchangesIds'
        markets:
          $ref: '#/components/schemas/MarketsIds'
        atlas:
          $ref: '#/components/schemas/AssetAtlas'
      type: object
      required:
        - asset
        - full_name

    AssetAlertSubRule:
      description: Information about the asset alert condition.
      properties:
        description:
          $ref: '#/components/schemas/AssetAlertSubRuleDescription'
        threshold:
          $ref: '#/components/schemas/AssetAlertSubRuleThreshold'
        constituents:
          $ref: '#/components/schemas/AssetAlertSubRuleConstituents'
      type: object
      required:
        - description
        - constituents

    AssetAlertRuleInfo:
      description: Information about the asset alert.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        name:
          $ref: '#/components/schemas/AssetAlertRuleName'
        conditions:
          $ref: '#/components/schemas/AssetAlertSubRules'
      type: object
      required:
        - asset
        - name
        - conditions

    PairInfo:
      description: Information about pair.
      properties:
        pair:
          $ref: '#/components/schemas/PairId'
        full_name:
          $ref: '#/components/schemas/FullName'
        metrics:
          $ref: '#/components/schemas/PairMetricsIds'
      type: object
      required:
        - pair

    ExchangeAssetInfo:
      description: Information about Exchange-asset combination.
      properties:
        exchange_asset:
          $ref: '#/components/schemas/ExchangeAsset'
        metrics:
          $ref: '#/components/schemas/ExchangeAssetMetricsIds'
      type: object
      required:
        - pair

    InstitutionInfo:
      description: Information about Institution.
      properties:
        institution:
          $ref: '#/components/schemas/InstitutionId'
        metrics:
          $ref: '#/components/schemas/InstitutionMetricsIds'
      type: object
      required:
        - institution

    AssetAlertRuleName:
      description: Name of the asset alert.
      type: string

    AssetAlertSubRuleDescription:
      description: Description of the asset alert.
      type: string

    AssetAlertSubRuleThreshold:
      description: >-
        Asset alert's Key Risk Indicator triggering value.
        Omitted if asset alert condition depends on the variable metric threshold (this fact will be reflected in the condition description).
      type: string

    AssetAlertSubRuleConstituent:
      description: Name of the alerting metric.
      type: string

    AssetAlertSubRuleConstituents:
      description: Names of the alerting metrics that form an alerting value to be compared against the Key Risk Indicator threshold.
      items:
        $ref: '#/components/schemas/AssetAlertSubRuleConstituent'
      type: array

    AssetAlertSubRules:
      description: Conditions that should be met in order for the corresponding asset alert to be produced.
      items:
        $ref: '#/components/schemas/AssetAlertSubRule'
      type: array

    FullName:
      description: Human-friendly name.
      type: string

    ExperimentalAsset:
      description: If set to true, discrepancies might be present in the dataset for this asset, and that's expected.
      type: boolean

    AssetAtlas:
      description: If set to true, Atlas data is available for this asset.
      type: boolean

    AssetId:
      description: Unique name of the asset.
      type: string

    AssetProfileFullName:
      description: Full name of the asset.
      type: string

    AssetProfileDescription:
      description: Description of the asset.
      type: string

    AssetProfileOverview:
      description: Overview of the asset.
      type: string

    AssetProfileTokenPurpose:
      type: string

    AssetProfileProjectTeam:
      description: Asset's project team.
      type: string

    AssetProfileFoundation:
      description: Asset foundation.
      type: string

    AssetProfileWebsiteUrl:
      description: Official website URL of the asset.
      type: string

    AssetProfileWhitepaperUrl:
      description: Official whitepaper URL of the asset.
      type: string

    AssetProfileCreationDate:
      description: Date of the asset creation (first block) in ISO 8601 format.
      type: string

    AssetProfileTokenGenerationEventSupply:
      description: Asset's token generation event supply.
      type: string

    AssetProfileSupplyCap:
      description: Supply cap of the asset. If not present then the theoretical maximum supply is infinite for that asset.
      type: string

    AssetProfileInitialSupplyProjectDistribution:
      type: object
      properties:
        initial_supply_allocation:
          $ref: '#/components/schemas/AssetProfileInitialSupplyAllocation'
        initial_supply_distribution:
          $ref: '#/components/schemas/AssetProfileInitialSupplyDistribution'

    AssetProfileInitialSupplyAllocation:
      description: Initial supply allocation.
      type: string

    AssetProfileInitialSupplyDistribution:
      description: Initial supply distribution.
      type: string

    AssetProfileVestingSchedule:
      type: object
      properties:
        vesting_schedule_allocation:
          $ref: '#/components/schemas/AssetProfileVestingScheduleAllocation'
        vesting_schedule_cliff:
          $ref: '#/components/schemas/AssetProfileVestingScheduleCliff'
        vesting_schedule_total_unlock_time:
          $ref: '#/components/schemas/AssetProfileVestingScheduleTotalUnlockTime'

    AssetProfileVestingScheduleAllocation:
      description: Vesting schedule allocation.
      type: string

    AssetProfileVestingScheduleCliff:
      description: Vesting schedule cliff.
      type: string

    AssetProfileVestingScheduleTotalUnlockTime:
      description: Vesting schedule total unlock time.
      type: string

    AssetProfileNewTokenIssuanceRecipient:
      description: Token issuance recipient.
      type: string

    AssetProfileIssuingNetwork:
      type: string

    AssetProfileBridgedNetwork:
      type: string

    AssetProfileIssuanceScheduleChanges:
      description: Issuance schedule changes.
      type: string

    AssetProfileSignificantHistoricalChanges:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/AssetProfileSignificantHistoricalChangesDate'
        details:
          $ref: '#/components/schemas/AssetProfileSignificantHistoricalChangesDetails'

    AssetProfileSignificantHistoricalChangesDate:
      description: Date of significant historical change.
      type: string

    AssetProfileSignificantHistoricalChangesDetails:
      description: Details about significant historical change.
      type: string

    AssetProfileUpgradeHistory:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/AssetProfileUpgradeHistoryDate'
        details:
          $ref: '#/components/schemas/AssetProfileUpgradeHistoryDetails'

    AssetProfileUpgradeHistoryDate:
      description: Date of the upgrade.
      type: string

    AssetProfileUpgradeHistoryDetails:
      description: Details about the upgrade.
      type: string

    AssetProfileBlogUpdates:
      description: Asset's blog updates.
      type: string

    ProfileRepository:
      type: string

    AssetProfileAssetRegulation:
      description: Asset's regulation.
      type: string

    AssetProfileAssetRegulatedProduct:
      type: string

    AssetProfileEtpCustodian:
      type: string

    NetworkProfileFullName:
      description: Network full name.
      type: string

    NetworkProfileNetwork:
      description: Network name.
      type: string

    NetworkProfileOverview:
      description: Network overview.
      type: string

    NetworkProfileConsensusMechanism:
      description: Network consensus mechanism.
      type: string

    NetworkProfileHashingAlgorithm:
      description: Network hashing algorithm.
      type: string

    NetworkProfileTransactionFinality:
      description: Network transaction finality.
      type: string

    NetworkProfileAvailableClient:
      type: string

    NetworkProfileSmartContractDeployment:
      description: Network smart contract deployment.
      type: string

    NetworkProfileFoundation:
      type: string

    NetworkProfileFoundingTeamIdentity:
      description: Network team identity.
      type: string

    NetworkProfileRepository:
      description: Network profile repository.
      type: object
      properties:
        github_repository:
          $ref: '#/components/schemas/NetworkProfileRepositoryGithubRepository'
        github_url:
          $ref: '#/components/schemas/NetworkProfileRepositoryGithubUrl'

    NetworkProfileRepositoryGithubRepository:
      description: GitHub repository.
      type: string

    NetworkProfileRepositoryGithubUrl:
      description: GitHub repository URL.
      type: string

    NetworkProfileTransactionVisibility:
      description: Network transaction visibility.
      type: string

    NetworkProfileNativeFeeToken:
      description: Network native fee token.
      type: string

    NetworkProfileSignificantHistoricalChange:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/NetworkProfileSignificantHistoricalChangesDate'
        details:
          $ref: '#/components/schemas/NetworkProfileSignificantHistoricalChangesDetails'

    NetworkProfileSignificantHistoricalChangesDate:
      description: Date of significant historical change.
      type: string

    NetworkProfileSignificantHistoricalChangesDetails:
      description: Details about significant historical change.
      type: string

    NetworkProfileUpgradeHistory:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/NetworkProfileUpgradeHistoryDate'
        details:
          $ref: '#/components/schemas/NetworkProfileUpgradeHistoryDetails'

    NetworkProfileUpgradeHistoryDate:
      description: Date of the upgrade.
      type: string

    NetworkProfileUpgradeHistoryDetails:
      description: Details about the upgrade.
      type: string

    NetworkProfileRollupInfo:
      description: Network rollup information.
      type: object
      properties:
        rollup_type:
          $ref: '#/components/schemas/NetworkProfileRollupInfoRollupType'
        state_validation:
          $ref: '#/components/schemas/NetworkProfileRollupInfoStateValidation'

    NetworkProfileRollupInfoRollupType:
      description: Network rollup information.
      type: string

    NetworkProfileRollupInfoStateValidation:
      description: Network state validation.
      type: string

    NetworkProfileModularOrMonolithic:
      description: Network modular or monolithic.
      type: string

    NetworkProfileNetworkScalingSolution:
      description: Network scaling solution.
      type: string

    NetworkProfileTypeOfNetwork:
      description: Type of network.
      type: string

    NetworkProfileProfileChainExplorer:
      type: string

    PairId:
      description: Unique name of the pair.
      type: string

    ExchangeAsset:
      description: Unique combination of the exchange and asset.
      type: string

    Market:
      description: Unique name of the market.
      type: string

    InstitutionId:
      description: Unique name of the institution.
      type: string

    ExchangeId:
      description: Unique name of the exchange.
      type: string

    ExchangesIds:
      description: List of exchange names.
      items:
        $ref: '#/components/schemas/ExchangeId'
      type: array

    ExchangesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ExchangeInfo'
          type: array
      required:
        - data
      type: object

    ExchangeInfo:
      description: Information about an exchange.
      properties:
        exchange:
          $ref: '#/components/schemas/ExchangeId'
        markets:
          $ref: '#/components/schemas/MarketsIds'
        metrics:
          $ref: '#/components/schemas/ExchangeMetricsIds'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      required:
        - exchange
        - markets
        - min_time
        - max_time
      type: object

    CatalogV2AssetMetricsInfo:
      description: Information about asset metrics.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        metrics:
          $ref: '#/components/schemas/MetricsIds'
      required:
        - asset
        - metrics
      type: object

    CatalogV2ExchangeMetricsInfo:
      description: Information about exchange metrics.
      properties:
        exchange:
          $ref: '#/components/schemas/ExchangeId'
        metrics:
          $ref: '#/components/schemas/ExchangeMetricsIds'
      required:
        - exchange
        - metrics
      type: object

    Exchange:
      description: Name of the exchange.
      type: string

    MarketId:
      description: Unique name of the market.
      type: string

    AssetIdBase:
      description: Unique name of the base asset.
      type: string

    AssetIdQuote:
      description: Unique name of the quote asset.
      type: string

    AssetIdBaseNative:
      description: Exchange name of the base asset.
      type: string

    AssetIdQuoteNative:
      description: Exchange name of the quote asset.
      type: string

    MarketSymbol:
      description: Unique name of the derivative market symbol.
      type: string

    MarketType:
      description: Type of the market (spot, future).
      type: string

    MarketsIds:
      description: List of market names.
      items:
        $ref: '#/components/schemas/MarketId'
      type: array

    MarketsResponse:
      description: List of markets.
      properties:
        data:
          items:
            $ref: '#/components/schemas/MarketInfo'
          type: array
      required:
        - data
      type: object

    ReferenceDataMarketsResponse:
      description: List of markets.
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataMarketInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketTradesResponse:
      description: List of market trades statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketTradesInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketTradesResponse:
      description: List of market trades statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketTradesInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketCandlesResponse:
      description: List of market candles statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketCandlesInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketCandlesResponse:
      description: List of market candles statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketCandlesInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketOrderbooksResponse:
      description: List of market orderbooks statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketOrderbooksInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketOrderbooksResponse:
      description: List of market orderbooks statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2MarketOrderbooksInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketQuotesResponse:
      description: List of market quotes statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketQuotesInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketQuotesResponse:
      description: List of market quotes statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketQuotesInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketFundingRatesResponse:
      description: List of market funding rates statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketFundingRatesInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketFundingRatesResponse:
      description: List of market funding rates statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketFundingRatesInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogV2MarketFundingRatesPredictedResponse:
      description: List of predicted market funding rates statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketFundingRatesPredictedInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketContractPricesResponse:
      description: List of contract prices statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketContractPricesInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketContractPricesResponse:
      description: List of contract prices statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketContractPricesInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketImpliedVolatilityResponse:
      description: List of implied volatility statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketImpliedVolatilityInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketImpliedVolatilityResponse:
      description: List of implied volatility statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketImpliedVolatilityInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketGreeksResponse:
      description: List of greeks statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketGreeksInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketGreeksResponse:
      description: List of greeks statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketGreeksInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketOpeninterestResponse:
      description: List of market open interest statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketOpeninterestInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketOpeninterestResponse:
      description: List of market open interest statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketOpeninterestInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketLiquidationsResponse:
      description: List of market liquidations statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketLiquidationsInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketLiquidationsResponse:
      description: List of market liquidations statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketLiquidationsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMarketMetricsResponse:
      description: List of market metrics statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketMetricsInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MarketMetricsResponse:
      description: List of market metrics statistics.
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMarketMetricsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketInfo:
      description: Information about a market.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
        trades:
          $ref: '#/components/schemas/MarketTimeRange'
        orderbooks:
          $ref: '#/components/schemas/MarketTimeRange'
        quotes:
          $ref: '#/components/schemas/MarketTimeRange'
        funding_rates:
          $ref: '#/components/schemas/MarketTimeRange'
        openinterest:
          $ref: '#/components/schemas/MarketTimeRange'
        liquidations:
          $ref: '#/components/schemas/MarketTimeRange'
        exchange:
          $ref: '#/components/schemas/Exchange'
        base:
          $ref: '#/components/schemas/AssetIdBase'
        quote:
          $ref: '#/components/schemas/AssetIdQuote'
        symbol:
          $ref: '#/components/schemas/MarketSymbol'
        type:
          $ref: '#/components/schemas/MarketType'
        size_asset:
          $ref: '#/components/schemas/DerivativeContractSizeAsset'
        margin_asset:
          $ref: '#/components/schemas/DerivativeContractMarginAsset'
        strike:
          $ref: '#/components/schemas/OptionStrike'
        option_contract_type:
          $ref: '#/components/schemas/OptionContractType'
        is_european:
          $ref: '#/components/schemas/IsEuropean'
        contract_size:
          $ref: '#/components/schemas/MarketContractSize'
        tick_size:
          $ref: '#/components/schemas/FutureTickSize'
        listing:
          $ref: '#/components/schemas/DerivativeContractListing'
        expiration:
          $ref: '#/components/schemas/DerivativeContractExpiration'
        settlement_price:
          $ref: '#/components/schemas/SettlementPrice'
        pool_config_id:
          $ref: '#/components/schemas/DefiPoolConfigId'
        contract_address:
          $ref: '#/components/schemas/DefiContractAddress'
        fee:
          $ref: '#/components/schemas/DefiFee'
        base_address:
          $ref: '#/components/schemas/DefiBaseAddress'
        quote_address:
          $ref: '#/components/schemas/DefiQuoteAddress'
        status:
          $ref: '#/components/schemas/Status'
        order_amount_increment:
          $ref: '#/components/schemas/OrderAmountIncrement'
        order_amount_min:
          $ref: '#/components/schemas/OrderAmountMin'
        order_amount_max:
          $ref: '#/components/schemas/OrderAmountMax'
        order_price_increment:
          $ref: '#/components/schemas/OrderPriceIncrement'
        order_price_min:
          $ref: '#/components/schemas/OrderPriceMin'
        order_price_max:
          $ref: '#/components/schemas/OrderPriceMax'
        order_size_min:
          $ref: '#/components/schemas/OrderSizeMin'
        order_taker_fee:
          $ref: '#/components/schemas/OrderTakerFee'
        order_maker_fee:
          $ref: '#/components/schemas/OrderMakerFee'
        margin_trading_enabled:
          $ref: '#/components/schemas/MarginTradingEnabled'
        experimental:
          $ref: '#/components/schemas/ExperimentalMarket'
      type: object
      required:
        - market
        - min_time
        - max_time
        - exchange
        - type

    ReferenceDataMarketInfo:
      description: Information about a market.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        exchange:
          $ref: '#/components/schemas/Exchange'
        base:
          $ref: '#/components/schemas/AssetIdBase'
        quote:
          $ref: '#/components/schemas/AssetIdQuote'
        pair:
          $ref: '#/components/schemas/Pair'
        symbol:
          $ref: '#/components/schemas/MarketSymbol'
        type:
          $ref: '#/components/schemas/MarketType'
        size_asset:
          $ref: '#/components/schemas/DerivativeContractSizeAsset'
        margin_asset:
          $ref: '#/components/schemas/DerivativeContractMarginAsset'
        strike:
          $ref: '#/components/schemas/OptionStrike'
        option_contract_type:
          $ref: '#/components/schemas/OptionContractType'
        is_european:
          $ref: '#/components/schemas/IsEuropean'
        contract_size:
          $ref: '#/components/schemas/MarketContractSize'
        tick_size:
          $ref: '#/components/schemas/FutureTickSize'
        multiplier_size:
          $ref: '#/components/schemas/FutureMultiplierSize'
        listing:
          $ref: '#/components/schemas/DerivativeContractListing'
        expiration:
          $ref: '#/components/schemas/DerivativeContractExpiration'
        settlement_price:
          $ref: '#/components/schemas/SettlementPrice'
        pool_config_id:
          $ref: '#/components/schemas/DefiPoolConfigId'
        contract_address:
          $ref: '#/components/schemas/DefiContractAddress'
        fee:
          $ref: '#/components/schemas/DefiFee'
        price_includes_fee:
          $ref: '#/components/schemas/DefiPriceIncludesFee'
        variable_fee:
          $ref: '#/components/schemas/DefiVariableFee'
        base_address:
          $ref: '#/components/schemas/DefiBaseAddress'
        quote_address:
          $ref: '#/components/schemas/DefiQuoteAddress'
        status:
          $ref: '#/components/schemas/Status'
        order_amount_increment:
          $ref: '#/components/schemas/OrderAmountIncrement'
        order_amount_min:
          $ref: '#/components/schemas/OrderAmountMin'
        order_amount_max:
          $ref: '#/components/schemas/OrderAmountMax'
        order_price_increment:
          $ref: '#/components/schemas/OrderPriceIncrement'
        order_price_min:
          $ref: '#/components/schemas/OrderPriceMin'
        order_price_max:
          $ref: '#/components/schemas/OrderPriceMax'
        order_size_min:
          $ref: '#/components/schemas/OrderSizeMin'
        order_taker_fee:
          $ref: '#/components/schemas/OrderTakerFee'
        order_maker_fee:
          $ref: '#/components/schemas/OrderMakerFee'
        margin_trading_enabled:
          $ref: '#/components/schemas/MarginTradingEnabled'
        experimental:
          $ref: '#/components/schemas/ExperimentalMarket'
        base_native:
          $ref: '#/components/schemas/AssetIdBaseNative'
        quote_native:
          $ref: '#/components/schemas/AssetIdQuoteNative'
      type: object
      required:
        - market
        - exchange
        - type

    CatalogMarketTradesInfo:
      description: Information about market and time range of its available trades data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogMarketCandlesInfo:
      description: Information about market and its supported candle durations.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        frequencies:
          $ref: '#/components/schemas/CatalogCandleFrequencies'
      type: object
      required:
        - market
        - candles

    CatalogMarketOrderbooksInfo:
      description: Information about market and time range of its available orderbooks data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
        depths:
          $ref: '#/components/schemas/CatalogMarketOrderbookDepths'
      type: object
      required:
        - market
        - min_time
        - max_time
        - depths

    CatalogV2MarketOrderbooksInfo:
      description: Information about market and time range of its available orderbooks data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        depths:
          $ref: '#/components/schemas/CatalogMarketOrderbookDepths'
      type: object
      required:
        - market
        - depths

    CatalogMarketOrderbookDepths:
      description: Depths of the book.
      items:
        $ref: '#/components/schemas/CatalogMarketOrderbookDepth'
      type: array

    CatalogMarketOrderbookDepth:
      properties:
        depth:
          type: string
          description: Depth of the book
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      required:
        - depth
        - min_time
        - max_time

    CatalogMarketQuotesInfo:
      description: Information about market and time range of its available quotes data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogMarketFundingRatesInfo:
      description: Information about market and time range of its available funding rates data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogMarketFundingRatesPredictedInfo:
      description: Information about market and time range of its available predicted funding rates data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogMarketContractPricesInfo:
      description: Information about market and time range of its available contract prices data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogMarketImpliedVolatilityInfo:
      description: Information about market and time range of its available implied volatility data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogMarketGreeksInfo:
      description: Information about market and time range of its available greeks data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogMarketOpeninterestInfo:
      description: Information about market and time range of its available open interest data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogMarketLiquidationsInfo:
      description: Information about market and time range of its available liquidations data.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - market
        - min_time
        - max_time

    CatalogPairCandlesInfo:
      description: Information about pair and its supported candle durations.
      properties:
        pair:
          $ref: '#/components/schemas/PairId'
        frequencies:
          $ref: '#/components/schemas/CatalogCandleFrequencies'
      type: object
      required:
        - pair

    CatalogIndexCandlesInfo:
      description: Information about index and its supported candle durations.
      properties:
        index:
          $ref: '#/components/schemas/IndexId'
        frequencies:
          $ref: '#/components/schemas/CatalogCandleFrequencies'
      type: object
      required:
        - index

    CatalogMarketMetricsInfo:
      description: Information about market and its supported metrics.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        metrics:
          $ref: '#/components/schemas/MarketMetricsIds'
      type: object
      required:
        - market
        - metrics

    CatalogCandleFrequencies:
      description: Frequencies of the candle.
      items:
        $ref: '#/components/schemas/CatalogCandleFrequency'
      type: array

    CatalogCandleFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the candle.
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      required:
        - frequency
        - min_time
        - max_time

    MarketTimeRange:
      description: Available time range for time series.
      properties:
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - min_time
        - max_time

    MinTime:
      description: Minimal available time for time series.
      type: string

    MaxTime:
      description: Maximal available time for time series.
      type: string

    DerivativeContractSizeAsset:
      description: Name of the derivative contract size asset.
      type: string

    DerivativeContractMarginAsset:
      description: Name of the derivative margin asset.
      type: string

    OptionStrike:
      description: Strike price for option trade.
      type: string

    OptionContractType:
      description: "'call or 'put' option contract type."
      type: string

    IsEuropean:
      description: shows if the options contract is european or not.
      type: boolean

    MarketContractSize:
      description: Market contract size.
      type: string

    FutureTickSize:
      description: Futures tick size.
      type: string

    FutureMultiplierSize:
      description: Futures multiplier size.
      type: string

    DerivativeContractListing:
      description: Derivative contract listing date.
      type: string

    DerivativeContractExpiration:
      description: Derivative contract expiration date.
      type: string

    SettlementPrice:
      description: Price of underlying asset at contract expiration.
      type: string

    DefiPoolConfigId:
      description: DeFi pooling config ID.
      type: string

    DefiContractAddress:
      description: DeFi contract address.
      type: string

    DefiBaseAddress:
      description: DeFi base address.
      type: string

    DefiQuoteAddress:
      description: DeFi quote address.
      type: string

    DefiFee:
      description: DeFi fee (in percents).
      type: string

    DefiPriceIncludesFee:
      description: Whether the reported price for a trade is inclusive (true) or exclusive (false) of fee.
      type: boolean

    DefiVariableFee:
      description: Whether the market has a variable (true) or fixed (false) fee structure.
      type: boolean

    MinHeight:
      description: Minimal available block height for time series.
      type: string

    MaxHeight:
      description: Maximal available block height for time series.
      type: string

    MinHash:
      description: Minimal available black hash for time series.
      type: string

    MaxHash:
      description: Maximal available block hash for time series.
      type: string

    ExperimentalAssetMetric:
      description: Asset, metric, and frequency combination is experimental.
      type: boolean

    Status:
      description: Market status (online/offline).
      type: string

    OrderAmountIncrement:
      description: Volume precision.
      type: string

    OrderAmountMin:
      description: Minimum amount size.
      type: string

    OrderAmountMax:
      description: Maximum amount size.
      type: string

    OrderPriceIncrement:
      description: Price precision.
      type: string

    OrderPriceMin:
      description: Minimum price.
      type: string

    OrderPriceMax:
      description: Maximum price.
      type: string

    OrderSizeMin:
      description: Minimum order size, where order size is amount * price.
      type: string

    OrderTakerFee:
      type: string

    OrderMakerFee:
      type: string

    MarginTradingEnabled:
      type: boolean

    MetricsIds:
      description: List of metrics.
      items:
        $ref: '#/components/schemas/AssetMetricInfo'
      type: array

    PairMetricsIds:
      description: List of metrics.
      items:
        $ref: '#/components/schemas/PairMetricInfo'
      type: array

    ExchangeAssetMetricsIds:
      description: List of metrics.
      items:
        $ref: '#/components/schemas/ExchangeAssetMetricInfo'
      type: array

    MarketMetricsIds:
      description: List of metrics.
      items:
        $ref: '#/components/schemas/MarketMetricInfo'
      type: array

    ExchangeMetricsIds:
      description: List of metrics.
      items:
        $ref: '#/components/schemas/ExchangeMetricInfo'
      type: array

    InstitutionMetricsIds:
      description: List of metrics.
      items:
        $ref: '#/components/schemas/InstitutionMetricInfo'
      type: array

    CatalogMetricInfo:
      description: Information about asset metric.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        full_name:
          $ref: '#/components/schemas/FullName'
        description:
          $ref: '#/components/schemas/Description'
        category:
          $ref: '#/components/schemas/Category'
        subcategory:
          $ref: '#/components/schemas/Subcategory'
        unit:
          $ref: '#/components/schemas/Unit'
        data_type:
          $ref: '#/components/schemas/MetricDataType'
        type:
          $ref: '#/components/schemas/MetricType'
        reviewable:
          $ref: '#/components/schemas/Reviewable'
        frequencies:
          $ref: '#/components/schemas/CatalogAssetMetricFrequencies'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        experimental:
          $ref: '#/components/schemas/ExperimentalMetric'
      required:
        - metric
        - full_name
        - description
        - category
        - subcategory
        - unit
        - data_type
        - type
        - frequencies
      type: object

    ReferenceDataAssetInfo:
      description: Asset metadata.
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        full_name:
          $ref: '#/components/schemas/FullName'
      required:
        - asset
        - full_name
      type: object

    ReferenceDataExchangeInfo:
      description: Exchange metadata.
      properties:
        exchange:
          $ref: '#/components/schemas/Exchange'
        full_name:
          $ref: '#/components/schemas/FullName'
      required:
        - exchange
        - full_name
      type: object

    ReferenceDataIndexInfo:
      description: Index metadata.
      properties:
        index:
          $ref: '#/components/schemas/Index'
        full_name:
          $ref: '#/components/schemas/FullName'
        description:
          $ref: '#/components/schemas/Description'
        type:
          $ref: '#/components/schemas/IndexType'
      required:
        - index
        - full_name
      type: object

    ReferenceDataPairInfo:
      description: Pair metadata.
      properties:
        pair:
          $ref: '#/components/schemas/Pair'
        full_name:
          $ref: '#/components/schemas/FullName'
      required:
        - pair
        - full_name
      type: object

    ReferenceDataMetricInfo:
      description: Metric metadata.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        full_name:
          $ref: '#/components/schemas/FullName'
        description:
          $ref: '#/components/schemas/Description'
        product:
          $ref: '#/components/schemas/Product'
        category:
          $ref: '#/components/schemas/Category'
        subcategory:
          $ref: '#/components/schemas/Subcategory'
        unit:
          $ref: '#/components/schemas/Unit'
        data_type:
          $ref: '#/components/schemas/MetricDataType'
        type:
          $ref: '#/components/schemas/MetricType'
        reviewable:
          $ref: '#/components/schemas/Reviewable'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        experimental:
          $ref: '#/components/schemas/ExperimentalMetric'
        constituent_snapshots_url:
          $ref: '#/components/schemas/ConstituentSnapshotsUrl'
        constituent_timeframes_url:
          $ref: '#/components/schemas/ConstituentTimeframesUrl'
        docs_url:
          $ref: '#/components/schemas/DocsUrl'
      required:
        - metric
        - full_name
        - description
        - product
        - category
        - subcategory
        - unit
        - data_type
        - type
      type: object

    CatalogAssetMetricInfo:
      description: Information about asset metric.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        full_name:
          $ref: '#/components/schemas/FullName'
        description:
          $ref: '#/components/schemas/Description'
        product:
          $ref: '#/components/schemas/Product'
        category:
          $ref: '#/components/schemas/Category'
        subcategory:
          $ref: '#/components/schemas/Subcategory'
        unit:
          $ref: '#/components/schemas/Unit'
        data_type:
          $ref: '#/components/schemas/MetricDataType'
        type:
          $ref: '#/components/schemas/MetricType'
        reviewable:
          $ref: '#/components/schemas/Reviewable'
        frequencies:
          $ref: '#/components/schemas/CatalogAssetMetricFrequencies'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        experimental:
          $ref: '#/components/schemas/ExperimentalMetric'
      required:
        - metric
        - full_name
        - description
        - product
        - category
        - subcategory
        - unit
        - data_type
        - type
        - frequencies
      type: object

    CatalogExchangeMetricInfo:
      description: Information about exchange metric.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        full_name:
          $ref: '#/components/schemas/FullName'
        description:
          $ref: '#/components/schemas/Description'
        product:
          $ref: '#/components/schemas/Product'
        category:
          $ref: '#/components/schemas/Category'
        subcategory:
          $ref: '#/components/schemas/Subcategory'
        unit:
          $ref: '#/components/schemas/Unit'
        data_type:
          $ref: '#/components/schemas/MetricDataType'
        type:
          $ref: '#/components/schemas/MetricType'
        reviewable:
          $ref: '#/components/schemas/Reviewable'
        frequencies:
          $ref: '#/components/schemas/CatalogExchangeMetricFrequencies'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        experimental:
          $ref: '#/components/schemas/ExperimentalMetric'
      required:
        - metric
        - full_name
        - description
        - product
        - category
        - subcategory
        - unit
        - data_type
        - type
        - frequencies
      type: object

    CatalogExchangeAssetMetricInfo:
      description: Information about exchange-asset metric.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        full_name:
          $ref: '#/components/schemas/FullName'
        description:
          $ref: '#/components/schemas/Description'
        product:
          $ref: '#/components/schemas/Product'
        category:
          $ref: '#/components/schemas/Category'
        subcategory:
          $ref: '#/components/schemas/Subcategory'
        unit:
          $ref: '#/components/schemas/Unit'
        data_type:
          $ref: '#/components/schemas/MetricDataType'
        type:
          $ref: '#/components/schemas/MetricType'
        reviewable:
          $ref: '#/components/schemas/Reviewable'
        frequencies:
          $ref: '#/components/schemas/CatalogExchangeAssetMetricFrequencies'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        experimental:
          $ref: '#/components/schemas/ExperimentalMetric'
      required:
        - metric
        - full_name
        - description
        - product
        - category
        - subcategory
        - unit
        - data_type
        - type
        - frequencies
      type: object

    CatalogV2ExchangeAssetMetricsInfo:
      description: Information about exchange-asset metrics.
      properties:
        exchange_asset:
          $ref: '#/components/schemas/ExchangeId'
        metrics:
          $ref: '#/components/schemas/ExchangeAssetMetricsIds'
      required:
        - exchange_asset
        - metrics
      type: object

    CatalogPairMetricInfo:
      description: Information about pair metric.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        full_name:
          $ref: '#/components/schemas/FullName'
        description:
          $ref: '#/components/schemas/Description'
        product:
          $ref: '#/components/schemas/Product'
        category:
          $ref: '#/components/schemas/Category'
        subcategory:
          $ref: '#/components/schemas/Subcategory'
        unit:
          $ref: '#/components/schemas/Unit'
        data_type:
          $ref: '#/components/schemas/MetricDataType'
        type:
          $ref: '#/components/schemas/MetricType'
        reviewable:
          $ref: '#/components/schemas/Reviewable'
        frequencies:
          $ref: '#/components/schemas/CatalogPairMetricFrequencies'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        experimental:
          $ref: '#/components/schemas/ExperimentalMetric'
      required:
        - metric
        - full_name
        - description
        - product
        - category
        - subcategory
        - unit
        - data_type
        - type
        - frequencies
      type: object

    CatalogV2PairMetricsInfo:
      description: Information about pair metrics.
      properties:
        pair:
          $ref: '#/components/schemas/PairId'
        metrics:
          $ref: '#/components/schemas/PairMetricsIds'
      required:
        - pair
        - metrics
      type: object

    CatalogInstitutionMetricInfo:
      description: Information about institution metric.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        full_name:
          $ref: '#/components/schemas/FullName'
        description:
          $ref: '#/components/schemas/Description'
        product:
          $ref: '#/components/schemas/Product'
        category:
          $ref: '#/components/schemas/Category'
        subcategory:
          $ref: '#/components/schemas/Subcategory'
        unit:
          $ref: '#/components/schemas/Unit'
        data_type:
          $ref: '#/components/schemas/MetricDataType'
        type:
          $ref: '#/components/schemas/MetricType'
        reviewable:
          $ref: '#/components/schemas/Reviewable'
        frequencies:
          $ref: '#/components/schemas/CatalogInstitutionMetricFrequencies'
        display_name:
          $ref: '#/components/schemas/DisplayName'
        experimental:
          $ref: '#/components/schemas/ExperimentalMetric'
      required:
        - metric
        - full_name
        - description
        - product
        - category
        - subcategory
        - unit
        - data_type
        - type
        - frequencies
      type: object

    CatalogV2InstitutionMetricsInfo:
      description: Information about institution metrics.
      properties:
        institution:
          $ref: '#/components/schemas/InstitutionId'
        metrics:
          $ref: '#/components/schemas/InstitutionMetricsIds'
      required:
        - institution
        - metrics
      type: object

    CatalogAssetChainsInfo:
      description: Information about asset chains.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      required:
        - asset
        - min_time
        - max_time
      type: object

    CatalogMempoolFeeratesInfo:
      description: Information about mempool feerates.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      required:
        - asset
        - min_time
        - max_time
      type: object

    CatalogMiningPoolTipsSummaryInfo:
      description: Information about mining pool tips summary.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      required:
        - asset
        - min_time
        - max_time
      type: object

    CatalogTransactionTrackerInfo:
      description: Information about transaction tracker.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      required:
        - asset
        - min_time
        - max_time
      type: object

    CatalogV2BlockchainAssetsInfo:
      description: Information about blockchain assets.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
        experimental:
          $ref: '#/components/schemas/ExperimentalAsset'
      required:
        - asset
        - min_time
        - max_time
      type: object

    AssetMetricInfo:
      description: Information about availability of metric for an asset.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        frequencies:
          $ref: '#/components/schemas/AssetMetricFrequencies'
      required:
        - metric
        - frequencies

    PairMetricInfo:
      description: Information about availability of metric for an pair.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        frequencies:
          $ref: '#/components/schemas/PairMetricFrequencies'
      required:
        - metric
        - frequencies

    ExchangeAssetMetricInfo:
      description: Information about availability of metric for an exchange-asset.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        frequencies:
          $ref: '#/components/schemas/ExchangeAssetMetricFrequencies'
      required:
        - metric
        - frequencies

    MarketMetricInfo:
      description: Information about availability of metric for a market.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        frequencies:
          $ref: '#/components/schemas/MarketMetricFrequencies'
      required:
        - metric
        - frequencies

    ExchangeMetricInfo:
      description: Information about availability of metric for an exchange.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        frequencies:
          $ref: '#/components/schemas/ExchangeMetricFrequencies'
      required:
        - metric
        - frequencies

    InstitutionMetricInfo:
      description: Information about availability of metric for an institution.
      properties:
        metric:
          $ref: '#/components/schemas/MetricId'
        frequencies:
          $ref: '#/components/schemas/InstitutionMetricFrequencies'
      required:
        - metric
        - frequencies

    MetricId:
      description: Name of the metric.
      type: string

    Description:
      description: Human-friendly description.
      type: string

    IndexId:
      description: Name of the index.
      type: string

    IndexFrequencies:
      description: Frequencies of the index.
      items:
        $ref: '#/components/schemas/CatalogIndexFrequency'
      type: array

    IndexType:
      description: Type of the index.
      type: string

    CatalogIndexFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the index.
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      required:
        - frequency
        - min_time
        - max_time

    Product:
      description: Associated Product of the metric.
      type: string

    Category:
      description: Category of the metric.
      type: string

    Subcategory:
      description: Subcategory of the metric.
      type: string

    Unit:
      description: Unit of the metric.
      type: string

    MetricDataType:
      description: |
        Data Type of the metric. Can be bigint or decimal.<br/>
        "bigint" means that you should expect an integer number in a range from -9223372036854775808 to 9223372036854775807.<br/>
        "decimal" means that a number can have up to 131072 digits before the decimal point and up to 16383 digits after the decimal point.
      type: string

    MetricType:
      description: Type of the metric.
      type: string

    ExperimentalMetric:
      description: If set to true, indicates that metrics collection is under active development - there is a chance of temporary discrepancies in the served dataset.
      type: boolean

    ExperimentalMarket:
      description: If set to true, indicates that market collection is under active development - there is a chance of temporary discrepancies in the served dataset.
      type: boolean

    Reviewable:
      description: Reviewable by human flag.
      type: boolean

    Community:
      description: Indicates an availability of the metric in the community version of the API.
      type: boolean

    AssetsIds:
      description: List of asset names.
      items:
        $ref: '#/components/schemas/AssetId'
      type: array

    ExchangeIds:
      description: List of exchange names.
      items:
        $ref: '#/components/schemas/ExchangeId'
      type: array

    ExchangeAssets:
      description: List of exchange-asset pairs.
      items:
        $ref: '#/components/schemas/ExchangeAsset'
      type: array

    Pairs:
      description: List of pair names.
      items:
        $ref: '#/components/schemas/PairId'
      type: array

    Institutions:
      description: List of institutions.
      items:
        $ref: '#/components/schemas/InstitutionId'
      type: array

    CatalogAssetMetricFrequencies:
      description: List of asset metric frequencies.
      items:
        $ref: '#/components/schemas/CatalogAssetMetricFrequency'
      type: array

    CatalogExchangeMetricFrequencies:
      description: List of exchange metric frequencies.
      items:
        $ref: '#/components/schemas/CatalogExchangeMetricFrequency'
      type: array

    CatalogExchangeAssetMetricFrequencies:
      description: List of exchange-asset metric frequencies.
      items:
        $ref: '#/components/schemas/CatalogExchangeAssetMetricFrequency'
      type: array

    CatalogPairMetricFrequencies:
      description: List of pair metric frequencies.
      items:
        $ref: '#/components/schemas/CatalogPairMetricFrequency'
      type: array

    CatalogInstitutionMetricFrequencies:
      description: List of institution metric frequencies.
      items:
        $ref: '#/components/schemas/CatalogInstitutionMetricFrequency'
      type: array

    DisplayName:
      description: More detailed and human friendly name of a metric.
      type: string

    ReferenceDataAssetsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataAssetInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataExchangesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataExchangeInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataIndexesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataIndexInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataPairsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataPairInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataAssetMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataMetricInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataExchangeMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataMetricInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataExchangeAssetMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataMetricInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataPairMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataMetricInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataInstitutionMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataMetricInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ReferenceDataMarketMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ReferenceDataMetricInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    AssetMetricFrequencies:
      description: List of metric frequencies.
      items:
        $ref: '#/components/schemas/AssetMetricFrequency'
      type: array

    PairMetricFrequencies:
      description: List of metric frequencies.
      items:
        $ref: '#/components/schemas/PairMetricFrequency'
      type: array

    ExchangeMetricFrequencies:
      description: List of metric frequencies.
      items:
        $ref: '#/components/schemas/ExchangeMetricFrequency'
      type: array

    ExchangeAssetMetricFrequencies:
      description: List of metric frequencies.
      items:
        $ref: '#/components/schemas/ExchangeAssetMetricFrequency'
      type: array

    InstitutionMetricFrequencies:
      description: List of metric frequencies.
      items:
        $ref: '#/components/schemas/InstitutionMetricFrequency'
      type: array

    MarketMetricFrequencies:
      description: List of metric frequencies.
      items:
        $ref: '#/components/schemas/MarketMetricFrequency'
      type: array

    CatalogAssetMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the asset metric.
        assets:
          $ref: '#/components/schemas/AssetsIds'
      type: object
      required:
        - frequency
        - assets

    CatalogExchangeMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the exchange metric.
        exchanges:
          $ref: '#/components/schemas/ExchangeIds'
      type: object
      required:
        - frequency
        - exchanges

    CatalogExchangeAssetMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the exchange-asset metric.
        exchange_assets:
          $ref: '#/components/schemas/ExchangeAssets'
      type: object
      required:
        - frequency
        - exchange_assets

    CatalogPairMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the pair metric.
        pairs:
          $ref: '#/components/schemas/Pairs'
      type: object
      required:
        - frequency
        - pairs

    CatalogInstitutionMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the institution metric.
        institutions:
          $ref: '#/components/schemas/Institutions'
      type: object
      required:
        - frequency
        - institutions

    AssetMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the metric.
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
        min_height:
          $ref: '#/components/schemas/MinHeight'
        max_height:
          $ref: '#/components/schemas/MaxHeight'
        min_hash:
          $ref: '#/components/schemas/MinHash'
        max_hash:
          $ref: '#/components/schemas/MaxHash'
        community:
          $ref: '#/components/schemas/Community'
        experimental:
          $ref: '#/components/schemas/ExperimentalAssetMetric'
      type: object
      required:
        - frequency
        - min_time
        - max_time

    PairMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the metric.
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - frequency
        - min_time
        - max_time

    ExchangeAssetMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the metric.
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - frequency
        - min_time
        - max_time

    ExchangeMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the metric.
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - frequency
        - min_time
        - max_time

    InstitutionMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the metric.
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - frequency
        - min_time
        - max_time

    MarketMetricFrequency:
      properties:
        frequency:
          type: string
          description: Frequency of the metric.
        min_time:
          $ref: '#/components/schemas/MinTime'
        max_time:
          $ref: '#/components/schemas/MaxTime'
      type: object
      required:
        - frequency
        - min_time
        - max_time

    CatalogMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMetricInfo'
          type: array
      required:
        - data
      type: object

    CatalogAssetMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogAssetMetricInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2AssetMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2AssetMetricsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogExchangeMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogExchangeMetricInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2ExchangeMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2ExchangeMetricsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogExchangeAssetMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogExchangeAssetMetricInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2ExchangeAssetMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2ExchangeAssetMetricsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogPairMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogPairMetricInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2PairMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2PairMetricsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogInstitutionMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogInstitutionMetricInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2InstitutionMetricsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2InstitutionMetricsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogAssetChainsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogAssetChainsInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2AssetChainsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogAssetChainsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMempoolFeeratesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMempoolFeeratesInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MempoolFeeratesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMempoolFeeratesInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogMiningPoolTipsSummaryResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMiningPoolTipsSummaryInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2MiningPoolTipsSummaryResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogMiningPoolTipsSummaryInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogTransactionTrackerResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogTransactionTrackerInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2TransactionTrackerResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogTransactionTrackerInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogV2BlockchainAccountsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2BlockchainAssetsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogV2BlockchainBalanceUpdatesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2BlockchainAssetsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogV2BlockchainBlocksResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2BlockchainAssetsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    CatalogV2BlockchainTransactionsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2BlockchainAssetsInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    IndexesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/IndexInfo'
          type: array
      required:
        - data
      type: object

    CatalogV2IndexLevelsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CatalogV2IndexInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    IndexInfo:
      description: Information about an index.
      properties:
        index:
          $ref: '#/components/schemas/IndexId'
        full_name:
          $ref: '#/components/schemas/Description'
        description:
          $ref: '#/components/schemas/Description'
        frequencies:
          $ref: '#/components/schemas/IndexFrequencies'
        type:
          $ref: '#/components/schemas/IndexType'
      required:
        - index
        - full_name
        - description
        - frequencies
      type: object

    CatalogV2IndexInfo:
      description: Information about an index.
      properties:
        index:
          $ref: '#/components/schemas/IndexId'
        frequencies:
          $ref: '#/components/schemas/IndexFrequencies'
      required:
        - index
        - frequencies
      type: object

    AssetMetricsResponse:
      description: Time series of asset metrics.
      properties:
        data:
          items:
            type: object
            properties:
              asset:
                $ref: '#/components/schemas/Asset'
              time:
                $ref: '#/components/schemas/Time'
            additionalProperties:
              nullable: true
              description: Metric value. `null` value is only possible when multiple metrics are requested, but not all are calculated for now. Absent metric field is only possible when multiple metrics are requested, but not all are supported for requested assets.
              type: string
            required:
              - asset
              - time
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    StreamingAssetMetric:
      description: Metric values.
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        time:
          $ref: '#/components/schemas/Time'
        cm_sequence_id:
          $ref: '#/components/schemas/cmSequenceId'
      required:
        - asset
        - time
        - cm_sequence_id
      additionalProperties:
        nullable: true
        description: Metric value.
        type: string
      type: object

    NextPageToken:
      description: Token of the next page results for a given request.
      type: string

    NextPageUrl:
      description: URL of the next page results for a given request.
      type: string

    DatabaseTime:
      description: A time when we saved the data in the database. The time is in ISO 8601 date-time format. Always with nanoseconds precision.
      type: string

    OpenInterestExchangeTime:
      description: Time corresponding to open interest data point, according to the exchange. Can be NULL, if exchange doesn't support it.
      type: string

    OptionTickerExchangeTime:
      description: Time corresponding to option ticker data point, according to the exchange. Can be NULL, if exchange doesn't support it.
      type: string

    Time:
      description: The time in ISO 8601 date-time format. Always with nanoseconds precision.
      type: string

    BlockchainJobAssets:
      description: Asset name. Currently only supports a single asset per request.
      items:
        $ref: '#/components/schemas/AssetId'

    BlockchainJobAtHeight:
      description:  >-
        Indicates the block height for which the set of account balances will be returned.<br/>
        Mutually exclusive with `at_slot` and `at_time`.<br/>
        Specifying either `at_height` or `at_slot` / `at_time` parameter is mandatory.<br/>
      type: integer
      format: int64

    BlockchainJobAtSlot:
      description:  >-
        Indicates the slot for which the set of account balances will be returned.<br/>
        Mutually exclusive with `at_height` and `at_time`.<br/>
        Specifying either `at_slot` or `at_height` / `at_time` parameter is mandatory.<br/>
      type: integer
      format: int64

    BlockchainJobAtTime:
      description: >-
        Indicates the point in time for which the set of account balances will be returned.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        UTC timezone by default. `Z` suffix is optional.<br/>
        Mutually exclusive with `at_height` and `at_slot`.<br/>
        Specifying either `at_time` or `at_height` / `at_slot` parameter is mandatory.<br/>
      type: string

    BlockchainJobStartTime:
      description: >-
        Start of the time interval.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `start_height`/`end_height` and `start_slot`/`end_slot`.<br/>
        When specified, `end_time` parameter is mandatory.<br/>
        UTC timezone by default. `Z` suffix is optional.
      type: string

    BlockchainJobEndTime:
      description: >-
        End of the time interval.<br/>
        Multiple formats of ISO 8601 are supported: `2006-01-20T00:00:00Z`, `2006-01-20T00:00:00.000Z`, `2006-01-20T00:00:00.123456Z`, `2006-01-20T00:00:00.123456789Z`, `2006-01-20`, `20060120`.<br/>
        Inclusive by default. Mutually exclusive with `start_height`/`end_height` and `start_slot`/`end_slot`.<br/>
        When specified, `start_time` parameter is mandatory.<br/>
        UTC timezone by default. `Z` suffix is optional.
      type: string

    BlockchainJobStartHeight:
      description: >-
        The start height indicates the beginning block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time`/`end_time` and `start_slot`/`end_slot`.<br/>
        When specified, `end_height` parameter is mandatory.
      type: integer
      format: int64

    BlockchainJobEndHeight:
      description: >-
        The end height indicates the ending block height for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time`/`end_time` and `start_slot`/`end_slot`.<br/>
        When specified, `start_height` parameter is mandatory.
      type: integer
      format: int64

    BlockchainJobStartSlot:
      description: >-
        The start slot indicates the beginning slot for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time`/`end_time` and `start_height`/`end_height`.<br/>
        When specified, `end_slot` parameter is mandatory.
      type: integer
      format: int64

    BlockchainJobEndSlot:
      description: >-
        The end slot indicates the ending slot for the set of data that are returned.<br/>
        Inclusive by default. Mutually exclusive with `start_time`/`end_time` and `start_height`/`end_height`.<br/>
        When specified, `start_slot` parameter is mandatory.
      type: integer
      format: int64

    Pair:
      description: Pair string representation as `<base>-<quote>`.
      type: string

    Institution:
      description: Institution name.
      type: string

    ContractCount:
      description: Number of contracts.
      type: string

    ContractValueUSD:
      description: Contract value in USD.
      type: string

    Index:
      description: Name of the index.
      type: string

    Asset:
      description: Name of the asset.
      type: string

    TradeAmount:
      description: The amount of the base asset traded.
      type: string

    TradePrice:
      description: The price of the base asset quoted in the quote asset that the trade was executed at.
      type: string

    MarkPrice:
      description: The price representing the futures' or option's price calculated by the exchange for risk management purposes.
      type: string

    IndexPrice:
      description: The price index is an aggregate price derived from the major exchanges to be representative of the underlying asset's market consensus price.
      type: string

    SettlementPriceEstimated:
      description: The estimated price of the underlying asset.
      type: string

    LiquidationAmount:
      description: The amount of the base asset liquidated.
      type: string

    LiquidationPrice:
      description: The price of the base asset quoted in the quote asset that the liquidation was executed at.
      type: string

    FundingRateRate:
      description: Rate of a funding rate.
      type: string

    FundingRatePredictedEstimatedRate:
      description: Estimated rate of a predicted funding rate.
      type: string

    FundingRatePeriod:
      description: Period of a funding rate for a given market.
      type: string

    FundingRateInterval:
      description: Interval of a funding rate for a given market.
      type: string

    TradesCoinMetricsId:
      description: ID of a trade (unique per exchange market). We are using exchange reported value if exchange reports a unique numeric trade id. If exchange reports trade id as a string we convert to numeric using Bijective mapping from exchange reported trade id's string. If exchange doesn't report unique ID we transform it using exchange reported data to form a unique value per market.
      type: string

    LiquidationsCoinMetricsId:
      description: ID of a liquidation (unique per exchange market). We are using exchange reported value if exchange reports a unique numeric liquidation id. If exchange reports liquidation id as a string we convert to numeric using Bijective mapping from exchange reported liquidation id's string. If exchange doesn't report unique ID we transform it using exchange reported data to form a unique value per market.
      type: string

    OrderBookAndQuoteCoinMetricsId:
      description: ID of an order book or quote. It can be generated by Coin Metrics or provided by an exchange. If it is generated by Coin Metrics it is unique. If it is generated by exchange we can't guarantee its uniqueness.
      type: string

    cmSequenceId:
      description: The monotonically increasing message number, resets on disconnection.
      type: string

    OrderBookCollectTime:
      description: Time of when the order book was received from the exchange.
      type: string

    TradeCollectTime:
      description: Time of when the trade was received from the exchange.
      type: string

    TradeSide:
      description: The market order side. "buy" means that an ask was removed from the book by an incoming buy order, "sell" means that a bid was removed from the book by an incoming sell order.
      type: string

    TradeBlockHash:
      description: Swap block hash. Available for DeFi markets only.
      type: string

    TradeBlockHeight:
      description: Swap block height. Available for DeFi markets only.
      type: string

    TradeTransactionId:
      description: Swap transaction ID. Available for DeFi markets only.
      type: string

    TradeInitiator:
      description: Swap transaction initiator. Available for DeFi markets only.
      type: string

    TradeSender:
      description: Swap caller. Available for DeFi markets only.
      type: string

    TradeBeneficiary:
      description: Swap output receiver. Available for DeFi markets only.
      type: string

    TradeMarkPrice:
      description: The price representing the futures' or option's price calculated by the exchange for risk management purposes.
      type: string

    TradeIndexPrice:
      description: The price index is an aggregate price derived from the major exchanges to be representative of the underlying asset's market consensus price.
      type: string

    TradeImpliedVolatility:
      description: Implied volatility calculated from the trade price.
      type: string

    TradeLiquidation:
      description: Indicates whether the maker side, taker side, or both sides of the trade is under liquidation.
      type: string

    LiquidationSide:
      description: The market order side. "buy" means that an ask was removed from the book by an incoming buy order, "sell" means that a bid was removed from the book by an incoming sell order.
      type: string

    LiquidationType:
      description: The liquidation type. "trade" means that liquidation was executed, "order" means that the order was placed for the liquidation at the timestamp of the data entry but it wasn't necessarily executed yet.
      type: string

    OrderBookPrice:
      description: The limit price of the order on the order book.
      type: string

    OrderBookSize:
      description: The size of the limit order on the order book in units of the base asset.
      type: string

    QuoteAskPrice:
      description: The limit price of the top ask on the order book. If no asks in the order book, the ask price is skipped.
      type: string

    QuoteAskSize:
      description: The size of the top ask on the order book. If no asks in the order book, the ask size is skipped.
      type: string

    QuoteBidPrice:
      description: The limit price of the top bid on the order book. If no bids in the order book, the bid price is skipped.
      type: string

    QuoteBidSize:
      description: The size of the top bid on the order book. If no bids in the order book, the bid size is skipped.
      type: string

    QuoteSpread:
      description: The difference between the bid price and ask price as a percentage of the mid price.
      type: string

    QuoteMidPrice:
      description: The average of the bid price and ask price.
      type: string

    CandlePriceOpen:
      description: The opening price of the candle.
      type: string

    CandlePriceHigh:
      description: The high price of the candle.
      type: string

    CandlePriceLow:
      description: The low price of the candle.
      type: string

    CandlePriceClose:
      description: The closing price of the candle.
      type: string

    CandleVwap:
      description: The volume-weighted average price of the candle.
      type: string

    CandleVolume:
      description: The volume of the candle in units of the base asset.
      type: string

    CandleUsdVolume:
      description: The volume of the candle in USD.
      type: string

    CandleTradesCount:
      description: The number of trades used for candle calculation.
      type: string

    ImpliedVolatilityTrade:
      description: Implied volatility calculated from last trade price.
      type: string

    ImpliedVolatilityBid:
      description: Implied volatility calculated from bid price.
      type: string

    ImpliedVolatilityAsk:
      description: Implied volatility calculated from ask price.
      type: string

    ImpliedVolatilityMark:
      description: Implied volatility calculated from mark price.
      type: string

    GreeksVega:
      description: The first derivative of the option's price to the volatility of the underlying asset's price.
      type: string

    GreeksTheta:
      description: The first derivative of the option's price to the passage of time.
      type: string

    GreeksRho:
      description: The first derivative of the option's price to the risk free interest rate.
      type: string

    GreeksDelta:
      description: The first derivative of the option's price to the underlying asset's price.
      type: string

    GreeksGamma:
      description: The second derivative of the option's price to the underlying asset's price.
      type: string

    TaxonomyAssetFullName:
      description: The full name of the asset.
      type: string

    TaxonomyVersion:
      description: This field is obsolete and will be removed in future releases in favor to `updated_at_taxonomy_version` field.
      type: string

    UpdatedAtTaxonomyVersion:
      description: Taxonomy version the asset was classified or re-classified at.
      type: string

    TaxonomyVersionStartTime:
      description: Taxonomy version's start time.
      type: string

    TaxonomyVersionEndTime:
      description: Taxonomy version's end time.
      type: string

    TaxonomyAssetClassificationStartTime:
      description: Taxonomy asset's classification start time.
      type: string

    TaxonomyAssetClassificationEndTime:
      description: Taxonomy asset's classification end time.
      type: string

    TaxonomyClassId:
      description: Taxonomy class identifier.
      type: string

    TaxonomyClass:
      description: Taxonomy class name.
      type: string

    TaxonomySectorId:
      description: Taxonomy sector identifier.
      type: string

    TaxonomySector:
      description: Taxonomy sector name.
      type: string

    TaxonomySubsectorId:
      description: Taxonomy subsector identifier.
      type: string

    TaxonomySubsector:
      description: Taxonomy subsector name.
      type: string

    TaxonomyMetadataSubsectors:
      description: Taxonomy metadata subsectors.
      items:
        $ref: '#/components/schemas/TaxonomyMetadataSubsector'
      type: array

    TaxonomyMetadataSubsector:
      description: Taxonomy metadata subsector.
      properties:
        class_id:
          $ref: '#/components/schemas/TaxonomyMetadataSubsectorClassId'
        class:
          $ref: '#/components/schemas/TaxonomyMetadataSubsectorClass'
        sector_id:
          $ref: '#/components/schemas/TaxonomyMetadataSubsectorSectorId'
        sector:
          $ref: '#/components/schemas/TaxonomyMetadataSubsectorSector'
        subsector_id:
          $ref: '#/components/schemas/TaxonomyMetadataSubsectorSubsectorId'
        subsector:
          $ref: '#/components/schemas/TaxonomyMetadataSubsectorSubsector'
      type: object

    TaxonomyMetadataSubsectorClassId:
      description: Taxonomy metadata subsector class identifier.
      type: string

    TaxonomyMetadataSubsectorClass:
      description: Taxonomy metadata subsector class name.
      type: string

    TaxonomyMetadataSubsectorSectorId:
      description: Taxonomy metadata sector identifier.
      type: string

    TaxonomyMetadataSubsectorSector:
      description: Taxonomy metadata sector name.
      type: string

    TaxonomyMetadataSubsectorSubsectorId:
      description: Taxonomy metadata subsector identifier.
      type: string

    TaxonomyMetadataSubsectorSubsector:
      description: Taxonomy metadata subsector name.
      type: string

    OrderBookType:
      description: Type of the order book.
      enum:
        - snapshot
        - update
      type: string

    BookEntry:
      properties:
        price:
          $ref: '#/components/schemas/OrderBookPrice'
        size:
          $ref: '#/components/schemas/OrderBookSize'
      required:
        - price
        - size
      type: object

    OrderBookAsks:
      description: The ask orders on the order book.
      items:
        $ref: '#/components/schemas/BookEntry'
      type: array

    OrderBookBids:
      description: The bids orders on the order book.
      items:
        $ref: '#/components/schemas/BookEntry'
      type: array

    MarketTrade:
      description: Information about trade.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        coin_metrics_id:
          $ref: '#/components/schemas/TradesCoinMetricsId'
        amount:
          $ref: '#/components/schemas/TradeAmount'
        price:
          $ref: '#/components/schemas/TradePrice'
        side:
          $ref: '#/components/schemas/TradeSide'
        block_hash:
          $ref: '#/components/schemas/TradeBlockHash'
        block_height:
          $ref: '#/components/schemas/TradeBlockHeight'
        txid:
          $ref: '#/components/schemas/TradeTransactionId'
        initiator:
          $ref: '#/components/schemas/TradeInitiator'
        sender:
          $ref: '#/components/schemas/TradeSender'
        beneficiary:
          $ref: '#/components/schemas/TradeBeneficiary'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
        mark_price:
          $ref: '#/components/schemas/TradeMarkPrice'
        index_price:
          $ref: '#/components/schemas/TradeIndexPrice'
        iv_trade:
          $ref: '#/components/schemas/TradeImpliedVolatility'
        liquidation:
          $ref: '#/components/schemas/TradeLiquidation'
      required:
        - market
        - time
        - coin_metrics_id
        - amount
        - price
        - database_time
      type: object

    MarketOpenInterest:
      description: Information about open interest.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        contract_count:
          $ref: '#/components/schemas/ContractCount'
        value_usd:
          $ref: '#/components/schemas/ContractValueUSD'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
        exchange_time:
          $ref: '#/components/schemas/OpenInterestExchangeTime'
      required:
        - market
        - time
        - contract_count
        - value_usd
        - database_time
      type: object

    MarketLiquidation:
      description: Information about liquidation.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        coin_metrics_id:
          $ref: '#/components/schemas/LiquidationsCoinMetricsId'
        amount:
          $ref: '#/components/schemas/LiquidationAmount'
        price:
          $ref: '#/components/schemas/LiquidationPrice'
        side:
          $ref: '#/components/schemas/LiquidationSide'
        type:
          $ref: '#/components/schemas/LiquidationType'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
      required:
        - market
        - time
        - coin_metrics_id
        - amount
        - price
        - type
        - database_time
      type: object

    MarketFundingRate:
      description: Information about funding rate.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        rate:
          $ref: '#/components/schemas/FundingRateRate'
        period:
          $ref: '#/components/schemas/FundingRatePeriod'
        interval:
          $ref: '#/components/schemas/FundingRateInterval'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
      required:
        - market
        - time
        - database_time
      type: object

    MarketFundingRatePredicted:
      description: Information about predicted funding rate.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        rate_predicted:
          $ref: '#/components/schemas/FundingRatePredictedEstimatedRate'
        rate_time:
          $ref: '#/components/schemas/Time'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
      required:
        - market
        - time
        - rate_predicted
        - database_time
      type: object

    # doesn't include database_time
    StreamingMarketTrade:
      description: Market trade WebSocket message.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        coin_metrics_id:
          $ref: '#/components/schemas/TradesCoinMetricsId'
        amount:
          $ref: '#/components/schemas/TradeAmount'
        price:
          $ref: '#/components/schemas/TradePrice'
        side:
          $ref: '#/components/schemas/TradeSide'
        cm_sequence_id:
          $ref: '#/components/schemas/cmSequenceId'
        collect_time:
          $ref: '#/components/schemas/TradeCollectTime'
        block_hash:
          $ref: '#/components/schemas/TradeBlockHash'
        block_height:
          $ref: '#/components/schemas/TradeBlockHeight'
        txid:
          $ref: '#/components/schemas/TradeTransactionId'
        initiator:
          $ref: '#/components/schemas/TradeInitiator'
        sender:
          $ref: '#/components/schemas/TradeSender'
        beneficiary:
          $ref: '#/components/schemas/TradeBeneficiary'
        mark_price:
          $ref: '#/components/schemas/TradeMarkPrice'
        index_price:
          $ref: '#/components/schemas/TradeIndexPrice'
        iv_trade:
          $ref: '#/components/schemas/TradeImpliedVolatility'
        liquidation:
          $ref: '#/components/schemas/TradeLiquidation'
      required:
        - market
        - time
        - coin_metrics_id
        - amount
        - price
        - collect_time
        - cm_sequence_id
      type: object

    # doesn't include database_time
    StreamingMarketLiquidation:
      description: Market liquidation WebSocket message.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        coin_metrics_id:
          $ref: '#/components/schemas/LiquidationsCoinMetricsId'
        amount:
          $ref: '#/components/schemas/LiquidationAmount'
        price:
          $ref: '#/components/schemas/LiquidationPrice'
        side:
          $ref: '#/components/schemas/LiquidationSide'
        type:
          $ref: '#/components/schemas/LiquidationType'
        cm_sequence_id:
          $ref: '#/components/schemas/cmSequenceId'
      required:
        - market
        - time
        - coin_metrics_id
        - amount
        - price
        - type
        - cm_sequence_id
      type: object

    StreamingMarketOpenInterest:
      description: Market open interest WebSocket message.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        contract_count:
          $ref: '#/components/schemas/ContractCount'
        value_usd:
          $ref: '#/components/schemas/ContractValueUSD'
        exchange_time:
          $ref: '#/components/schemas/OpenInterestExchangeTime'
        cm_sequence_id:
          $ref: '#/components/schemas/cmSequenceId'
      required:
        - market
        - time
        - contract_count
        - value_usd
        - cm_sequence_id
      type: object

    MarketTradesDataArray:
      description: Time series of market trades.
      items:
        $ref: '#/components/schemas/MarketTrade'
      type: array

    MarketOpenInterestDataArray:
      description: Time series of market open interest.
      items:
        $ref: '#/components/schemas/MarketOpenInterest'
      type: array

    MarketLiquidationsDataArray:
      description: Time series of market liquidations.
      items:
        $ref: '#/components/schemas/MarketLiquidation'
      type: array

    MarketFundingRatesDataArray:
      description: Time series of market funding rates.
      items:
        $ref: '#/components/schemas/MarketFundingRate'
      type: array

    MarketFundingRatesPredictedDataArray:
      description: Time series of predicted market funding rates.
      items:
        $ref: '#/components/schemas/MarketFundingRatePredicted'
      type: array

    MarketOrderBook:
      description: Information about order book.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        coin_metrics_id:
          $ref: '#/components/schemas/OrderBookAndQuoteCoinMetricsId'
        asks:
          $ref: '#/components/schemas/OrderBookAsks'
        bids:
          $ref: '#/components/schemas/OrderBookBids'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
      type: object
      required:
        - market
        - time
        - coin_metrics_id
        - asks
        - bids
        - database_time

    StreamingMarketOrderbook:
      allOf:
        - type: object
          properties:
            market:
              $ref: '#/components/schemas/MarketId'
            time:
              $ref: '#/components/schemas/Time'
            coin_metrics_id:
              $ref: '#/components/schemas/OrderBookAndQuoteCoinMetricsId'
            asks:
              $ref: '#/components/schemas/OrderBookAsks'
            bids:
              $ref: '#/components/schemas/OrderBookBids'
            type:
              $ref: '#/components/schemas/OrderBookType'
            collect_time:
              $ref: '#/components/schemas/OrderBookCollectTime'
            cm_sequence_id:
              $ref: '#/components/schemas/cmSequenceId'
          required:
            - market
            - time
            - coin_metrics_id
            - asks
            - bids
            - type
            - collect_time
            - cm_sequence_id

    MarketQuote:
      description: Information about market quote.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        coin_metrics_id:
          $ref: '#/components/schemas/OrderBookAndQuoteCoinMetricsId'
        ask_price:
          $ref: '#/components/schemas/QuoteAskPrice'
        ask_size:
          $ref: '#/components/schemas/QuoteAskSize'
        bid_price:
          $ref: '#/components/schemas/QuoteBidPrice'
        bid_size:
          $ref: '#/components/schemas/QuoteBidSize'
      type: object
      required:
        - market
        - time
        - coin_metrics_id

    StreamingMarketQuote:
      allOf:
        - $ref: '#/components/schemas/MarketQuote'
        - type: object
          properties:
            cm_sequence_id:
              $ref: '#/components/schemas/cmSequenceId'
          required:
            - cm_sequence_id

    AggregatedSpreadQuote:
      description: Information about aggregated spread quote.
      properties:
        pair:
          $ref: '#/components/schemas/Pair'
        time:
          $ref: '#/components/schemas/Time'
        ask_price:
          $ref: '#/components/schemas/QuoteAskPrice'
        ask_size:
          $ref: '#/components/schemas/QuoteAskSize'
        bid_price:
          $ref: '#/components/schemas/QuoteBidPrice'
        bid_size:
          $ref: '#/components/schemas/QuoteBidSize'
        mid_price:
          $ref: '#/components/schemas/QuoteMidPrice'
        spread:
          $ref: '#/components/schemas/QuoteSpread'
      type: object
      required:
        - pair
        - time

    StreamingAggregatedSpreadQuote:
      allOf:
        - $ref: '#/components/schemas/AggregatedSpreadQuote'
        - type: object
          properties:
            cm_sequence_id:
              $ref: '#/components/schemas/cmSequenceId'
          required:
            - cm_sequence_id

    MarketCandle:
      description: Information about market candle.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        price_open:
          $ref: '#/components/schemas/CandlePriceOpen'
        price_close:
          $ref: '#/components/schemas/CandlePriceClose'
        price_high:
          $ref: '#/components/schemas/CandlePriceHigh'
        price_low:
          $ref: '#/components/schemas/CandlePriceLow'
        vwap:
          $ref: '#/components/schemas/CandleVwap'
        volume:
          $ref: '#/components/schemas/CandleVolume'
        candle_usd_volume:
          $ref: '#/components/schemas/CandleUsdVolume'
        candle_trades_count:
          $ref: '#/components/schemas/CandleTradesCount'
      type: object
      required:
        - market
        - time
        - price_open
        - price_close
        - price_high
        - price_low
        - vwap
        - volume
        - candle_usd_volume
        - candle_trades_count

    StreamingMarketCandle:
      allOf:
        - $ref: '#/components/schemas/MarketCandle'
        - type: object
          properties:
            cm_sequence_id:
              $ref: '#/components/schemas/cmSequenceId'
          required:
            - cm_sequence_id

    PairCandle:
      description: Information about pair candle.
      properties:
        pair:
          $ref: '#/components/schemas/PairId'
        time:
          $ref: '#/components/schemas/Time'
        price_open:
          $ref: '#/components/schemas/CandlePriceOpen'
        price_close:
          $ref: '#/components/schemas/CandlePriceClose'
        price_high:
          $ref: '#/components/schemas/CandlePriceHigh'
        price_low:
          $ref: '#/components/schemas/CandlePriceLow'
      type: object
      required:
        - pair
        - time
        - price_open
        - price_close
        - price_high
        - price_low
        - vwap
        - volume
        - candle_usd_volume
        - candle_trades_count

    IndexCandle:
      description: Information about index candle.
      properties:
        index:
          $ref: '#/components/schemas/IndexId'
        time:
          $ref: '#/components/schemas/Time'
        price_open:
          $ref: '#/components/schemas/CandlePriceOpen'
        price_close:
          $ref: '#/components/schemas/CandlePriceClose'
        price_high:
          $ref: '#/components/schemas/CandlePriceHigh'
        price_low:
          $ref: '#/components/schemas/CandlePriceLow'
        candle_trades_count:
          $ref: '#/components/schemas/CandleTradesCount'
      type: object
      required:
        - index
        - time
        - price_open
        - price_close
        - price_high
        - price_low
        - candle_trades_count

    MarketContractPrices:
      description: Information about market contract prices.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        mark_price:
          $ref: '#/components/schemas/MarkPrice'
        index_price:
          $ref: '#/components/schemas/IndexPrice'
        settlement_price_estimated:
          $ref: '#/components/schemas/SettlementPriceEstimated'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
        exchange_time:
          $ref: '#/components/schemas/OptionTickerExchangeTime'
      type: object
      required:
        - market
        - time
        - database_time

    MarketImpliedVolatility:
      description: Information about market implied volatility.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        iv_trade:
          $ref: '#/components/schemas/ImpliedVolatilityTrade'
        iv_bid:
          $ref: '#/components/schemas/ImpliedVolatilityBid'
        iv_ask:
          $ref: '#/components/schemas/ImpliedVolatilityAsk'
        iv_mark:
          $ref: '#/components/schemas/ImpliedVolatilityMark'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
        exchange_time:
          $ref: '#/components/schemas/OptionTickerExchangeTime'
      type: object
      required:
        - market
        - time
        - database_time

    MarketGreeks:
      description: Information about market greeks.
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        time:
          $ref: '#/components/schemas/Time'
        vega:
          $ref: '#/components/schemas/GreeksVega'
        theta:
          $ref: '#/components/schemas/GreeksTheta'
        rho:
          $ref: '#/components/schemas/GreeksRho'
        delta:
          $ref: '#/components/schemas/GreeksDelta'
        gamma:
          $ref: '#/components/schemas/GreeksGamma'
        database_time:
          $ref: '#/components/schemas/DatabaseTime'
        exchange_time:
          $ref: '#/components/schemas/OptionTickerExchangeTime'
      type: object
      required:
        - market
        - time
        - database_time

    MarketTradesResponse:
      properties:
        data:
          $ref: '#/components/schemas/MarketTradesDataArray'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketOpenInterestResponse:
      properties:
        data:
          $ref: '#/components/schemas/MarketOpenInterestDataArray'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketLiquidationsResponse:
      properties:
        data:
          $ref: '#/components/schemas/MarketLiquidationsDataArray'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketFundingRatesResponse:
      properties:
        data:
          $ref: '#/components/schemas/MarketFundingRatesDataArray'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketFundingRatesPredictedResponse:
      properties:
        data:
          $ref: '#/components/schemas/MarketFundingRatesPredictedDataArray'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketOrderbookResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MarketOrderBook'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketQuotesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MarketQuote'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketCandlesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MarketCandle'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    PairCandlesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PairCandle'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    IndexCandlesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/IndexCandle'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketContractPricesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MarketContractPrices'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketImpliedVolatilityResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MarketImpliedVolatility'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketGreeksResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MarketGreeks'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    PairMetricsResponse:
      description: Time series of pair metrics.
      properties:
        data:
          items:
            type: object
            properties:
              pair:
                $ref: '#/components/schemas/Pair'
              time:
                $ref: '#/components/schemas/Time'
            additionalProperties:
              nullable: true
              description: Metric value. `null` value is only possible when multiple metrics are requested, but not all are calculated for now. Absent metric field is only possible when multiple metrics are requested, but not all are supported for requested asset pairs.
              type: string
            required:
              - pair
              - time
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ExchangeMetricsResponse:
      description: Time series of Exchange metrics.
      properties:
        data:
          items:
            type: object
            properties:
              exchange:
                $ref: '#/components/schemas/Exchange'
              time:
                $ref: '#/components/schemas/Time'
            additionalProperties:
              nullable: true
              description: Metric value. `null` value is only possible when multiple metrics are requested, but not all are calculated for now. Absent metric field is only possible when multiple metrics are requested, but not all are supported for requested exchanges.
              type: string
            required:
              - exchange
              - time
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    ExchangeAssetMetricsResponse:
      description: Time series of exchange metrics.
      properties:
        data:
          items:
            type: object
            properties:
              excahnge_asset:
                $ref: '#/components/schemas/ExchangeAsset'
              time:
                $ref: '#/components/schemas/Time'
            additionalProperties:
              nullable: true
              description: Metric value. `null` value is only possible when multiple metrics are requested, but not all are calculated for now. Absent metric field is only possible when multiple metrics are requested, but not all are supported for requested exchange-asset pairs.
              type: string
            required:
              - excahnge_asset
              - time
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MarketMetricsResponse:
      description: Time series of market metrics.
      properties:
        data:
          items:
            type: object
            properties:
              market:
                $ref: '#/components/schemas/Market'
              time:
                $ref: '#/components/schemas/Time'
            additionalProperties:
              nullable: true
              description: Metric value. `null` value is only possible when multiple metrics are requested, but not all are calculated for now. Absent metric field is only possible when multiple metrics are requested, but not all are supported for requested market.
              type: string
            required:
              - market
              - time
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    InstitutionMetricsResponse:
      description: Time series of institution metrics.
      properties:
        data:
          items:
            type: object
            properties:
              institution:
                $ref: '#/components/schemas/Institution'
              time:
                $ref: '#/components/schemas/Time'
            additionalProperties:
              nullable: true
              description: Metric value. `null` value is only possible when multiple metrics are requested, but not all are calculated for now. Absent metric field is only possible when multiple metrics are requested, but not all are supported for requested institutions.
              type: string
            required:
              - institution
              - time
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    IndexLevelValue:
      description: The value of the index.
      type: string

    IndexWeight:
      description: The weight of the constituent.
      type: string

    VerificationTime:
      description: The verification time of the index.
      type: string

    VerificationIndexLevelValue:
      description: The verification value of the index.
      type: string

    Signature:
      description: The signature information.
      type: string

    Verification:
      description: Information about verification.
      properties:
        timestamp:
          $ref: '#/components/schemas/VerificationTime'
        level:
          $ref: '#/components/schemas/VerificationIndexLevelValue'
        signature:
          $ref: '#/components/schemas/Signature'
      type: object
      required:
        - signature

    IndexLevel:
      description: Information about index level.
      properties:
        index:
          $ref: '#/components/schemas/Index'
        time:
          $ref: '#/components/schemas/Time'
        level:
          $ref: '#/components/schemas/IndexLevelValue'
        verification:
          $ref: '#/components/schemas/Verification'
      type: object
      required:
        - index
        - time
        - level

    IndexConstituents:
      description: Information about index constituents.
      properties:
        index:
          $ref: '#/components/schemas/Index'
        time:
          $ref: '#/components/schemas/Time'
        constituents:
          items:
            properties:
              asset:
                $ref: '#/components/schemas/AssetId'
              weight:
                $ref: '#/components/schemas/IndexWeight'
            type: object
          type: array
      type: object
      required:
        - index
        - time
        - constituents

    IndexLevelsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/IndexLevel'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    StreamingIndexLevel:
      allOf:
        - $ref: '#/components/schemas/IndexLevel'
        - type: object
          properties:
            cm_sequence_id:
              $ref: '#/components/schemas/cmSequenceId'
          required:
            - cm_sequence_id

    IndexConstituentsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/IndexConstituents'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    TipsCount:
      description: The count of unique elements in the `tips` array.
      type: string

    BlockHashesAtTip:
      description: The count of unique hashes at the chain tip.
      type: string

    PoolCount:
      description: The count of unique pools mining on the tip.
      type: string

    MiningPoolTipsSummary:
      description: Information about the mining pool tips summary.
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        time:
          $ref: '#/components/schemas/Time'
        tips_count:
          $ref: '#/components/schemas/TipsCount'
        block_hashes_at_tip:
          $ref: '#/components/schemas/BlockHashesAtTip'
        tips:
          description: All last tips that we saw in all mining pools that were active during the past hour.
          items:
            properties:
              last_time:
                $ref: '#/components/schemas/Time'
              height:
                $ref: '#/components/schemas/BlockchainBlockHeight'
              hash:
                $ref: '#/components/schemas/BlockchainBlockHash'
              pool_count:
                $ref: '#/components/schemas/PoolCount'
            required:
              - last_time
              - height
              - hash
              - pool_count
            type: object
          type: array
      type: object
      required:
        - asset
        - time
        - tips_count
        - block_hashes_at_tip
        - tips

    MiningPoolTipsSummaryResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/MiningPoolTipsSummary'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    AssetChainBlock:
      properties:
        time:
          $ref: '#/components/schemas/Time'
        hash:
          $ref: '#/components/schemas/BlockchainBlockHash'
        height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
      required:
        - time
        - hash
        - height

    AssetChain:
      description: Contains the chain fragments starting from the block which is a common ancestor for other blocks. If there is a single active chain - only the chain tip is included.<br/>
      items:
        $ref: "#/components/schemas/AssetChainBlock"
      type: array

    AssetChains:
      description: Information about the asset chains.
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        time:
          $ref: '#/components/schemas/Time'
        chains_count:
          $ref: '#/components/schemas/ChainsCount'
        blocks_count_at_tip:
          $ref: '#/components/schemas/BlocksCountAtTip'
        reorg:
          $ref: '#/components/schemas/Reorg'
        reorg_depth:
          $ref: '#/components/schemas/ReorgDepth'
        chains:
          description: All the chains that were active in the blockchain during the time that's enough to produce the amount of blocks considered as an industry standard number of confirmations.
          items:
            $ref: "#/components/schemas/AssetChain"
          type: array
      type: object
      required:
        - asset
        - time
        - chains_count
        - blocks_count_at_tip
        - chains

    AssetChainsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AssetChains'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    TaxonomyAssetsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TaxonomyAsset'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    TaxonomyAsset:
      description: Information about taxonomy of an asset.
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        full_name:
          $ref: '#/components/schemas/TaxonomyAssetFullName'
        taxonomy_version:
          $ref: '#/components/schemas/TaxonomyVersion'
        updated_at_taxonomy_version:
          $ref: '#/components/schemas/UpdatedAtTaxonomyVersion'
        classification_start_time:
          $ref: '#/components/schemas/TaxonomyAssetClassificationStartTime'
        classification_end_time:
          $ref: '#/components/schemas/TaxonomyAssetClassificationEndTime'
        class_id:
          $ref: '#/components/schemas/TaxonomyClassId'
        class:
          $ref: '#/components/schemas/TaxonomyClass'
        sector_id:
          $ref: '#/components/schemas/TaxonomySectorId'
        sector:
          $ref: '#/components/schemas/TaxonomySector'
        subsector_id:
          $ref: '#/components/schemas/TaxonomySubsectorId'
        subsector:
          $ref: '#/components/schemas/TaxonomySubsector'
      type: object
      required:
        - asset
        - full_name
        - updated_at_taxonomy_version
        - taxonomy_version
        - classification_start_time
        - class_id
        - class
        - sector_id
        - sector
        - subsector_id
        - subsector

    TaxonomyMetadataAssetsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TaxonomyMetadataAsset'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    TaxonomyMetadataAsset:
      description: Information about taxonomy metadata of the assets.
      properties:
        taxonomy_version:
          $ref: '#/components/schemas/TaxonomyVersion'
        taxonomy_start_time:
          $ref: '#/components/schemas/TaxonomyVersionStartTime'
        taxonomy_end_time:
          $ref: '#/components/schemas/TaxonomyVersionEndTime'
        subsectors:
          $ref: '#/components/schemas/TaxonomyMetadataSubsectors'
      type: object
      required:
        - taxonomy_version
        - taxonomy_start_time
        - subsectors

    AssetProfilesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AssetProfileInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    AssetProfileInfo:
      description: Asset profile data.
      properties:
        asset:
          $ref: '#/components/schemas/AssetId'
        full_name:
          $ref: '#/components/schemas/AssetProfileFullName'
        description:
          $ref: '#/components/schemas/AssetProfileDescription'
        overview:
          $ref: '#/components/schemas/AssetProfileOverview'
        token_purpose:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileTokenPurpose'
          description: Purpose of the asset.
        project_team:
          $ref: '#/components/schemas/AssetProfileProjectTeam'
        foundation:
          $ref: '#/components/schemas/AssetProfileFoundation'
        website:
          $ref: '#/components/schemas/AssetProfileWebsiteUrl'
        whitepaper_url:
          $ref: '#/components/schemas/AssetProfileWhitepaperUrl'
        creation_date:
          $ref: '#/components/schemas/AssetProfileCreationDate'
        token_generation_event_supply:
          $ref: '#/components/schemas/AssetProfileTokenGenerationEventSupply'
        supply_cap:
          $ref: '#/components/schemas/AssetProfileSupplyCap'
        initial_supply_token_distribution:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileInitialSupplyProjectDistribution'
          description: Initial supply distribution.
        vesting_schedule:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileVestingSchedule'
          description: Asset's vesting schedule.
        new_token_issuance_recipient:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileNewTokenIssuanceRecipient'
          description: Token issuance recipient.
        issuing_networks:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileIssuingNetwork'
          description: Issuing network.
        bridged_networks:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileBridgedNetwork'
          description: Bridged network.
        issuance_schedule_changes:
          $ref: '#/components/schemas/AssetProfileIssuanceScheduleChanges'
        significant_historical_changes:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileSignificantHistoricalChanges'
          description: Significant historical changes.
        upgrade_history:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileUpgradeHistory'
          description: Asset's upgrade history.
        blog_updates:
            $ref: '#/components/schemas/AssetProfileBlogUpdates'
        project_github_repository:
          type: array
          items:
            $ref: '#/components/schemas/ProfileRepository'
          description: Asset's repository.
        asset_regulation:
          $ref: '#/components/schemas/AssetProfileAssetRegulation'
        asset_regulated_products:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileAssetRegulatedProduct'
          description: Asset's regulated product.
        etp_custodians:
          type: array
          items:
            $ref: '#/components/schemas/AssetProfileEtpCustodian'
          description: Asset's ETP custodian.
      type: object
      required:
        - asset
        - full_name
        - description
        - overview
        - creation_date

    NetworkProfilesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/NetworkProfileInfo'
          type: array
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    NetworkProfileInfo:
      description: Network profile data.
      properties:
        full_name:
          $ref: '#/components/schemas/NetworkProfileFullName'
        network:
          $ref: '#/components/schemas/NetworkProfileNetwork'
        overview:
          $ref: '#/components/schemas/NetworkProfileOverview'
        consensus_mechanism:
          $ref: '#/components/schemas/NetworkProfileConsensusMechanism'
        hashing_algorithm:
          $ref: '#/components/schemas/NetworkProfileHashingAlgorithm'
        transaction_finality:
          $ref: '#/components/schemas/NetworkProfileTransactionFinality'
        available_clients:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProfileAvailableClient'
          description: Network available client.
        smart_contract_deployment:
          $ref: '#/components/schemas/NetworkProfileSmartContractDeployment'
        foundation:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProfileFoundation'
          description: Network foundation.
        founding_team_identity:
          $ref: '#/components/schemas/NetworkProfileFoundingTeamIdentity'
        repository:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProfileRepository'
          description: Network profile repository.
        transaction_visibility:
          $ref: '#/components/schemas/NetworkProfileTransactionVisibility'
        native_fee_token:
          $ref: '#/components/schemas/NetworkProfileNativeFeeToken'
        significant_historical_changes:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProfileSignificantHistoricalChange'
          description: Network significant historical changes.
        upgrade_history:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProfileUpgradeHistory'
          description: Network upgrade history.
        rollup_info:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProfileRollupInfo'
          description: Network rollup information.
        modular_or_monolithic:
          $ref: '#/components/schemas/NetworkProfileModularOrMonolithic'
        network_scaling_solution:
          $ref: '#/components/schemas/NetworkProfileNetworkScalingSolution'
        type_of_network:
          $ref: '#/components/schemas/NetworkProfileTypeOfNetwork'
        chain_explorers:
          type: array
          items:
            $ref: '#/components/schemas/NetworkProfileProfileChainExplorer'
          description: Network's chain explorer.
      type: object
      required:
        - full_name
        - network
        - modular_or_monolithic

    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/ErrorObject'
      required:
        - error
      type: object

    ErrorObject:
      properties:
        type:
          description: Error type string. Can be used for error identification.
          type: string
        message:
          description: Human-friendly error description. Can be amended without prior notification. Do not use for error identification in your code.
          type: string
      required:
        - type
        - description
      type: object

    WarningObject:
      properties:
        type:
          description: Warning type string. Can be used for warning identification.
          type: string
        message:
          description: Human-friendly warning description. Do not use for warning identification in your code.
          type: string
      required:
        - type
        - message
      type: object

    BlockchainBlocksResponseV2:
      description: Blockchain blocks response.
      properties:
        data:
          items:
            $ref: "#/components/schemas/BlockchainBlockInfoV2"
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
        warning:
          $ref: '#/components/schemas/WarningObject'
      required:
        - data
      type: object

    ChainsCount:
      description: Count of all the chains that were active in the blockchain during the past hour.
      type: string

    BlocksCountAtTip:
      description: Count of the blocks on the maximum chain height.
      type: string

    Reorg:
      description: Indicates if the last appended block triggered the chain reorganization.
      type: string

    ReorgDepth:
      description: A number of consecutive blocks that were disconnected from the common ancestor block of the previous and current longest active chains during the chain reorganization.
      type: string

    BlockchainBlockHash:
      description: Hash of the block.
      type: string

    BlockchainBlockHeight:
      description: Height of the block.
      type: string

    BlockchainBlockSlot:
      description: Slot of the block.
      type: string

    BlockchainBlockNonce:
      description: Nonce of the block, hex-encoded.
      type: string

    BlockchainBlockExtraData:
      description: Extra data of the block, hex-encoded.
      type: string

    BlockchainBlockVersion:
      description: Version of the block.
      type: string

    BlockchainBlockDifficulty:
      description: Difficulty of the block.
      type: string

    BlockchainBlockPhysicalSize:
      description: Physical size of the block, bytes.
      type: string

    BlockchainBlockConsensusSize:
      description: Consensus size of the block.
      type: string


    BlockchainTransactionPhysicalSize:
      description: Physical size of the transaction, bytes.
      type: string

    BlockchainTransactionConsensusSize:
      description: Consensus size of the transaction.
      type: string

    BlockchainTransactionVersion:
      description: Version of the transaction.
      type: string

    BlockchainTransactionFee:
      description: Fee of the transaction.
      type: string

    BlockchainTransactionFeerate:
      description: Feerate of the transaction.
      type: string

    BlockchainMempoolFeerate:
      description: Aggregate function result over the feerate values of all the mempool transactions.
      type: string

    BlockchainBlockConsensusSizeLimit:
      description: Consensus size limit of the block.
      type: string

    BlockchainBalanceUpdateCredit:
      description: Boolean indicating whether the update is a credit or a debit of the account.
      type: boolean

    BlockchainTotalReceived:
      description: Total amount received.
      type: string

    BlockchainTotalSent:
      description: Total amount sent.
      type: string

    BlockchainBalanceUpdateSubAccount:
      properties:
        sub_account:
          $ref: '#/components/schemas/BlockchainSubAccount'
        previous_balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
        new_balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
        n_debits:
          $ref: '#/components/schemas/BlockchainNumberOfDebits'
        n_credits:
          $ref: '#/components/schemas/BlockchainNumberOfCredits'
        previous_credit_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        previous_debit_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        previous_chain_sequence_number:
          $ref: '#/components/schemas/BlockchainTransactionSequenceNumber'
        total_received:
          $ref: '#/components/schemas/BlockchainTotalReceived'
        total_sent:
          $ref: '#/components/schemas/BlockchainTotalSent'
        creation_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
      required:
        - chain_sequence_number
        - account
        - account_creation_height
        - change
        - transaction_sequence_number
        - previous_n_debits
        - previous_n_credits

    BlockchainBlockInfo:
      properties:
        block_hash:
          $ref: '#/components/schemas/BlockchainBlockHash'
        parent_block_hash:
          $ref: '#/components/schemas/BlockchainBlockHash'
        height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        consensus_time:
          $ref: '#/components/schemas/Time'
        miner_time:
          $ref: '#/components/schemas/Time'
        n_transactions:
          $ref: '#/components/schemas/BlockchainNumberOfTransactions'
        n_balance_updates:
          $ref: '#/components/schemas/BlockchainNumberOfBalanceUpdates'
        difficulty:
          $ref: '#/components/schemas/BlockchainBlockDifficulty'
        physical_size:
          $ref: '#/components/schemas/BlockchainBlockPhysicalSize'
        consensus_size:
          $ref: '#/components/schemas/BlockchainBlockConsensusSize'
        consensus_size_limit:
          $ref: '#/components/schemas/BlockchainBlockConsensusSizeLimit'
      required:
        - block_hash
        - height
        - consensus_time
        - miner_time
        - n_transactions
        - n_balance_updates

    BlockchainBlockInfoV2:
      properties:
        block_hash:
          $ref: '#/components/schemas/BlockchainBlockHash'
        parent_block_hash:
          $ref: '#/components/schemas/BlockchainBlockHash'
        height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        consensus_time:
          $ref: '#/components/schemas/Time'
        miner_time:
          $ref: '#/components/schemas/Time'
        nonce:
          $ref: '#/components/schemas/BlockchainBlockNonce'
        extra_data:
          $ref: '#/components/schemas/BlockchainBlockExtraData'
        n_transactions:
          $ref: '#/components/schemas/BlockchainNumberOfTransactions'
        n_balance_updates:
          $ref: '#/components/schemas/BlockchainNumberOfBalanceUpdates'
        version:
          $ref: '#/components/schemas/BlockchainBlockVersion'
        difficulty:
          $ref: '#/components/schemas/BlockchainBlockDifficulty'
        physical_size:
          $ref: '#/components/schemas/BlockchainBlockPhysicalSize'
        consensus_size:
          $ref: '#/components/schemas/BlockchainBlockConsensusSize'
        consensus_size_limit:
          $ref: '#/components/schemas/BlockchainBlockConsensusSizeLimit'
        stale:
          $ref: '#/components/schemas/BlockchainStaleBlock'
      required:
        - block_hash
        - height
        - consensus_time
        - export_time
        - miner_time
        - n_transactions
        - n_balance_updates

    BlockchainFullTransactionsV2:
      type: array
      items:
        $ref: "#/components/schemas/BlockchainFullTransactionResponseV2"

    BlockchainBalanceUpdatesV2:
      type: array
      items:
        $ref: "#/components/schemas/BlockchainBalanceUpdateV2"

    BlockchainBalanceUpdate:
      allOf:
        - $ref: "#/components/schemas/BlockchainTransactionBalanceUpdate"
        - type: object
          properties:
            block_hash:
              $ref: '#/components/schemas/BlockchainBlockHash'
            height:
              $ref: '#/components/schemas/BlockchainBlockHeight'
            consensus_time:
              $ref: '#/components/schemas/Time'
            transaction_hash:
              $ref: '#/components/schemas/BlockchainTransactionHash'
          required:
            - block_hash
            - height
            - consensus_time

    BlockchainBalanceUpdateV2:
      allOf:
        - $ref: "#/components/schemas/BlockchainTransactionBalanceUpdateV2"
        - type: object
          properties:
            block_hash:
              $ref: '#/components/schemas/BlockchainBlockHash'
            height:
              $ref: '#/components/schemas/BlockchainBlockHeight'
            consensus_time:
              $ref: '#/components/schemas/Time'
            txid:
              $ref: '#/components/schemas/BlockchainTransactionId'
            credit:
              $ref: '#/components/schemas/BlockchainBalanceUpdateCredit'
            total_received:
              $ref: '#/components/schemas/BlockchainTotalReceived'
            total_sent:
              $ref: '#/components/schemas/BlockchainTotalSent'
          required:
            - block_hash
            - height
            - consensus_time
            - credit
            - total_received
            - total_sent

    BlockchainTransactionBalanceUpdates:
      type: array
      items:
        $ref: "#/components/schemas/BlockchainTransactionBalanceUpdate"

    BlockchainTransactionBalanceUpdatesV2:
      type: array
      items:
        $ref: "#/components/schemas/BlockchainTransactionBalanceUpdateV2"

    BlockchainTransactionBalanceUpdate:
      properties:
        chain_sequence_number:
          $ref: '#/components/schemas/BlockchainChainSequenceNumber'
        account:
          $ref: '#/components/schemas/BlockchainAccount'
        account_creation_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        change:
          $ref: '#/components/schemas/BlockchainBalanceChange'
        previous_balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
        new_balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
        transaction_sequence_number:
          $ref: '#/components/schemas/BlockchainTransactionSequenceNumber'
        previous_n_debits:
          $ref: '#/components/schemas/BlockchainNumberOfDebits'
        previous_n_credits:
          $ref: '#/components/schemas/BlockchainNumberOfCredits'
        previous_debit_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        previous_credit_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        previous_chain_sequence_number:
          $ref: '#/components/schemas/BlockchainTransactionSequenceNumber'
      required:
        - chain_sequence_number
        - account
        - account_creation_height
        - change
        - previous_balance
        - new_balance
        - transaction_sequence_number
        - previous_n_debits
        - previous_n_credits

    BlockchainTransactionBalanceUpdateV2:
      properties:
        chain_sequence_number:
          $ref: '#/components/schemas/BlockchainChainSequenceNumber'
        account:
          $ref: '#/components/schemas/BlockchainAccount'
        account_creation_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        change:
          $ref: '#/components/schemas/BlockchainBalanceChange'
        previous_balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
        new_balance:
          $ref: '#/components/schemas/BlockchainAccountBalance'
        transaction_sequence_number:
          $ref: '#/components/schemas/BlockchainTransactionSequenceNumber'
        n_debits:
          $ref: '#/components/schemas/BlockchainNumberOfDebits'
        n_credits:
          $ref: '#/components/schemas/BlockchainNumberOfCredits'
        previous_debit_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        previous_credit_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        previous_chain_sequence_number:
          $ref: '#/components/schemas/BlockchainTransactionSequenceNumber'
        sub_account:
          $ref: '#/components/schemas/BlockchainBalanceUpdateSubAccount'
        stale:
          $ref: '#/components/schemas/BlockchainStaleBlock'
      required:
        - chain_sequence_number
        - account
        - account_creation_height
        - change
        - previous_balance
        - new_balance
        - transaction_sequence_number
        - n_debits
        - n_credits

    BlockchainFullBlockResponseV2:
      allOf:
        - $ref: "#/components/schemas/BlockchainBlockInfoV2"
        - type: object
          description: Blockchain full block response.
          properties:
            transactions:
              $ref: '#/components/schemas/BlockchainFullTransactionsV2'
            balance_updates:
              $ref: '#/components/schemas/BlockchainTransactionBalanceUpdatesV2'

    BlockchainAccounts:
      description: Account ids.
      type: array
      items:
        $ref: "#/components/schemas/BlockchainAccount"

    BlockchainJobAccounts:
      description: Account ids. For ETH_CL, this can either be a validator public key or a validator index.
      type: array
      items:
        $ref: "#/components/schemas/BlockchainJobAccount"

    BlockchainTransactionIds:
      description: Transactions ids.
      type: array
      items:
        $ref: "#/components/schemas/BlockchainTransactionId"

    BlockchainAccount:
      description: Account id.
      type: string

    BlockchainJobAccount:
      description: Account id. For ETH_CL, this can either be a validator public key or a validator index.
      type: string

    BlockchainSubAccount:
      description: Sub-account id.
      type: string

    BlockchainSubAccountBalance:
      description: Sub-account latest balance.
      type: string

    BlockchainAccountType:
      description: "Account type. The possible values are: `UTXO`, `VIRTUAL`, `ACCOUNT`."
      type: string

    BlockchainAccountBalance:
      description: Balance of the account.
      type: string

    BlockchainNumberOfDebits:
      description: Number of debits.
      type: string

    BlockchainNumberOfCredits:
      description: Number of credits.
      type: string

    BlockchainTransactionPosition:
      description: Transaction position.
      type: string

    BlockchainChainSequenceNumber:
      description: Chain sequence number.
      type: string

    BlockchainBalanceUpdatesReason:
      description: Reason for balance update. Only supported for ETH_CL.
      type: string

    BlockchainStaleBlock:
      description: This field is set to true if the corresponding block is stale. Otherwise omitted.
      type: string

    BlockchainAccountsResponseV2:
      description: Blockchain accounts response.
      properties:
        data:
          items:
            type: object
            properties:
              account:
                $ref: '#/components/schemas/BlockchainAccount'
              type:
                $ref: '#/components/schemas/BlockchainAccountType'
              balance:
                $ref: '#/components/schemas/BlockchainAccountBalance'
              n_debits:
                $ref: '#/components/schemas/BlockchainNumberOfDebits'
              n_credits:
                $ref: '#/components/schemas/BlockchainNumberOfCredits'
              creation_height:
                $ref: '#/components/schemas/BlockchainBlockHeight'
              creation_block_hash:
                $ref: '#/components/schemas/BlockchainBlockHash'
              creation_time:
                $ref: '#/components/schemas/Time'
              creation_chain_sequence_number:
                $ref: '#/components/schemas/BlockchainChainSequenceNumber'
              last_chain_sequence_number:
                $ref: '#/components/schemas/BlockchainChainSequenceNumber'
              last_debit_height:
                $ref: '#/components/schemas/BlockchainBlockHeight'
              last_credit_height:
                $ref: '#/components/schemas/BlockchainBlockHeight'
            required:
              - account
              - type
              - creation_height
              - creation_block_hash
              - creation_time
              - creation_chain_sequence_number
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object


    BlockchainSubAccountsResponseV2:
      description: Blockchain sub-accounts response.
      properties:
        data:
          items:
            type: object
            properties:
              sub_account:
                $ref: '#/components/schemas/BlockchainSubAccount'
              account:
                $ref: '#/components/schemas/BlockchainAccount'
              type:
                $ref: '#/components/schemas/BlockchainAccountType'
              creation_height:
                $ref: '#/components/schemas/BlockchainBlockHeight'
              creation_time:
                $ref: '#/components/schemas/Time'
              creation_chain_sequence_number:
                $ref: '#/components/schemas/BlockchainChainSequenceNumber'
              creation_block_hash:
                $ref: '#/components/schemas/BlockchainBlockHash'
              balance:
                $ref: '#/components/schemas/BlockchainSubAccountBalance'
            required:
              - sub_account
              - account
              - type
              - creation_height
              - creation_block_hash
              - creation_time
              - creation_chain_sequence_number
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    BlockchainTransactionsResponseV2:
      description: Blockchain transactions response.
      properties:
        data:
          items:
            $ref: "#/components/schemas/BlockchainTransactionInfoV2"
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
        warning:
          $ref: '#/components/schemas/WarningObject'
      required:
        - data
      type: object

    BlockchainTransactionHash:
      description: Hash of the transaction.
      type: string

    BlockchainTransactionId:
      description: Identifier (txid) of the transaction.
      type: string

    TxTrackerTxid:
      description: Identifier (txid) of the transaction.
      type: string

    TxTrackerReplacementTxid:
      description: >-
        <b>BTC asset only.</b><br/>
        Identifier (txid) of the transaction.
      type: string

    BlockchainNumberOfBalanceUpdates:
      description: Number of balance updates.
      type: string

    BlockchainNumberOfTransactions:
      description: Number of transactions.
      type: string

    BlockchainTransactionAmount:
      description: Sum of all debits in the transaction.
      type: string

    BlockchainTransactionInfo:
      allOf:
        - $ref: "#/components/schemas/BlockchainBlockTransactionInfo"
        - type: object
          properties:
            block_hash:
              $ref: '#/components/schemas/BlockchainBlockHash'
            height:
              $ref: '#/components/schemas/BlockchainBlockHeight'
          required:
            - block_hash
            - height

    BlockchainTransactionInfoV2:
      allOf:
        - $ref: "#/components/schemas/BlockchainBlockTransactionInfoV2"
        - type: object
          properties:
            block_hash:
              $ref: '#/components/schemas/BlockchainBlockHash'
            height:
              $ref: '#/components/schemas/BlockchainBlockHeight'
            version:
              $ref: '#/components/schemas/BlockchainTransactionVersion'
            physical_size:
              $ref: '#/components/schemas/BlockchainTransactionPhysicalSize'
            consensus_size:
              $ref: '#/components/schemas/BlockchainTransactionConsensusSize'
            fee:
              $ref: '#/components/schemas/BlockchainTransactionFee'
            stale:
              $ref: '#/components/schemas/BlockchainStaleBlock'
          required:
            - block_hash
            - height

    BlockchainBlockTransactionInfo:
      properties:
        transaction_hash:
          $ref: '#/components/schemas/BlockchainTransactionHash'
        consensus_time:
          $ref: '#/components/schemas/Time'
        min_chain_sequence_number:
          $ref: '#/components/schemas/BlockchainChainSequenceNumber'
        max_chain_sequence_number:
          $ref: '#/components/schemas/BlockchainChainSequenceNumber'
        n_balance_updates:
          $ref: '#/components/schemas/BlockchainNumberOfBalanceUpdates'
        amount:
          $ref: '#/components/schemas/BlockchainTransactionAmount'
        stale:
          $ref: '#/components/schemas/BlockchainStaleBlock'
      required:
        - transaction_hash
        - consensus_time
        - min_chain_sequence_number
        - max_chain_sequence_number
        - n_balance_updates
        - amount

    BlockchainBlockTransactionInfoV2:
      properties:
        txid:
          $ref: '#/components/schemas/BlockchainTransactionId'
        consensus_time:
          $ref: '#/components/schemas/Time'
        miner_time:
          $ref: '#/components/schemas/Time'
        tx_position:
          $ref: '#/components/schemas/BlockchainTransactionPosition'
        min_chain_sequence_number:
          $ref: '#/components/schemas/BlockchainChainSequenceNumber'
        max_chain_sequence_number:
          $ref: '#/components/schemas/BlockchainChainSequenceNumber'
        n_balance_updates:
          $ref: '#/components/schemas/BlockchainNumberOfBalanceUpdates'
        amount:
          $ref: '#/components/schemas/BlockchainTransactionAmount'
        stale:
          $ref: '#/components/schemas/BlockchainStaleBlock'
      required:
        - txid
        - consensus_time
        - tx_position
        - n_balance_updates
        - amount

    BlockchainFullTransactionResponseV2:
      allOf:
        - $ref: "#/components/schemas/BlockchainBlockTransactionInfoV2"
        - type: object
          description: Blockchain full transaction response.
          properties:
            balance_updates:
              $ref: '#/components/schemas/BlockchainTransactionBalanceUpdatesV2'

    BlockchainFullSingleTransactionResponse:
      allOf:
        - $ref: "#/components/schemas/BlockchainTransactionInfo"
        - type: object
          description: Blockchain full transaction response.
          properties:
            balance_updates:
              $ref: '#/components/schemas/BlockchainTransactionBalanceUpdates'

    BlockchainFullSingleTransactionResponseV2:
      allOf:
        - $ref: "#/components/schemas/BlockchainTransactionInfoV2"
        - type: object
          description: Blockchain full transaction response.
          properties:
            balance_updates:
              $ref: '#/components/schemas/BlockchainTransactionBalanceUpdatesV2'

    BlockchainBalanceChange:
      description: Balance change.
      type: string

    BlockchainTransactionSequenceNumber:
      description: >-
        It is used to order balance updates inside a single transaction to distinguish between serial and parallel balance updates.
      type: string

    BlockchainBalanceUpdatesResponseV2:
      description: Blockchain transactions response.
      properties:
        data:
          $ref: "#/components/schemas/BlockchainBalanceUpdatesV2"
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
        warning:
          $ref: '#/components/schemas/WarningObject'
      required:
        - data
      type: object

    TxTrackerTxStatusUpdate:
      properties:
        time:
          $ref: '#/components/schemas/Time'
        status:
          $ref: '#/components/schemas/TxTrackerTxStatus'
        block_hash:
          $ref: '#/components/schemas/BlockchainBlockHash'
        height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        removal_reason:
          $ref: '#/components/schemas/TxTrackerRemovalReason'
        replacement_txid:
          $ref: '#/components/schemas/TxTrackerReplacementTxid'
      required:
        - time
        - status

    TxTrackerTxStatusUpdates:
      description: A list of status updates for the transaction.
      type: array
      items:
        $ref: "#/components/schemas/TxTrackerTxStatusUpdate"

    TxTrackerTxAmount:
      description: The total amount of the transaction.
      type: string

    TxTrackerReplaceByFeeSupported:
      description: This field is set to true only if the transaction supports the replace-by-fee (RBF) feature.
      type: boolean

    TxTrackerTxDetails:
      description: Static information about the transaction.
      properties:
        version:
          $ref: '#/components/schemas/BlockchainTransactionVersion'
        amount:
          $ref: '#/components/schemas/TxTrackerTxAmount'
        replace_by_fee_supported:
          $ref: '#/components/schemas/TxTrackerReplaceByFeeSupported'
        fee:
          $ref: '#/components/schemas/BlockchainTransactionFee'
        feerate:
          $ref: '#/components/schemas/BlockchainTransactionFeerate'
        mempool_feerate_mean_at_first_seen_time:
          $ref: '#/components/schemas/BlockchainMempoolFeerate'
        mempool_feerate_min_at_first_seen_time:
          $ref: '#/components/schemas/BlockchainMempoolFeerate'
        consensus_size:
          $ref: '#/components/schemas/BlockchainTransactionConsensusSize'
        physical_size:
          $ref: '#/components/schemas/BlockchainTransactionPhysicalSize'
      required:
        - amount

    TxTrackerTxStatus:
      description: "Transaction status. Can have the following values: `UNCONFIRMED`, `CONFIRMED`, `REMOVED` (BTC asset only)."
      type: string

    TxTrackerMempoolApproximateQueuePosition:
      description: >-
        <b>BTC asset only.</b><br/>
        Approximate position of the transaction in the mempool.<br/>
        Miners choose mempool transactions to be included in the next block by scanning mempool and sort pending transactions by feerate in descending order.<br/>
        The value starts with 0. A lower number means higher feerate.
      type: string

    TxTrackerNextBlockApproxSettlementProbabilityPercentage:
      description: >-
        <b>BTC asset only.</b><br/>
        Approximate probability of including the mempool transaction to the next mined block.<br/>
        Miners choose mempool transactions to be included in the next block by scanning mempool and sort pending transactions by feerate in descending order.<br/>
        The value starts is a percentage between 0 and 100. A higher number means a higher probability.
      type: string

    TxTrackerNConfirmations:
      description: >-
        The number of blocks between the transaction's block and the latest block in the blockchain plus one.<br/>
        If the transaction is included in the last block, the value is 1.
      type: string

    TxTrackerRemovalReason:
      description: >-
        <b>BTC asset only.</b><br/>
        Why the transaction has been removed. This field is only present for `REMOVED` status. The possible values are: `EXPIRY`, `SIZE_LIMIT`, `REORG`, `CONFLICT`, `REPLACED`.
      type: string

    NodeLocation:
      description: >-
        A physical location of the blockchain node that have captured the transaction entering the mempool.
      type: string

    BlockchainNodeLocationSeenTime:
      description: Transaction tracker response.
      properties:
        location:
          $ref: "#/components/schemas/NodeLocation"
        seen_time:
          $ref: '#/components/schemas/Time'
      required:
        - location
        - seen_time
      type: object

    BlockchainNodeLocationSeenTimes:
      description: <b>BTC asset only.</b>
      type: array
      items:
        $ref: "#/components/schemas/BlockchainNodeLocationSeenTime"

    TxTrackerTransaction:
      properties:
        txid:
          $ref: '#/components/schemas/TxTrackerTxid'
        time:
          $ref: '#/components/schemas/Time'
        first_seen_time:
          $ref: '#/components/schemas/Time'
        status:
          $ref: '#/components/schemas/TxTrackerTxStatus'
        status_update_time:
          $ref: '#/components/schemas/Time'
        mempool_approx_queue_position:
          $ref: '#/components/schemas/TxTrackerMempoolApproximateQueuePosition'
        next_block_approx_settlement_probability_pct:
          $ref: '#/components/schemas/TxTrackerNextBlockApproxSettlementProbabilityPercentage'
        block_hash:
          $ref: '#/components/schemas/BlockchainBlockHash'
        height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        n_confirmations:
          $ref: '#/components/schemas/TxTrackerNConfirmations'
        status_updates:
          $ref: '#/components/schemas/TxTrackerTxStatusUpdates'
        details:
          $ref: '#/components/schemas/TxTrackerTxDetails'
        geo:
          $ref: '#/components/schemas/BlockchainNodeLocationSeenTimes'
        replacement_for_txid:
          $ref: '#/components/schemas/TxTrackerReplacementTxid'
        inputs:
          $ref: "#/components/schemas/TxTrackerTxOutputs"
        outputs:
          $ref: "#/components/schemas/TxTrackerTxOutputs"
      required:
        - txid
        - time
        - first_seen_time
        - status
        - status_update_time
        - status_updates
        - details

    TxTrackerTxOutputs:
      description: >-
        <b>BTC asset only.</b><br/>
        A list of tx outputs associated with the transaction.
      type: array
      items:
        $ref: "#/components/schemas/TxTrackerTxOutput"

    TxTrackerTxOutput:
      properties:
        address:
          $ref: "#/components/schemas/TxTrackerTxAddress"
      required:
        - address

    TxTrackerTxAddress:
      description: Identifier of the address associated with the transaction.
      type: string

    TxTrackerTransactions:
      type: array
      items:
        $ref: "#/components/schemas/TxTrackerTransaction"

    TxTrackerResponse:
      description: Transaction tracker response.
      properties:
        data:
          $ref: "#/components/schemas/TxTrackerTransactions"
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    MempoolFeerateBandFeerate:
      description: Rounded feerate value used to aggregate the transactions into the current mempool feerate band. Unit is sat/vB.
      type: string

    MempoolFeerateBandCount:
      description: Amount of transactions included into the current mempool feerate band.
      type: string

    MempoolFeerateBandConsensusSize:
      description: Consensus sizes summed up for all the transactions included into the current mempool feerate band. vSizes sum can be derived as 'vSize = consensusSize / 4'.
      type: string

    MempoolFeerateBandPhysicalSize:
      description: Physical sizes summed up for all the transactions included into the current mempool feerate band.
      type: string

    MempoolFeerateBandFees:
      description: Fees summed up for all the transactions included into the current mempool feerate band. Unit is BTC.
      type: string

    MempoolFeerateBand:
      properties:
        feerate:
          $ref: '#/components/schemas/MempoolFeerateBandFeerate'
        count:
          $ref: '#/components/schemas/MempoolFeerateBandCount'
        consensus_size:
          $ref: '#/components/schemas/MempoolFeerateBandConsensusSize'
        physical_size:
          $ref: '#/components/schemas/MempoolFeerateBandPhysicalSize'
        fees:
          $ref: '#/components/schemas/MempoolFeerateBandFees'
      required:
        - feerate
        - count
        - consensus_size
        - fees

    MempoolFeerateBands:
      type: array
      items:
        $ref: "#/components/schemas/MempoolFeerateBand"

    MempoolFeerate:
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        time:
          $ref: '#/components/schemas/Time'
        feerates:
          $ref: '#/components/schemas/MempoolFeerateBands'
      required:
        - asset
        - time
        - feerates

    MempoolFeerates:
      type: array
      items:
        $ref: "#/components/schemas/MempoolFeerate"

    MempoolFeeratesResponse:
      description: Mempool feerates response.
      properties:
        data:
          $ref: "#/components/schemas/MempoolFeerates"
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    AssetAlertName:
      description: Asset alert name.
      type: string

    AssetAlertValue:
      description: >-
        Captured value of the alerting metric.
        Omitted if the ratio-based alert's divisor constituent was equal to zero or if the corresponding alert rule consists of multiple conditions.
      type: string

    AssetAlertThreshold:
      description: >-
        Asset alert's Key Risk Indicator threshold value.
        Omitted if the corresponding alert rule consists of multiple conditions.
      type: string

    AssetAlertStatus:
      description: Becomes 'active' if there was a breach of the Key Risk Indicator, otherwise stays 'inactive'.
      type: string

    AssetAlert:
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        time:
          $ref: '#/components/schemas/Time'
        block_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        alert:
          $ref: '#/components/schemas/AssetAlertName'
        value:
          $ref: '#/components/schemas/AssetAlertValue'
        threshold:
          $ref: '#/components/schemas/AssetAlertThreshold'
        status:
          $ref: '#/components/schemas/AssetAlertStatus'
      required:
        - asset
        - time
        - alert
        - status

    DefiProtocol:
      description: DeFi protocol name (e.g. `aave_v2_eth` or `uniswap_v3_eth`).
      type: string

    DefiBalanceSheetBlockHeight:
      description: The block height at which this DeFi balance sheet is calculated.
      type: string

    DefiBalanceSheetTime:
      description: The time near or equal to the block creation time this DeFi balance sheet is calculated at. The time in ISO 8601 date-time format. Always with nanoseconds precision.
      type: string

    DefiBalanceSheetAssetsTotalUsd:
      description: Total USD value of all assets in the DeFi balance sheet.
      type: string

    DefiBalanceSheetAssetsTotalCount:
      description: Total count of all assets in the DeFi balance sheet.
      type: string

    DefiBalanceSheetLoansLentTotalUsd:
      description: Total USD value of loans lent in the DeFi balance sheet.
      type: string

    DefiBalanceSheetTvlTotalUsd:
      description: Total USD value of TVL in the DeFi balance sheet.
      type: string

    DefiBalanceSheetAssets:
      description: DeFi balance sheet assets.
      type: array
      items:
        $ref: "#/components/schemas/DefiBalanceSheetAssetItem"

    DefiBalanceSheetLiabilitiesTotalUsd:
      description: Total USD value of all liabilities in the DeFi balance sheet.
      type: string

    DefiBalanceSheetLiabilitiesTotalCount:
      description: Total count of all liabilities in the DeFi balance sheet.
      type: string

    DefiBalanceSheetLiabilities:
      description: DeFi balance sheet liabilities.
      type: array
      items:
        $ref: "#/components/schemas/DefiBalanceSheetLiabilityItem"

    DefiBalanceSheetItemBalanceUnits:
      description: Balance units value.
      type: string

    DefiBalanceSheetItemBalanceUsd:
      description: Balance USD value.
      type: string

    DefiBalanceSheetItemShare:
      description: The percentage that this item represents relative to the total value.
      type: string

    DefiBalanceSheetAssetItem:
      description: DeFi balance sheet asset item.
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        total_units:
          $ref: '#/components/schemas/DefiBalanceSheetItemBalanceUnits'
        loans_lent_units:
          $ref: '#/components/schemas/DefiBalanceSheetItemBalanceUnits'
        tvl_units:
          $ref: '#/components/schemas/DefiBalanceSheetItemBalanceUnits'
        total_usd:
          $ref: '#/components/schemas/DefiBalanceSheetItemBalanceUsd'
        loans_lent_usd:
          $ref: '#/components/schemas/DefiBalanceSheetItemBalanceUsd'
        tvl_usd:
          $ref: '#/components/schemas/DefiBalanceSheetItemBalanceUsd'
        total_share:
          $ref: '#/components/schemas/DefiBalanceSheetItemShare'
        loans_lent_share:
          $ref: '#/components/schemas/DefiBalanceSheetItemShare'
        tvl_share:
          $ref: '#/components/schemas/DefiBalanceSheetItemShare'
      required:
        - asset
        - total_units

    DefiBalanceSheetLiabilityItem:
      description: DeFi balance sheet liability item.
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        total_units:
          $ref: '#/components/schemas/DefiBalanceSheetItemBalanceUnits'
        total_usd:
          $ref: '#/components/schemas/DefiBalanceSheetItemBalanceUsd'
        total_share:
          $ref: '#/components/schemas/DefiBalanceSheetItemShare'
      required:
        - asset
        - total_units

    DefiBalanceSheetProtocolUtilizationRatio:
      description: DeFi balance sheet protocol utilization ratio.
      type: string

    DefiBalanceSheetLiquidSupplyRatio:
      description: DeFi balance sheet liquid supply ratio.
      type: string

    DefiBalanceSheetCurrentRatio:
      description: DeFi balance sheet current ratio.
      type: string

    DefiBalanceSheetNetWorkingCapitalUsd:
      description: DeFi balance sheet net working capital USD value.
      type: string

    DefiBalanceSheetDebtToAssetRatio:
      description: DeFi balance sheet debt to asset.
      type: string

    DefiBalanceSheet:
      properties:
        defi_protocol:
          $ref: '#/components/schemas/DefiProtocol'
        block_height:
          $ref: '#/components/schemas/DefiBalanceSheetBlockHeight'
        time:
          $ref: '#/components/schemas/DefiBalanceSheetTime'
        assets_total_usd:
          $ref: '#/components/schemas/DefiBalanceSheetAssetsTotalUsd'
        assets_total_count:
          $ref: '#/components/schemas/DefiBalanceSheetAssetsTotalCount'
        liabilities_total_usd:
          $ref: '#/components/schemas/DefiBalanceSheetLiabilitiesTotalUsd'
        liabilities_total_count:
          $ref: '#/components/schemas/DefiBalanceSheetLiabilitiesTotalCount'
        loans_lent_total_usd:
          $ref: '#/components/schemas/DefiBalanceSheetLoansLentTotalUsd'
        tvl_total_usd:
          $ref: '#/components/schemas/DefiBalanceSheetTvlTotalUsd'
        net_working_capital_usd:
          $ref: '#/components/schemas/DefiBalanceSheetNetWorkingCapitalUsd'
        protocol_utilization_ratio:
          $ref: '#/components/schemas/DefiBalanceSheetProtocolUtilizationRatio'
        liquid_supply_ratio:
          $ref: '#/components/schemas/DefiBalanceSheetLiquidSupplyRatio'
        current_ratio:
          $ref: '#/components/schemas/DefiBalanceSheetCurrentRatio'
        debt_to_assets_ratio:
          $ref: '#/components/schemas/DefiBalanceSheetDebtToAssetRatio'
        assets:
          $ref: '#/components/schemas/DefiBalanceSheetAssets'
        liabilities:
          $ref: '#/components/schemas/DefiBalanceSheetLiabilities'
      required:
        - defi_protocol
        - block_height
        - time
        - assets_total_usd
        - assets_total_count
        - liabilities_total_usd
        - liabilities_total_count
        - loans_lent_total_usd
        - tvl_total_usd
        - net_working_capital_usd
        - assets
        - liabilities

    AssetAlerts:
      type: array
      items:
        $ref: "#/components/schemas/AssetAlert"

    AssetAlertHeartbeats:
      type: array
      items:
        $ref: "#/components/schemas/AssetAlertHeartbeat"

    AssetAlertHeartbeat:
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        time:
          $ref: '#/components/schemas/Time'
        block_height:
          $ref: '#/components/schemas/BlockchainBlockHeight'
        alert:
          $ref: '#/components/schemas/AssetAlertName'
      required:
        - asset
        - time
        - alert

    DefiBalanceSheets:
      type: array
      items:
        $ref: "#/components/schemas/DefiBalanceSheet"

    AssetAlertsResponse:
      description: Asset alerts response.
      properties:
        heartbeats:
          $ref: "#/components/schemas/AssetAlertHeartbeats"
        data:
          $ref: "#/components/schemas/AssetAlerts"
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    DefiBalanceSheetsResponse:
      description: DeFi balance sheets response.
      properties:
        data:
          $ref: "#/components/schemas/DefiBalanceSheets"
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    SecurityMasterAssetsResponse:
      description: Security Master assets response
      properties:
        data:
          $ref: '#/components/schemas/SecurityMasterAssets'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    SecurityMasterAssets:
      type: array
      items:
        $ref: '#/components/schemas/SecurityMasterAssetData'

    SecurityMasterAssetData:
      type: object
      properties:
        asset:
          description: Asset name
          example: btc
          type: string
        code:
          $ref: '#/components/schemas/SecurityMasterAssetCode'
        description:
          description: Description of the asset.
          type: string
        overview:
          description: Overview of the asset.
          type: string
        website:
          description: Official website URL of the asset.
          type: string
        whitepaper:
          description: Official whitepaper URL of the asset.
          type: string
        decimals:
          description: Number of decimals
          type: string
        creation_date:
          description: Date of the asset creation (first block) in ISO 8601 format.
          type: string
        type:
          description: Asset type
          type: string
        parent_asset:
          description: Parent asset name
          type: string
        pricing_asset:
          description: Pricing asset name
          type: string
        erc20_token_contract:
          description: ERC20 contract
          type: string
        fiat:
          description: Fiat flag
          type: boolean
      required:
        - asset

    SecurityMasterMarketsResponse:
      description: List of markets and their metadata in security master
      properties:
        data:
          $ref: '#/components/schemas/SecurityMasterMarkets'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data
      type: object

    JobsDetailsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobsDetails'
      required:
        - data

    JobsDetails:
      type: array
      items:
        $ref: '#/components/schemas/JobDetails'

    JobDetails:
      type: object
      properties:
        id:
          description: Job ID
          type: string
        status:
          $ref: '#/components/schemas/JobStatus'
        creation_time:
          description: Job creation time. Returned for all statuses.
          type: string
        completion_time:
          description: Job completion time. Returned for the "completed", "failed" and "expired" statuses.
          type: string
        expiration_time:
          description: Results expiration time. Returned for the "completed" and "expired" statuses.
          type: string
        error:
          description: Error. Returned only for "failed" status.
          allOf:
            - $ref: '#/components/schemas/ErrorObject'
        results:
          description: Array with results of the job execution. Returned only for the "completed" status.
          type: array
          items:
            $ref: '#/components/schemas/JobResult'
      required:
        - id
        - status
        - creation_time

    JobStatus:
      type: string
      description: "Job status."
      enum:
        - running
        - completed
        - failed
        - expired

    JobResult:
      type: object
      properties:
        url:
          description: Job result URL
          type: string
      required:
        - url

    SecurityMasterMarkets:
      type: array
      items:
        $ref: '#/components/schemas/SecurityMasterMarketData'

    SecurityMasterAssetCode:
      description: Ten-digit alphanumeric asset identifying code
      type: string
      example: C758EA35B0

    SecurityMasterMarketData:
      type: object
      properties:
        market:
          $ref: '#/components/schemas/MarketId'
        code:
          $ref: '#/components/schemas/SecurityMasterAssetCode'
        pair:
          $ref: '#/components/schemas/Pair'
        trades_min_time:
          description: The minimal available time of trades
          type: string
        trades_max_time:
          description: The maximal available time of trades
          type: string
        orderbooks_min_time:
          description: The minimal available time of market orderbooks
          type: string
        orderbooks_max_time:
          description: The maximal available time of market orderbooks
          type: string
        quotes_min_time:
          description: The minimal available time of market quotes
          type: string
        quotes_max_time:
          description: The maximal available time of market quotes
          type: string
        funding_rates_min_time:
          description: The minimal available time of markets with funding rates support
          type: string
        funding_rates_max_time:
          description: The maximal available time of markets with funding rates support
          type: string
        openinterest_min_time:
          description: The minimal available time of markets with open interests support
          type: string
        openinterest_max_time:
          description: The maximal available time of markets with open interests support
          type: string
        liquidations_min_time:
          description: The minimal available time of markets with liquidations support
          type: string
        liquidations_max_time:
          description: The maximal available time of markets with liquidations support
          type: string
        exchange:
          $ref: '#/components/schemas/Exchange'
        base:
          $ref: '#/components/schemas/AssetIdBase'
        quote:
          $ref: '#/components/schemas/AssetIdQuote'
        symbol:
          $ref: '#/components/schemas/MarketSymbol'
        type:
          $ref: '#/components/schemas/MarketType'
        size_asset:
          $ref: '#/components/schemas/DerivativeContractSizeAsset'
        margin_asset:
          $ref: '#/components/schemas/DerivativeContractMarginAsset'
        strike:
          $ref: '#/components/schemas/OptionStrike'
        option_contract_type:
          $ref: '#/components/schemas/OptionContractType'
        is_european:
          $ref: '#/components/schemas/IsEuropean'
        contract_size:
          $ref: '#/components/schemas/MarketContractSize'
        tick_size:
          $ref: '#/components/schemas/FutureTickSize'
        multiplier_size:
          $ref: '#/components/schemas/FutureMultiplierSize'
        listing:
          $ref: '#/components/schemas/DerivativeContractListing'
        expiration:
          $ref: '#/components/schemas/DerivativeContractExpiration'
        settlement_price:
          $ref: '#/components/schemas/SettlementPrice'
        pool_config_id:
          $ref: '#/components/schemas/DefiPoolConfigId'
        contract_address:
          $ref: '#/components/schemas/DefiContractAddress'
        fee:
          $ref: '#/components/schemas/DefiFee'
        price_includes_fee:
          $ref: '#/components/schemas/DefiPriceIncludesFee'
        variable_fee:
          $ref: '#/components/schemas/DefiVariableFee'
        base_address:
          $ref: '#/components/schemas/DefiBaseAddress'
        quote_address:
          $ref: '#/components/schemas/DefiQuoteAddress'
        status:
          $ref: '#/components/schemas/Status'
        order_amount_increment:
          $ref: '#/components/schemas/OrderAmountIncrement'
        order_amount_min:
          $ref: '#/components/schemas/OrderAmountMin'
        order_amount_max:
          $ref: '#/components/schemas/OrderAmountMax'
        order_price_increment:
          $ref: '#/components/schemas/OrderPriceIncrement'
        order_price_min:
          $ref: '#/components/schemas/OrderPriceMin'
        order_price_max:
          $ref: '#/components/schemas/OrderPriceMax'
        order_size_min:
          $ref: '#/components/schemas/OrderSizeMin'
        order_taker_fee:
          $ref: '#/components/schemas/OrderTakerFee'
        order_maker_fee:
          $ref: '#/components/schemas/OrderMakerFee'
        margin_trading_enabled:
          $ref: '#/components/schemas/MarginTradingEnabled'
        experimental:
          $ref: '#/components/schemas/ExperimentalMarket'
        price_open:
          $ref: '#/components/schemas/CandlePriceOpen'
        price_close:
          $ref: '#/components/schemas/CandlePriceClose'
        price_high:
          $ref: '#/components/schemas/CandlePriceHigh'
        price_low:
          $ref: '#/components/schemas/CandlePriceLow'
        vwap:
          $ref: '#/components/schemas/CandleVwap'
        volume:
          $ref: '#/components/schemas/CandleVolume'
        candle_usd_volume:
          $ref: '#/components/schemas/CandleUsdVolume'
        candle_trades_count:
          $ref: '#/components/schemas/CandleTradesCount'
        base_native:
          $ref: '#/components/schemas/AssetIdBaseNative'
        quote_native:
          $ref: '#/components/schemas/AssetIdQuoteNative'
      required:
        - market
        - type
        - exchange

    ConstituentSnapshotsAssetMetricsResponse:
      description: Snapshots of asset metric constituents response.
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              time:
                $ref: '#/components/schemas/Time'
            required:
              - time
            additionalProperties:
              nullable: true
              type: string
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data

    ConstituentTimeframesAssetMetricsResponse:
      description: Timeframes of asset metric constituents response.
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              start_time:
                  $ref: '#/components/schemas/Time'
              end_time:
                  $ref: '#/components/schemas/Time'
            required:
              - start_time
            additionalProperties:
              nullable: true
              type: string
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data

    ConstituentSnapshotsUrl:
      description: The endpoint URL of the constituent snapshots.
      type: string

    ConstituentTimeframesUrl:
      description: The endpoint URL of the constituent timeframes.
      type: string

    DocsUrl:
      description: The documentation URL.
      type: string

    BlockchainMetadataTagsResponse:
      description: Blockchain metadata tags response.
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainMetadataTagInfo'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data

    BlockchainMetadataTagInfo:
      type: object
      properties:
        tag:
          type: string
          description: Name of the tag.
        type:
          type: string
          description: Type of the tag. Currently, the available tags are of type `ENTITY`.
        description:
          type: string
          description: Brief description of the tag.
      required:
        - tag
        - type

    BlockchainMetadataTaggedEntitiesResponse:
      description: Blockchain metadata tagged entities response
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainMetadataTaggedEntity'
        next_page_token:
          $ref: '#/components/schemas/NextPageToken'
        next_page_url:
          $ref: '#/components/schemas/NextPageUrl'
      required:
        - data

    BlockchainMetadataTaggedEntity:
      type: object
      properties:
        entity:
          type: string
          description: The entity tagged.
        tag:
          type: string
          description: Name of the tag.
        location:
          type: string
          description: Asset representation where the entity has been tagged.
        type:
          type: string
          description: Type of the tag. Currently, the available tags are of type `ENTITY`.
        tagger_type:
          type: string
          description: The information about the tagged entity was derived from in-house data `COINMETRICS` or collected using 3rd party sources - `THIRDY_PARTY`.
        tagger_method:
          type: string
          description: The information about the tagged entity was based on factual data `DETERMINISTIC` or based on heuristics `NON_DETERMINISTIC`.
        start_time:
          type: string
          description: The date-time in ISO 8601 format of when the entity was tagged.
        end_time:
          type: string
          description: The date-time in ISO 8601 format of when the entity had its tag removed, or the entity no longer exists after this time.
        start_block_height:
          type: string
          description: The block height when the entity was tagged.
        end_block_height:
          type: string
          description: The block height when the entity had its tag removed, or the entity no longer exists.
        start_block_hash:
          type: string
          description: The hash of the block when the entity was tagged.
        end_block_hash:
          type: string
          description: The hash of block the block when the entity had its tag removed, or the entity no longer exists.
      required:
        - entity
        - tag
        - location
        - type
        - tagger_type
        - tagger_method


    CreatedJobDetailsResponse:
      properties:
        job_id:
          type: string
          description: Job ID.
        job_url:
          type: string
          description: Job URL.
      required:
        - job_id
        - job_url

  securitySchemes:
    api_key:
      description: Coin Metrics API key can be specified as `?api_key=` query parameter.
      in: query
      name: api_key
      type: apiKey
# Auto-generated at 2025-08-14T14:36:32.625249069Z.
