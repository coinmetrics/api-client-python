"""
Auto-generated minimal schema constants from OpenAPI YAML.
DO NOT EDIT THIS FILE DIRECTLY - it is generated by build.py

This file contains only the schema components needed by the application,
extracted from the full OpenAPI specification for faster loading.
"""

from typing import Any, Dict

# Minimal OpenAPI schema components loaded at build time
OPENAPI_SCHEMA: Dict[str, Any] = {'components': {'schemas': {'MarketGreeks': {'description': 'Information about market greeks.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'vega': {'$ref': '#/components/schemas/GreeksVega'}, 'theta': {'$ref': '#/components/schemas/GreeksTheta'}, 'rho': {'$ref': '#/components/schemas/GreeksRho'}, 'delta': {'$ref': '#/components/schemas/GreeksDelta'}, 'gamma': {'$ref': '#/components/schemas/GreeksGamma'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}, 'exchange_time': {'$ref': '#/components/schemas/OptionTickerExchangeTime'}}, 'type': 'object', 'required': ['market', 'time', 'database_time']}, 'MarketTrade': {'description': 'Information about trade.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'coin_metrics_id': {'$ref': '#/components/schemas/TradesCoinMetricsId'}, 'amount': {'$ref': '#/components/schemas/TradeAmount'}, 'price': {'$ref': '#/components/schemas/TradePrice'}, 'side': {'$ref': '#/components/schemas/TradeSide'}, 'block_hash': {'$ref': '#/components/schemas/TradeBlockHash'}, 'block_height': {'$ref': '#/components/schemas/TradeBlockHeight'}, 'txid': {'$ref': '#/components/schemas/TradeTransactionId'}, 'initiator': {'$ref': '#/components/schemas/TradeInitiator'}, 'sender': {'$ref': '#/components/schemas/TradeSender'}, 'beneficiary': {'$ref': '#/components/schemas/TradeBeneficiary'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}, 'mark_price': {'$ref': '#/components/schemas/TradeMarkPrice'}, 'index_price': {'$ref': '#/components/schemas/TradeIndexPrice'}, 'iv_trade': {'$ref': '#/components/schemas/TradeImpliedVolatility'}, 'liquidation': {'$ref': '#/components/schemas/TradeLiquidation'}}, 'required': ['market', 'time', 'coin_metrics_id', 'amount', 'price', 'database_time'], 'type': 'object'}, 'MarketFundingRate': {'description': 'Information about funding rate.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'rate': {'$ref': '#/components/schemas/FundingRateRate'}, 'period': {'$ref': '#/components/schemas/FundingRatePeriod'}, 'interval': {'$ref': '#/components/schemas/FundingRateInterval'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}}, 'required': ['market', 'time', 'database_time'], 'type': 'object'}, 'PairCandle': {'description': 'Information about pair candle.', 'properties': {'pair': {'$ref': '#/components/schemas/PairId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'price_open': {'$ref': '#/components/schemas/CandlePriceOpen'}, 'price_close': {'$ref': '#/components/schemas/CandlePriceClose'}, 'price_high': {'$ref': '#/components/schemas/CandlePriceHigh'}, 'price_low': {'$ref': '#/components/schemas/CandlePriceLow'}}, 'type': 'object', 'required': ['pair', 'time', 'price_open', 'price_close', 'price_high', 'price_low', 'vwap', 'volume', 'candle_usd_volume', 'candle_trades_count']}, 'MarketOpenInterest': {'description': 'Information about open interest.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'contract_count': {'$ref': '#/components/schemas/ContractCount'}, 'value_usd': {'$ref': '#/components/schemas/ContractValueUSD'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}, 'exchange_time': {'$ref': '#/components/schemas/OpenInterestExchangeTime'}}, 'required': ['market', 'time', 'contract_count', 'value_usd', 'database_time'], 'type': 'object'}, 'MarketContractPrices': {'description': 'Information about market contract prices.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'mark_price': {'$ref': '#/components/schemas/MarkPrice'}, 'index_price': {'$ref': '#/components/schemas/IndexPrice'}, 'settlement_price_estimated': {'$ref': '#/components/schemas/SettlementPriceEstimated'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}, 'exchange_time': {'$ref': '#/components/schemas/OptionTickerExchangeTime'}}, 'type': 'object', 'required': ['market', 'time', 'database_time']}, 'BlockchainBalanceUpdateV2': {'allOf': [{'$ref': '#/components/schemas/BlockchainTransactionBalanceUpdateV2'}, {'type': 'object', 'properties': {'block_hash': {'$ref': '#/components/schemas/BlockchainBlockHash'}, 'height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}, 'consensus_time': {'$ref': '#/components/schemas/Time'}, 'txid': {'$ref': '#/components/schemas/BlockchainTransactionId'}, 'credit': {'$ref': '#/components/schemas/BlockchainBalanceUpdateCredit'}, 'total_received': {'$ref': '#/components/schemas/BlockchainTotalReceived'}, 'total_sent': {'$ref': '#/components/schemas/BlockchainTotalSent'}}, 'required': ['block_hash', 'height', 'consensus_time', 'credit', 'total_received', 'total_sent']}]}, 'MarketCandle': {'description': 'Information about market candle.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'price_open': {'$ref': '#/components/schemas/CandlePriceOpen'}, 'price_close': {'$ref': '#/components/schemas/CandlePriceClose'}, 'price_high': {'$ref': '#/components/schemas/CandlePriceHigh'}, 'price_low': {'$ref': '#/components/schemas/CandlePriceLow'}, 'vwap': {'$ref': '#/components/schemas/CandleVwap'}, 'volume': {'$ref': '#/components/schemas/CandleVolume'}, 'candle_usd_volume': {'$ref': '#/components/schemas/CandleUsdVolume'}, 'candle_trades_count': {'$ref': '#/components/schemas/CandleTradesCount'}}, 'type': 'object', 'required': ['market', 'time', 'price_open', 'price_close', 'price_high', 'price_low', 'vwap', 'volume', 'candle_usd_volume', 'candle_trades_count']}, 'BlockchainFullBlockResponseV2': {'allOf': [{'$ref': '#/components/schemas/BlockchainBlockInfoV2'}, {'type': 'object', 'description': 'Blockchain full block response.', 'properties': {'transactions': {'$ref': '#/components/schemas/BlockchainFullTransactionsV2'}, 'balance_updates': {'$ref': '#/components/schemas/BlockchainTransactionBalanceUpdatesV2'}}}]}, 'BlockchainFullSingleTransactionResponseV2': {'allOf': [{'$ref': '#/components/schemas/BlockchainTransactionInfoV2'}, {'type': 'object', 'description': 'Blockchain full transaction response.', 'properties': {'balance_updates': {'$ref': '#/components/schemas/BlockchainTransactionBalanceUpdatesV2'}}}]}, 'IndexCandle': {'description': 'Information about index candle.', 'properties': {'index': {'$ref': '#/components/schemas/IndexId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'price_open': {'$ref': '#/components/schemas/CandlePriceOpen'}, 'price_close': {'$ref': '#/components/schemas/CandlePriceClose'}, 'price_high': {'$ref': '#/components/schemas/CandlePriceHigh'}, 'price_low': {'$ref': '#/components/schemas/CandlePriceLow'}, 'candle_trades_count': {'$ref': '#/components/schemas/CandleTradesCount'}}, 'type': 'object', 'required': ['index', 'time', 'price_open', 'price_close', 'price_high', 'price_low', 'candle_trades_count']}, 'MarketLiquidation': {'description': 'Information about liquidation.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'coin_metrics_id': {'$ref': '#/components/schemas/LiquidationsCoinMetricsId'}, 'amount': {'$ref': '#/components/schemas/LiquidationAmount'}, 'price': {'$ref': '#/components/schemas/LiquidationPrice'}, 'side': {'$ref': '#/components/schemas/LiquidationSide'}, 'type': {'$ref': '#/components/schemas/LiquidationType'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}}, 'required': ['market', 'time', 'coin_metrics_id', 'amount', 'price', 'type', 'database_time'], 'type': 'object'}, 'MarketOrderBook': {'description': 'Information about order book.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'coin_metrics_id': {'$ref': '#/components/schemas/OrderBookAndQuoteCoinMetricsId'}, 'asks': {'$ref': '#/components/schemas/OrderBookAsks'}, 'bids': {'$ref': '#/components/schemas/OrderBookBids'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}}, 'type': 'object', 'required': ['market', 'time', 'coin_metrics_id', 'asks', 'bids', 'database_time']}, 'MarketImpliedVolatility': {'description': 'Information about market implied volatility.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'iv_trade': {'$ref': '#/components/schemas/ImpliedVolatilityTrade'}, 'iv_bid': {'$ref': '#/components/schemas/ImpliedVolatilityBid'}, 'iv_ask': {'$ref': '#/components/schemas/ImpliedVolatilityAsk'}, 'iv_mark': {'$ref': '#/components/schemas/ImpliedVolatilityMark'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}, 'exchange_time': {'$ref': '#/components/schemas/OptionTickerExchangeTime'}}, 'type': 'object', 'required': ['market', 'time', 'database_time']}, 'MarketFundingRatePredicted': {'description': 'Information about predicted funding rate.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'rate_predicted': {'$ref': '#/components/schemas/FundingRatePredictedEstimatedRate'}, 'rate_time': {'$ref': '#/components/schemas/Time'}, 'database_time': {'$ref': '#/components/schemas/DatabaseTime'}}, 'required': ['market', 'time', 'rate_predicted', 'database_time'], 'type': 'object'}, 'MarketQuote': {'description': 'Information about market quote.', 'properties': {'market': {'$ref': '#/components/schemas/MarketId'}, 'time': {'$ref': '#/components/schemas/Time'}, 'coin_metrics_id': {'$ref': '#/components/schemas/OrderBookAndQuoteCoinMetricsId'}, 'ask_price': {'$ref': '#/components/schemas/QuoteAskPrice'}, 'ask_size': {'$ref': '#/components/schemas/QuoteAskSize'}, 'bid_price': {'$ref': '#/components/schemas/QuoteBidPrice'}, 'bid_size': {'$ref': '#/components/schemas/QuoteBidSize'}}, 'type': 'object', 'required': ['market', 'time', 'coin_metrics_id']}, 'BlockchainBlockInfoV2': {'properties': {'block_hash': {'$ref': '#/components/schemas/BlockchainBlockHash'}, 'parent_block_hash': {'$ref': '#/components/schemas/BlockchainBlockHash'}, 'height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}, 'consensus_time': {'$ref': '#/components/schemas/Time'}, 'miner_time': {'$ref': '#/components/schemas/Time'}, 'nonce': {'$ref': '#/components/schemas/BlockchainBlockNonce'}, 'extra_data': {'$ref': '#/components/schemas/BlockchainBlockExtraData'}, 'n_transactions': {'$ref': '#/components/schemas/BlockchainNumberOfTransactions'}, 'n_balance_updates': {'$ref': '#/components/schemas/BlockchainNumberOfBalanceUpdates'}, 'version': {'$ref': '#/components/schemas/BlockchainBlockVersion'}, 'difficulty': {'$ref': '#/components/schemas/BlockchainBlockDifficulty'}, 'physical_size': {'$ref': '#/components/schemas/BlockchainBlockPhysicalSize'}, 'consensus_size': {'$ref': '#/components/schemas/BlockchainBlockConsensusSize'}, 'consensus_size_limit': {'$ref': '#/components/schemas/BlockchainBlockConsensusSizeLimit'}, 'stale': {'$ref': '#/components/schemas/BlockchainStaleBlock'}}, 'required': ['block_hash', 'height', 'consensus_time', 'export_time', 'miner_time', 'n_transactions', 'n_balance_updates']}, 'QuoteAskPrice': {'description': 'The limit price of the top ask on the order book. If no asks in the order book, the ask price is skipped.', 'type': 'string'}, 'CandlePriceClose': {'description': 'The closing price of the candle.', 'type': 'string'}, 'BlockchainTransactionVersion': {'description': 'Version of the transaction.', 'type': 'string'}, 'LiquidationType': {'description': 'The liquidation type. "trade" means that liquidation was executed, "order" means that the order was placed for the liquidation at the timestamp of the data entry but it wasn\'t necessarily executed yet.', 'type': 'string'}, 'IndexId': {'description': 'Name of the index.', 'type': 'string'}, 'BlockchainTransactionBalanceUpdateV2': {'properties': {'chain_sequence_number': {'$ref': '#/components/schemas/BlockchainChainSequenceNumber'}, 'account': {'$ref': '#/components/schemas/BlockchainAccount'}, 'account_creation_height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}, 'change': {'$ref': '#/components/schemas/BlockchainBalanceChange'}, 'previous_balance': {'$ref': '#/components/schemas/BlockchainAccountBalance'}, 'new_balance': {'$ref': '#/components/schemas/BlockchainAccountBalance'}, 'transaction_sequence_number': {'$ref': '#/components/schemas/BlockchainTransactionSequenceNumber'}, 'n_debits': {'$ref': '#/components/schemas/BlockchainNumberOfDebits'}, 'n_credits': {'$ref': '#/components/schemas/BlockchainNumberOfCredits'}, 'previous_debit_height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}, 'previous_credit_height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}, 'previous_chain_sequence_number': {'$ref': '#/components/schemas/BlockchainTransactionSequenceNumber'}, 'sub_account': {'$ref': '#/components/schemas/BlockchainBalanceUpdateSubAccount'}, 'stale': {'$ref': '#/components/schemas/BlockchainStaleBlock'}}, 'required': ['chain_sequence_number', 'account', 'account_creation_height', 'change', 'previous_balance', 'new_balance', 'transaction_sequence_number', 'n_debits', 'n_credits']}, 'ContractValueUSD': {'description': 'Contract value in USD.', 'type': 'string'}, 'GreeksVega': {'description': "The first derivative of the option's price to the volatility of the underlying asset's price.", 'type': 'string'}, 'QuoteBidSize': {'description': 'The size of the top bid on the order book. If no bids in the order book, the bid size is skipped.', 'type': 'string'}, 'MarkPrice': {'description': "The price representing the futures' or option's price calculated by the exchange for risk management purposes.", 'type': 'string'}, 'GreeksRho': {'description': "The first derivative of the option's price to the risk free interest rate.", 'type': 'string'}, 'FundingRateInterval': {'description': 'Interval of a funding rate for a given market.', 'type': 'string'}, 'BlockchainNumberOfCredits': {'description': 'Number of credits.', 'type': 'string'}, 'BlockchainBalanceUpdateCredit': {'description': 'Boolean indicating whether the update is a credit or a debit of the account.', 'type': 'boolean'}, 'TradeBlockHash': {'description': 'Swap block hash. Available for DeFi markets only.', 'type': 'string'}, 'BlockchainBlockNonce': {'description': 'Nonce of the block, hex-encoded.', 'type': 'string'}, 'FundingRateRate': {'description': 'Rate of a funding rate.', 'type': 'string'}, 'TradeSender': {'description': 'Swap caller. Available for DeFi markets only.', 'type': 'string'}, 'BlockchainTransactionBalanceUpdatesV2': {'type': 'array', 'items': {'$ref': '#/components/schemas/BlockchainTransactionBalanceUpdateV2'}}, 'BlockchainTotalReceived': {'description': 'Total amount received.', 'type': 'string'}, 'BlockchainTransactionSequenceNumber': {'description': 'It is used to order balance updates inside a single transaction to distinguish between serial and parallel balance updates.', 'type': 'string'}, 'TradePrice': {'description': 'The price of the base asset quoted in the quote asset that the trade was executed at.', 'type': 'string'}, 'IndexPrice': {'description': "The price index is an aggregate price derived from the major exchanges to be representative of the underlying asset's market consensus price.", 'type': 'string'}, 'BlockchainBlockTransactionInfoV2': {'properties': {'txid': {'$ref': '#/components/schemas/BlockchainTransactionId'}, 'consensus_time': {'$ref': '#/components/schemas/Time'}, 'miner_time': {'$ref': '#/components/schemas/Time'}, 'tx_position': {'$ref': '#/components/schemas/BlockchainTransactionPosition'}, 'min_chain_sequence_number': {'$ref': '#/components/schemas/BlockchainChainSequenceNumber'}, 'max_chain_sequence_number': {'$ref': '#/components/schemas/BlockchainChainSequenceNumber'}, 'n_balance_updates': {'$ref': '#/components/schemas/BlockchainNumberOfBalanceUpdates'}, 'amount': {'$ref': '#/components/schemas/BlockchainTransactionAmount'}, 'stale': {'$ref': '#/components/schemas/BlockchainStaleBlock'}}, 'required': ['txid', 'consensus_time', 'tx_position', 'n_balance_updates', 'amount']}, 'OrderBookAsks': {'description': 'The ask orders on the order book.', 'items': {'$ref': '#/components/schemas/BookEntry'}, 'type': 'array'}, 'QuoteBidPrice': {'description': 'The limit price of the top bid on the order book. If no bids in the order book, the bid price is skipped.', 'type': 'string'}, 'ImpliedVolatilityBid': {'description': 'Implied volatility calculated from bid price.', 'type': 'string'}, 'OptionTickerExchangeTime': {'description': "Time corresponding to option ticker data point, according to the exchange. Can be NULL, if exchange doesn't support it.", 'type': 'string'}, 'BlockchainChainSequenceNumber': {'description': 'Chain sequence number.', 'type': 'string'}, 'TradeImpliedVolatility': {'description': 'Implied volatility calculated from the trade price.', 'type': 'string'}, 'TradeBlockHeight': {'description': 'Swap block height. Available for DeFi markets only.', 'type': 'string'}, 'OrderBookSize': {'description': 'The size of the limit order on the order book in units of the base asset.', 'type': 'string'}, 'GreeksGamma': {'description': "The second derivative of the option's price to the underlying asset's price.", 'type': 'string'}, 'ImpliedVolatilityTrade': {'description': 'Implied volatility calculated from last trade price.', 'type': 'string'}, 'OrderBookAndQuoteCoinMetricsId': {'description': "ID of an order book or quote. It can be generated by Coin Metrics or provided by an exchange. If it is generated by Coin Metrics it is unique. If it is generated by exchange we can't guarantee its uniqueness.", 'type': 'string'}, 'ImpliedVolatilityAsk': {'description': 'Implied volatility calculated from ask price.', 'type': 'string'}, 'TradeIndexPrice': {'description': "The price index is an aggregate price derived from the major exchanges to be representative of the underlying asset's market consensus price.", 'type': 'string'}, 'SettlementPriceEstimated': {'description': 'The estimated price of the underlying asset.', 'type': 'string'}, 'BlockchainBlockConsensusSizeLimit': {'description': 'Consensus size limit of the block.', 'type': 'string'}, 'TradeLiquidation': {'description': 'Indicates whether the maker side, taker side, or both sides of the trade is under liquidation.', 'type': 'string'}, 'QuoteAskSize': {'description': 'The size of the top ask on the order book. If no asks in the order book, the ask size is skipped.', 'type': 'string'}, 'BlockchainAccount': {'description': 'Account id.', 'type': 'string'}, 'TradesCoinMetricsId': {'description': "ID of a trade (unique per exchange market). We are using exchange reported value if exchange reports a unique numeric trade id. If exchange reports trade id as a string we convert to numeric using Bijective mapping from exchange reported trade id's string. If exchange doesn't report unique ID we transform it using exchange reported data to form a unique value per market.", 'type': 'string'}, 'LiquidationsCoinMetricsId': {'description': "ID of a liquidation (unique per exchange market). We are using exchange reported value if exchange reports a unique numeric liquidation id. If exchange reports liquidation id as a string we convert to numeric using Bijective mapping from exchange reported liquidation id's string. If exchange doesn't report unique ID we transform it using exchange reported data to form a unique value per market.", 'type': 'string'}, 'LiquidationSide': {'description': 'The market order side. "buy" means that an ask was removed from the book by an incoming buy order, "sell" means that a bid was removed from the book by an incoming sell order.', 'type': 'string'}, 'BlockchainTotalSent': {'description': 'Total amount sent.', 'type': 'string'}, 'BlockchainBlockConsensusSize': {'description': 'Consensus size of the block.', 'type': 'string'}, 'BlockchainBalanceUpdateSubAccount': {'properties': {'sub_account': {'$ref': '#/components/schemas/BlockchainSubAccount'}, 'previous_balance': {'$ref': '#/components/schemas/BlockchainAccountBalance'}, 'new_balance': {'$ref': '#/components/schemas/BlockchainAccountBalance'}, 'n_debits': {'$ref': '#/components/schemas/BlockchainNumberOfDebits'}, 'n_credits': {'$ref': '#/components/schemas/BlockchainNumberOfCredits'}, 'previous_credit_height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}, 'previous_debit_height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}, 'previous_chain_sequence_number': {'$ref': '#/components/schemas/BlockchainTransactionSequenceNumber'}, 'total_received': {'$ref': '#/components/schemas/BlockchainTotalReceived'}, 'total_sent': {'$ref': '#/components/schemas/BlockchainTotalSent'}, 'creation_height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}}, 'required': ['chain_sequence_number', 'account', 'account_creation_height', 'change', 'transaction_sequence_number', 'previous_n_debits', 'previous_n_credits']}, 'CandleUsdVolume': {'description': 'The volume of the candle in USD.', 'type': 'string'}, 'TradeAmount': {'description': 'The amount of the base asset traded.', 'type': 'string'}, 'BlockchainTransactionPosition': {'description': 'Transaction position.', 'type': 'string'}, 'TradeInitiator': {'description': 'Swap transaction initiator. Available for DeFi markets only.', 'type': 'string'}, 'CandlePriceLow': {'description': 'The low price of the candle.', 'type': 'string'}, 'LiquidationPrice': {'description': 'The price of the base asset quoted in the quote asset that the liquidation was executed at.', 'type': 'string'}, 'BlockchainAccountBalance': {'description': 'Balance of the account.', 'type': 'string'}, 'BlockchainBlockHash': {'description': 'Hash of the block.', 'type': 'string'}, 'PairId': {'description': 'Unique name of the pair.', 'type': 'string'}, 'BlockchainNumberOfBalanceUpdates': {'description': 'Number of balance updates.', 'type': 'string'}, 'ImpliedVolatilityMark': {'description': 'Implied volatility calculated from mark price.', 'type': 'string'}, 'FundingRatePeriod': {'description': 'Period of a funding rate for a given market.', 'type': 'string'}, 'BlockchainTransactionFee': {'description': 'Fee of the transaction.', 'type': 'string'}, 'TradeTransactionId': {'description': 'Swap transaction ID. Available for DeFi markets only.', 'type': 'string'}, 'CandleTradesCount': {'description': 'The number of trades used for candle calculation.', 'type': 'string'}, 'Time': {'description': 'The time in ISO 8601 date-time format. Always with nanoseconds precision.', 'type': 'string'}, 'BlockchainFullTransactionResponseV2': {'allOf': [{'$ref': '#/components/schemas/BlockchainBlockTransactionInfoV2'}, {'type': 'object', 'description': 'Blockchain full transaction response.', 'properties': {'balance_updates': {'$ref': '#/components/schemas/BlockchainTransactionBalanceUpdatesV2'}}}]}, 'BlockchainSubAccount': {'description': 'Sub-account id.', 'type': 'string'}, 'BlockchainTransactionAmount': {'description': 'Sum of all debits in the transaction.', 'type': 'string'}, 'MarketId': {'description': 'Unique name of the market.', 'type': 'string'}, 'OrderBookPrice': {'description': 'The limit price of the order on the order book.', 'type': 'string'}, 'CandlePriceHigh': {'description': 'The high price of the candle.', 'type': 'string'}, 'DatabaseTime': {'description': 'A time when we saved the data in the database. The time is in ISO 8601 date-time format. Always with nanoseconds precision.', 'type': 'string'}, 'TradeSide': {'description': 'The market order side. "buy" means that an ask was removed from the book by an incoming buy order, "sell" means that a bid was removed from the book by an incoming sell order.', 'type': 'string'}, 'BlockchainTransactionInfoV2': {'allOf': [{'$ref': '#/components/schemas/BlockchainBlockTransactionInfoV2'}, {'type': 'object', 'properties': {'block_hash': {'$ref': '#/components/schemas/BlockchainBlockHash'}, 'height': {'$ref': '#/components/schemas/BlockchainBlockHeight'}, 'version': {'$ref': '#/components/schemas/BlockchainTransactionVersion'}, 'physical_size': {'$ref': '#/components/schemas/BlockchainTransactionPhysicalSize'}, 'consensus_size': {'$ref': '#/components/schemas/BlockchainTransactionConsensusSize'}, 'fee': {'$ref': '#/components/schemas/BlockchainTransactionFee'}, 'stale': {'$ref': '#/components/schemas/BlockchainStaleBlock'}}, 'required': ['block_hash', 'height']}]}, 'BookEntry': {'properties': {'price': {'$ref': '#/components/schemas/OrderBookPrice'}, 'size': {'$ref': '#/components/schemas/OrderBookSize'}}, 'required': ['price', 'size'], 'type': 'object'}, 'BlockchainBlockHeight': {'description': 'Height of the block.', 'type': 'string'}, 'BlockchainNumberOfTransactions': {'description': 'Number of transactions.', 'type': 'string'}, 'CandleVwap': {'description': 'The volume-weighted average price of the candle.', 'type': 'string'}, 'CandleVolume': {'description': 'The volume of the candle in units of the base asset.', 'type': 'string'}, 'OrderBookBids': {'description': 'The bids orders on the order book.', 'items': {'$ref': '#/components/schemas/BookEntry'}, 'type': 'array'}, 'LiquidationAmount': {'description': 'The amount of the base asset liquidated.', 'type': 'string'}, 'OpenInterestExchangeTime': {'description': "Time corresponding to open interest data point, according to the exchange. Can be NULL, if exchange doesn't support it.", 'type': 'string'}, 'BlockchainStaleBlock': {'description': 'This field is set to true if the corresponding block is stale. Otherwise omitted.', 'type': 'string'}, 'BlockchainNumberOfDebits': {'description': 'Number of debits.', 'type': 'string'}, 'BlockchainBlockPhysicalSize': {'description': 'Physical size of the block, bytes.', 'type': 'string'}, 'TradeBeneficiary': {'description': 'Swap output receiver. Available for DeFi markets only.', 'type': 'string'}, 'BlockchainBalanceChange': {'description': 'Balance change.', 'type': 'string'}, 'BlockchainFullTransactionsV2': {'type': 'array', 'items': {'$ref': '#/components/schemas/BlockchainFullTransactionResponseV2'}}, 'ContractCount': {'description': 'Number of contracts.', 'type': 'string'}, 'TradeMarkPrice': {'description': "The price representing the futures' or option's price calculated by the exchange for risk management purposes.", 'type': 'string'}, 'BlockchainTransactionConsensusSize': {'description': 'Consensus size of the transaction.', 'type': 'string'}, 'BlockchainBlockVersion': {'description': 'Version of the block.', 'type': 'string'}, 'GreeksTheta': {'description': "The first derivative of the option's price to the passage of time.", 'type': 'string'}, 'GreeksDelta': {'description': "The first derivative of the option's price to the underlying asset's price.", 'type': 'string'}, 'FundingRatePredictedEstimatedRate': {'description': 'Estimated rate of a predicted funding rate.', 'type': 'string'}, 'CandlePriceOpen': {'description': 'The opening price of the candle.', 'type': 'string'}, 'BlockchainBlockDifficulty': {'description': 'Difficulty of the block.', 'type': 'string'}, 'BlockchainTransactionPhysicalSize': {'description': 'Physical size of the transaction, bytes.', 'type': 'string'}, 'BlockchainBlockExtraData': {'description': 'Extra data of the block, hex-encoded.', 'type': 'string'}, 'BlockchainTransactionId': {'description': 'Identifier (txid) of the transaction.', 'type': 'string'}}}}
